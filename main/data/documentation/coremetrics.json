{"kind":"symbol","schemaVersion":{"patch":0,"major":0,"minor":3},"hierarchy":{"paths":[[]]},"metadata":{"role":"collection","title":"CoreMetrics","modules":[{"name":"CoreMetrics"}],"externalID":"CoreMetrics","roleHeading":"Framework","symbolKind":"module"},"variants":[{"paths":["\/documentation\/coremetrics"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/CoreMetrics","interfaceLanguage":"swift"},"sections":[],"topicSections":[{"title":"Classes","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/CoreMetrics\/Counter","doc:\/\/co.pointfree.VaporRouting\/documentation\/CoreMetrics\/FloatingPointCounter","doc:\/\/co.pointfree.VaporRouting\/documentation\/CoreMetrics\/Gauge","doc:\/\/co.pointfree.VaporRouting\/documentation\/CoreMetrics\/MultiplexMetricsHandler","doc:\/\/co.pointfree.VaporRouting\/documentation\/CoreMetrics\/NOOPMetricsHandler","doc:\/\/co.pointfree.VaporRouting\/documentation\/CoreMetrics\/Recorder","doc:\/\/co.pointfree.VaporRouting\/documentation\/CoreMetrics\/Timer"]},{"title":"Protocols","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/CoreMetrics\/CounterHandler","doc:\/\/co.pointfree.VaporRouting\/documentation\/CoreMetrics\/FloatingPointCounterHandler","doc:\/\/co.pointfree.VaporRouting\/documentation\/CoreMetrics\/MetricsFactory","doc:\/\/co.pointfree.VaporRouting\/documentation\/CoreMetrics\/RecorderHandler","doc:\/\/co.pointfree.VaporRouting\/documentation\/CoreMetrics\/TimerHandler"]},{"title":"Structures","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/CoreMetrics\/TimeUnit"]},{"title":"Enumerations","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/CoreMetrics\/MetricsSystem"]}],"references":{"doc://co.pointfree.VaporRouting/documentation/CoreMetrics/TimerHandler":{"kind":"symbol","url":"\/documentation\/coremetrics\/timerhandler","role":"symbol","navigatorTitle":[{"text":"TimerHandler","kind":"identifier"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"TimerHandler","kind":"identifier"}],"title":"TimerHandler","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/CoreMetrics\/TimerHandler","abstract":[{"text":"A ","type":"text"},{"code":"TimerHandler","type":"codeVoice"},{"text":" represents a backend implementation of a ","type":"text"},{"code":"Timer","type":"codeVoice"},{"text":".","type":"text"}],"type":"topic"},"doc://co.pointfree.VaporRouting/documentation/CoreMetrics/FloatingPointCounter":{"kind":"symbol","url":"\/documentation\/coremetrics\/floatingpointcounter","role":"symbol","navigatorTitle":[{"text":"FloatingPointCounter","kind":"identifier"}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"FloatingPointCounter","kind":"identifier"}],"title":"FloatingPointCounter","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/CoreMetrics\/FloatingPointCounter","abstract":[{"text":"A FloatingPointCounter is a cumulative metric that represents a single monotonically increasing FloatingPointCounter whose value can only increase or be reset to zero.","type":"text"},{"text":" ","type":"text"},{"text":"For example, you can use a FloatingPointCounter to represent the number of requests served, tasks completed, or errors.","type":"text"},{"text":" ","type":"text"},{"text":"FloatingPointCounter is not supported by all metrics backends, however a default implementation is provided which accumulates floating point values and records increments to a standard Counter after crossing integer boundaries.","type":"text"}],"type":"topic"},"doc://co.pointfree.VaporRouting/documentation/CoreMetrics/MultiplexMetricsHandler":{"type":"topic","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"MultiplexMetricsHandler"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/CoreMetrics\/MultiplexMetricsHandler","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"MultiplexMetricsHandler"}],"role":"symbol","url":"\/documentation\/coremetrics\/multiplexmetricshandler","abstract":[{"type":"text","text":"A pseudo-metrics handler that can be used to send messages to multiple other metrics handlers."}],"title":"MultiplexMetricsHandler"},"doc://co.pointfree.VaporRouting/documentation/CoreMetrics/Timer":{"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Timer"}],"abstract":[{"type":"text","text":"A timer collects observations within a time window (usually things like request durations) and provides aggregated information about the data sample,"},{"type":"text","text":" "},{"type":"text","text":"for example, min, max and various quantiles. It is similar to a "},{"code":"Recorder","type":"codeVoice"},{"type":"text","text":" but specialized for values that represent durations."}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/CoreMetrics\/Timer","title":"Timer","navigatorTitle":[{"kind":"identifier","text":"Timer"}],"type":"topic","url":"\/documentation\/coremetrics\/timer","kind":"symbol","role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/CoreMetrics/RecorderHandler":{"navigatorTitle":[{"text":"RecorderHandler","kind":"identifier"}],"abstract":[{"text":"A ","type":"text"},{"code":"RecorderHandler","type":"codeVoice"},{"text":" represents a backend implementation of a ","type":"text"},{"code":"Recorder","type":"codeVoice"},{"text":".","type":"text"}],"type":"topic","role":"symbol","title":"RecorderHandler","kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/CoreMetrics\/RecorderHandler","url":"\/documentation\/coremetrics\/recorderhandler","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RecorderHandler","kind":"identifier"}]},"doc://co.pointfree.VaporRouting/documentation/CoreMetrics/Gauge":{"role":"symbol","kind":"symbol","url":"\/documentation\/coremetrics\/gauge","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/CoreMetrics\/Gauge","abstract":[{"text":"A gauge is a metric that represents a single numerical value that can arbitrarily go up and down.","type":"text"},{"text":" ","type":"text"},{"text":"Gauges are typically used for measured values like temperatures or current memory usage, but also “counts” that can go up and down, like the number of active threads.","type":"text"},{"text":" ","type":"text"},{"text":"Gauges are modeled as ","type":"text"},{"code":"Recorder","type":"codeVoice"},{"text":" with a sample size of 1 and that does not perform any aggregation.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"Gauge"}],"type":"topic","title":"Gauge","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Gauge"}]},"doc://co.pointfree.VaporRouting/documentation/CoreMetrics/Counter":{"abstract":[{"type":"text","text":"A counter is a cumulative metric that represents a single monotonically increasing counter whose value can only increase or be reset to zero."},{"type":"text","text":" "},{"type":"text","text":"For example, you can use a counter to represent the number of requests served, tasks completed, or errors."}],"kind":"symbol","title":"Counter","role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/CoreMetrics\/Counter","url":"\/documentation\/coremetrics\/counter","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"text":"Counter","kind":"identifier"}],"navigatorTitle":[{"text":"Counter","kind":"identifier"}],"type":"topic"},"doc://co.pointfree.VaporRouting/documentation/CoreMetrics/MetricsFactory":{"title":"MetricsFactory","abstract":[{"type":"text","text":"The "},{"code":"MetricsFactory","type":"codeVoice"},{"type":"text","text":" is the bridge between the "},{"code":"MetricsSystem","type":"codeVoice"},{"type":"text","text":" and the metrics backend implementation."},{"type":"text","text":" "},{"code":"MetricsFactory","type":"codeVoice"},{"type":"text","text":"’s role is to initialize concrete implementations of the various metric types:"}],"url":"\/documentation\/coremetrics\/metricsfactory","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/CoreMetrics\/MetricsFactory","navigatorTitle":[{"kind":"identifier","text":"MetricsFactory"}],"kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"MetricsFactory"}]},"doc://co.pointfree.VaporRouting/documentation/CoreMetrics/MetricsSystem":{"role":"symbol","kind":"symbol","url":"\/documentation\/coremetrics\/metricssystem","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/CoreMetrics\/MetricsSystem","abstract":[{"text":"The ","type":"text"},{"code":"MetricsSystem","type":"codeVoice"},{"text":" is a global facility where the default metrics backend implementation (","type":"text"},{"code":"MetricsFactory","type":"codeVoice"},{"text":") can be","type":"text"},{"text":" ","type":"text"},{"text":"configured. ","type":"text"},{"code":"MetricsSystem","type":"codeVoice"},{"text":" is set up just once in a given program to set up the desired metrics backend","type":"text"},{"text":" ","type":"text"},{"text":"implementation.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"MetricsSystem"}],"type":"topic","title":"MetricsSystem","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"MetricsSystem"}]},"doc://co.pointfree.VaporRouting/documentation/CoreMetrics/CounterHandler":{"title":"CounterHandler","role":"symbol","kind":"symbol","navigatorTitle":[{"text":"CounterHandler","kind":"identifier"}],"type":"topic","url":"\/documentation\/coremetrics\/counterhandler","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/CoreMetrics\/CounterHandler","abstract":[{"text":"A ","type":"text"},{"code":"CounterHandler","type":"codeVoice"},{"text":" represents a backend implementation of a ","type":"text"},{"code":"Counter","type":"codeVoice"},{"text":".","type":"text"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"CounterHandler","kind":"identifier"}]},"doc://co.pointfree.VaporRouting/documentation/CoreMetrics/NOOPMetricsHandler":{"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"NOOPMetricsHandler"}],"navigatorTitle":[{"kind":"identifier","text":"NOOPMetricsHandler"}],"type":"topic","title":"NOOPMetricsHandler","kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/CoreMetrics\/NOOPMetricsHandler","url":"\/documentation\/coremetrics\/noopmetricshandler","abstract":[{"type":"text","text":"Ships with the metrics module, used for initial bootstrapping."}],"role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/CoreMetrics/TimeUnit":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/CoreMetrics\/TimeUnit","abstract":[],"role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"TimeUnit","kind":"identifier"}],"title":"TimeUnit","navigatorTitle":[{"text":"TimeUnit","kind":"identifier"}],"type":"topic","kind":"symbol","url":"\/documentation\/coremetrics\/timeunit"},"doc://co.pointfree.VaporRouting/documentation/CoreMetrics/Recorder":{"kind":"symbol","type":"topic","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Recorder","kind":"identifier"}],"title":"Recorder","url":"\/documentation\/coremetrics\/recorder","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/CoreMetrics\/Recorder","navigatorTitle":[{"text":"Recorder","kind":"identifier"}],"role":"symbol","abstract":[{"text":"A recorder collects observations within a time window (usually things like response sizes) and ","type":"text"},{"inlineContent":[{"type":"text","text":"can"}],"type":"emphasis"},{"type":"text","text":" provide aggregated information about the data sample, for example, count, sum, min, max and various quantiles."}]},"doc://co.pointfree.VaporRouting/documentation/CoreMetrics/FloatingPointCounterHandler":{"url":"\/documentation\/coremetrics\/floatingpointcounterhandler","role":"symbol","abstract":[{"type":"text","text":"A "},{"type":"codeVoice","code":"FloatingPointCounterHandler"},{"type":"text","text":" represents a backend implementation of a "},{"type":"codeVoice","code":"FloatingPointCounter"},{"type":"text","text":"."}],"navigatorTitle":[{"kind":"identifier","text":"FloatingPointCounterHandler"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/CoreMetrics\/FloatingPointCounterHandler","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"FloatingPointCounterHandler"}],"kind":"symbol","title":"FloatingPointCounterHandler","type":"topic"},"doc://co.pointfree.VaporRouting/documentation/CoreMetrics":{"abstract":[],"kind":"symbol","title":"CoreMetrics","role":"collection","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/CoreMetrics","url":"\/documentation\/coremetrics","type":"topic"}}}