{"primaryContentSections":[{"declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"flatten","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"futures","kind":"internalParam"},{"text":": [","kind":"text"},{"preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture","kind":"typeIdentifier","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture"},{"text":"<","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":">]) -> ","kind":"text"},{"preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture","kind":"typeIdentifier","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture"},{"text":"<[","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":"]>","kind":"text"}],"languages":["swift"],"platforms":["Linux"]}],"kind":"declarations"},{"parameters":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"An array of futures to flatten into a single "},{"code":"EventLoopFuture","type":"codeVoice"},{"type":"text","text":"."}]}],"name":"futures"}],"kind":"parameters"},{"content":[{"text":"Return Value","anchor":"return-value","level":2,"type":"heading"},{"inlineContent":[{"text":"A new ","type":"text"},{"code":"EventLoopFuture","type":"codeVoice"},{"text":" with all the resolved values of the input collection.","type":"text"}],"type":"paragraph"}],"kind":"content"},{"content":[{"text":"Discussion","anchor":"discussion","type":"heading","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"The returned "},{"code":"EventLoopFuture","type":"codeVoice"},{"type":"text","text":" will fail if any of the provided futures fails. All remaining"},{"type":"text","text":" "},{"code":"EventLoopFuture","type":"codeVoice"},{"type":"text","text":" objects will be ignored."}]}],"kind":"content"}],"schemaVersion":{"major":0,"minor":3,"patch":0},"abstract":[{"type":"text","text":"Returns a new "},{"type":"codeVoice","code":"EventLoopFuture"},{"text":" that succeeds only when all the provided futures succeed.","type":"text"},{"text":" ","type":"text"},{"text":"The new ","type":"text"},{"code":"EventLoopFuture","type":"codeVoice"},{"text":" contains an array of results, maintaining same ordering as the futures.","type":"text"}],"kind":"symbol","metadata":{"role":"symbol","title":"flatten(_:)","modules":[{"name":"NIOCore"}],"extendedModule":"NIOCore","symbolKind":"method","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"flatten","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">([","kind":"text"},{"text":"EventLoopFuture","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15EventLoopFutureC"},{"text":"<","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":">]) -> ","kind":"text"},{"text":"EventLoopFuture","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15EventLoopFutureC"},{"text":"<[","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":"]>","kind":"text"}],"roleHeading":"Instance Method","externalID":"s:7NIOCore9EventLoopP8AsyncKitE7flattenyAA0bC6FutureCySayqd__GGSayAGyqd__GGlF"},"sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/niocore\/eventloop\/flatten(_:)-6gsl5"]}],"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoop\/flatten(_:)-6gsl5","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoop"]]},"references":{"doc://co.pointfree.VaporRouting/documentation/NIOCore":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","role":"collection","kind":"symbol","type":"topic","abstract":[],"title":"NIOCore","url":"\/documentation\/niocore"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoopFuture":{"navigatorTitle":[{"kind":"identifier","text":"EventLoopFuture"}],"abstract":[{"text":"Holder for a result that will be provided later.","type":"text"}],"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"EventLoopFuture"}],"kind":"symbol","url":"\/documentation\/niocore\/eventloopfuture","role":"symbol","title":"EventLoopFuture","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture","type":"topic"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoop":{"kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"EventLoop","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoop","type":"topic","navigatorTitle":[{"text":"EventLoop","kind":"identifier"}],"title":"EventLoop","role":"symbol","url":"\/documentation\/niocore\/eventloop","abstract":[{"text":"An EventLoop processes IO \/ tasks in an endless loop for ","type":"text"},{"code":"Channel","type":"codeVoice"},{"type":"text","text":"s until itâ€™s closed."}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoop/flatten(_:)-6gsl5":{"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"flatten","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">([","kind":"text"},{"text":"EventLoopFuture","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15EventLoopFutureC"},{"text":"<","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":">]) -> ","kind":"text"},{"text":"EventLoopFuture","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15EventLoopFutureC"},{"text":"<[","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":"]>","kind":"text"}],"abstract":[{"type":"text","text":"Returns a new "},{"type":"codeVoice","code":"EventLoopFuture"},{"type":"text","text":" that succeeds only when all the provided futures succeed."},{"type":"text","text":" "},{"type":"text","text":"The new "},{"type":"codeVoice","code":"EventLoopFuture"},{"type":"text","text":" contains an array of results, maintaining same ordering as the futures."}],"kind":"symbol","type":"topic","url":"\/documentation\/niocore\/eventloop\/flatten(_:)-6gsl5","title":"flatten(_:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoop\/flatten(_:)-6gsl5"}}}