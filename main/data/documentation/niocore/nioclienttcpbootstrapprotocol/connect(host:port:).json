{"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/NIOClientTCPBootstrapProtocol\/connect(host:port:)","interfaceLanguage":"swift"},"variants":[{"paths":["\/documentation\/niocore\/nioclienttcpbootstrapprotocol\/connect(host:port:)"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/NIOClientTCPBootstrapProtocol"]]},"schemaVersion":{"minor":3,"major":0,"patch":0},"metadata":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"connect","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"host"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"kind":"text","text":", "},{"kind":"externalParam","text":"port"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore7ChannelP","text":"Channel"},{"kind":"text","text":">"}],"roleHeading":"Instance Method","role":"symbol","symbolKind":"method","title":"connect(host:port:)","modules":[{"name":"NIOCore"}],"externalID":"s:7NIOCore29NIOClientTCPBootstrapProtocolP7connect4host4portAA15EventLoopFutureCyAA7Channel_pGSS_SitF","required":true},"abstract":[{"type":"text","text":"Specify the "},{"code":"host","type":"codeVoice"},{"type":"text","text":" and "},{"code":"port","type":"codeVoice"},{"type":"text","text":" to connect to for the TCP "},{"code":"Channel","type":"codeVoice"},{"type":"text","text":" that will be established."}],"primaryContentSections":[{"declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"connect","kind":"identifier"},{"text":"(","kind":"text"},{"text":"host","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"port","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Int","preciseIdentifier":"s:Si","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"EventLoopFuture","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Channel","preciseIdentifier":"s:7NIOCore7ChannelP","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/Channel","kind":"typeIdentifier"},{"text":">","kind":"text"}],"languages":["swift"],"platforms":["Linux"]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"content":[{"inlineContent":[{"type":"text","text":"The host to connect to."}],"type":"paragraph"}],"name":"host"},{"content":[{"type":"paragraph","inlineContent":[{"text":"The port to connect to.","type":"text"}]}],"name":"port"}]},{"content":[{"anchor":"return-value","type":"heading","text":"Return Value","level":2},{"inlineContent":[{"type":"text","text":"An "},{"type":"codeVoice","code":"EventLoopFuture<Channel>"},{"type":"text","text":" to deliver the "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":" when connected."}],"type":"paragraph"}],"kind":"content"}],"references":{"doc://co.pointfree.VaporRouting/documentation/NIOCore":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","role":"collection","kind":"symbol","type":"topic","abstract":[],"title":"NIOCore","url":"\/documentation\/niocore"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/NIOClientTCPBootstrapProtocol/connect(host:port:)":{"title":"connect(host:port:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/NIOClientTCPBootstrapProtocol\/connect(host:port:)","required":true,"kind":"symbol","type":"topic","url":"\/documentation\/niocore\/nioclienttcpbootstrapprotocol\/connect(host:port:)","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"connect"},{"kind":"text","text":"("},{"kind":"externalParam","text":"host"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"kind":"text","text":", "},{"kind":"externalParam","text":"port"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore7ChannelP","text":"Channel"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Specify the "},{"code":"host","type":"codeVoice"},{"type":"text","text":" and "},{"code":"port","type":"codeVoice"},{"type":"text","text":" to connect to for the TCP "},{"code":"Channel","type":"codeVoice"},{"type":"text","text":" that will be established."}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/NIOClientTCPBootstrapProtocol":{"url":"\/documentation\/niocore\/nioclienttcpbootstrapprotocol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/NIOClientTCPBootstrapProtocol","abstract":[{"code":"NIOClientTCPBootstrapProtocol","type":"codeVoice"},{"text":" is implemented by various underlying transport mechanisms. Typically,","type":"text"},{"type":"text","text":" "},{"type":"text","text":"this will be the BSD Sockets API implemented by "},{"type":"codeVoice","code":"ClientBootstrap"},{"text":".","type":"text"}],"kind":"symbol","navigatorTitle":[{"text":"NIOClientTCPBootstrapProtocol","kind":"identifier"}],"type":"topic","title":"NIOClientTCPBootstrapProtocol","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"NIOClientTCPBootstrapProtocol","kind":"identifier"}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoopFuture":{"navigatorTitle":[{"kind":"identifier","text":"EventLoopFuture"}],"abstract":[{"text":"Holder for a result that will be provided later.","type":"text"}],"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"EventLoopFuture"}],"kind":"symbol","url":"\/documentation\/niocore\/eventloopfuture","role":"symbol","title":"EventLoopFuture","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture","type":"topic"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/Channel":{"url":"\/documentation\/niocore\/channel","navigatorTitle":[{"kind":"identifier","text":"Channel"}],"title":"Channel","role":"symbol","abstract":[{"type":"text","text":"A "},{"code":"Channel","type":"codeVoice"},{"type":"text","text":" is easiest thought of as a network socket. But it can be anything that is capable of I\/O operations such"},{"type":"text","text":" "},{"type":"text","text":"as read, write, connect, and bind."}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/Channel","kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Channel"}],"type":"topic"}}}