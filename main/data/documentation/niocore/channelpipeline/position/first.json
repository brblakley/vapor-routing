{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/niocore\/channelpipeline\/position\/first"]}],"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline\/Position\/first","interfaceLanguage":"swift"},"sections":[],"kind":"symbol","metadata":{"externalID":"s:7NIOCore15ChannelPipelineC8PositionO5firstyA2EmF","symbolKind":"case","role":"symbol","modules":[{"name":"NIOCore"}],"roleHeading":"Case","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"first"}],"title":"ChannelPipeline.Position.first"},"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline\/Position"]]},"primaryContentSections":[{"declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"first","kind":"identifier"}]}],"kind":"declarations"}],"abstract":[{"type":"text","text":"The first "},{"code":"ChannelHandler","type":"codeVoice"},{"type":"text","text":" – the front of the "},{"code":"ChannelPipeline","type":"codeVoice"},{"type":"text","text":"."}],"schemaVersion":{"patch":0,"major":0,"minor":3},"references":{"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelPipeline":{"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"ChannelPipeline"}],"abstract":[{"type":"text","text":"A list of "},{"type":"codeVoice","code":"ChannelHandler"},{"type":"text","text":"s that handle or intercept inbound events and outbound operations of a"},{"type":"text","text":" "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":". "},{"type":"codeVoice","code":"ChannelPipeline"},{"type":"text","text":" implements an advanced form of the Intercepting Filter pattern"},{"type":"text","text":" "},{"type":"text","text":"to give a user full control over how an event is handled and how the "},{"type":"codeVoice","code":"ChannelHandler"},{"type":"text","text":"s in a pipeline"},{"type":"text","text":" "},{"type":"text","text":"interact with each other."}],"navigatorTitle":[{"kind":"identifier","text":"ChannelPipeline"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline","title":"ChannelPipeline","role":"symbol","type":"topic","url":"\/documentation\/niocore\/channelpipeline","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelPipeline/Position":{"kind":"symbol","type":"topic","role":"symbol","url":"\/documentation\/niocore\/channelpipeline\/position","navigatorTitle":[{"text":"Position","kind":"identifier"}],"abstract":[{"type":"text","text":"A "},{"type":"codeVoice","code":"Position"},{"type":"text","text":" within the "},{"type":"codeVoice","code":"ChannelPipeline"},{"type":"text","text":" used to insert handlers into the "},{"type":"codeVoice","code":"ChannelPipeline"},{"type":"text","text":"."}],"fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Position","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline\/Position","title":"ChannelPipeline.Position"},"doc://co.pointfree.VaporRouting/documentation/NIOCore":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","role":"collection","kind":"symbol","type":"topic","abstract":[],"title":"NIOCore","url":"\/documentation\/niocore"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelPipeline/Position/first":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline\/Position\/first","title":"ChannelPipeline.Position.first","role":"symbol","url":"\/documentation\/niocore\/channelpipeline\/position\/first","kind":"symbol","type":"topic","abstract":[{"type":"text","text":"The first "},{"code":"ChannelHandler","type":"codeVoice"},{"type":"text","text":" – the front of the "},{"code":"ChannelPipeline","type":"codeVoice"},{"text":".","type":"text"}],"fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"first"}]}}}