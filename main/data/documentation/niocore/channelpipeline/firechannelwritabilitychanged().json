{"abstract":[{"type":"text","text":"Called when a "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":"’s writable state changes."}],"schemaVersion":{"patch":0,"minor":3,"major":0},"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"fireChannelWritabilityChanged","kind":"identifier"},{"text":"()","kind":"text"}],"platforms":["Linux"]}],"kind":"declarations"},{"content":[{"level":2,"text":"Discussion","anchor":"discussion","type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The writability state of a Channel depends on watermarks that can be set via "},{"type":"codeVoice","code":"Channel.setOption"},{"type":"text","text":" and how much data"},{"type":"text","text":" "},{"type":"text","text":"is still waiting to be transferred to the remote peer."},{"type":"text","text":" "},{"type":"text","text":"You should take care to enforce some kind of backpressure if the channel becomes unwritable which means "},{"type":"codeVoice","code":"Channel.isWritable"},{"type":"text","text":" "},{"type":"text","text":"will return "},{"type":"codeVoice","code":"false"},{"type":"text","text":" to ensure you do not consume too much memory due to queued writes. What exactly you should do here depends on the"},{"type":"text","text":" "},{"type":"text","text":"protocol and other semantics. But for example you may want to stop writing to the "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":" until "},{"type":"codeVoice","code":"Channel.writable"},{"type":"text","text":" becomes"},{"type":"text","text":" "},{"type":"codeVoice","code":"true"},{"type":"text","text":" again or stop reading at all."}]}],"kind":"content"}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline"]]},"sections":[],"kind":"symbol","identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline\/fireChannelWritabilityChanged()","interfaceLanguage":"swift"},"metadata":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"fireChannelWritabilityChanged"},{"kind":"text","text":"()"}],"role":"symbol","modules":[{"name":"NIOCore"}],"title":"fireChannelWritabilityChanged()","roleHeading":"Instance Method","symbolKind":"method","externalID":"s:7NIOCore15ChannelPipelineC04fireB18WritabilityChangedyyF"},"variants":[{"paths":["\/documentation\/niocore\/channelpipeline\/firechannelwritabilitychanged()"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelPipeline":{"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"ChannelPipeline"}],"abstract":[{"type":"text","text":"A list of "},{"type":"codeVoice","code":"ChannelHandler"},{"type":"text","text":"s that handle or intercept inbound events and outbound operations of a"},{"type":"text","text":" "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":". "},{"type":"codeVoice","code":"ChannelPipeline"},{"type":"text","text":" implements an advanced form of the Intercepting Filter pattern"},{"type":"text","text":" "},{"type":"text","text":"to give a user full control over how an event is handled and how the "},{"type":"codeVoice","code":"ChannelHandler"},{"type":"text","text":"s in a pipeline"},{"type":"text","text":" "},{"type":"text","text":"interact with each other."}],"navigatorTitle":[{"kind":"identifier","text":"ChannelPipeline"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline","title":"ChannelPipeline","role":"symbol","type":"topic","url":"\/documentation\/niocore\/channelpipeline","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","role":"collection","kind":"symbol","type":"topic","abstract":[],"title":"NIOCore","url":"\/documentation\/niocore"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelPipeline/fireChannelWritabilityChanged()":{"url":"\/documentation\/niocore\/channelpipeline\/firechannelwritabilitychanged()","type":"topic","role":"symbol","abstract":[{"type":"text","text":"Called when a "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":"’s writable state changes."}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"fireChannelWritabilityChanged","kind":"identifier"},{"text":"()","kind":"text"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline\/fireChannelWritabilityChanged()","kind":"symbol","title":"fireChannelWritabilityChanged()"}}}