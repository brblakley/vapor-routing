{"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline"]]},"kind":"symbol","sections":[],"metadata":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"configureHTTP2SecureUpgrade"},{"kind":"text","text":"("},{"kind":"externalParam","text":"h2PipelineConfigurator"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"ChannelPipeline","preciseIdentifier":"s:7NIOCore15ChannelPipelineC"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"EventLoopFuture","preciseIdentifier":"s:7NIOCore15EventLoopFutureC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":">, "},{"kind":"externalParam","text":"http1PipelineConfigurator"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"ChannelPipeline","preciseIdentifier":"s:7NIOCore15ChannelPipelineC"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"EventLoopFuture","preciseIdentifier":"s:7NIOCore15EventLoopFutureC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","text":"EventLoopFuture","preciseIdentifier":"s:7NIOCore15EventLoopFutureC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":">"}],"title":"configureHTTP2SecureUpgrade(h2PipelineConfigurator:http1PipelineConfigurator:)","platforms":[],"symbolKind":"method","roleHeading":"Instance Method","role":"symbol","modules":[{"name":"NIOCore"}],"extendedModule":"NIOCore","externalID":"s:7NIOCore15ChannelPipelineC8NIOHTTP2E27configureHTTP2SecureUpgrade02h2C12Configurator05http1cJ0AA15EventLoopFutureCyytGAjCc_AjCctF"},"abstract":[{"text":"Configures a channel pipeline to perform a HTTP\/2 secure upgrade.","type":"text"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/niocore\/channelpipeline\/configurehttp2secureupgrade(h2pipelineconfigurator:http1pipelineconfigurator:)"]}],"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline\/configureHTTP2SecureUpgrade(h2PipelineConfigurator:http1PipelineConfigurator:)","interfaceLanguage":"swift"},"schemaVersion":{"minor":3,"patch":0,"major":0},"primaryContentSections":[{"declarations":[{"platforms":["Linux"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"configureHTTP2SecureUpgrade","kind":"identifier"},{"text":"(","kind":"text"},{"text":"h2PipelineConfigurator","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"@escaping","kind":"keyword"},{"text":" (","kind":"text"},{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline","preciseIdentifier":"s:7NIOCore15ChannelPipelineC","kind":"typeIdentifier","text":"ChannelPipeline"},{"kind":"text","text":") -> "},{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","kind":"typeIdentifier","text":"EventLoopFuture"},{"kind":"text","text":"<"},{"preciseIdentifier":"s:s4Voida","kind":"typeIdentifier","text":"Void"},{"kind":"text","text":">, "},{"kind":"externalParam","text":"http1PipelineConfigurator"},{"kind":"text","text":": "},{"kind":"keyword","text":"@escaping"},{"kind":"text","text":" ("},{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline","preciseIdentifier":"s:7NIOCore15ChannelPipelineC","kind":"typeIdentifier","text":"ChannelPipeline"},{"kind":"text","text":") -> "},{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","kind":"typeIdentifier","text":"EventLoopFuture"},{"kind":"text","text":"<"},{"preciseIdentifier":"s:s4Voida","kind":"typeIdentifier","text":"Void"},{"kind":"text","text":">) -> "},{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","kind":"typeIdentifier","text":"EventLoopFuture"},{"kind":"text","text":"<"},{"preciseIdentifier":"s:s4Voida","kind":"typeIdentifier","text":"Void"},{"kind":"text","text":">"}],"languages":["swift"]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"content":[{"type":"paragraph","inlineContent":[{"text":"A callback that will be invoked if HTTP\/2 has been negogiated, and that","type":"text"},{"text":" ","type":"text"},{"text":"should configure the pipeline for HTTP\/2 use. Must return a future that completes when the","type":"text"},{"text":" ","type":"text"},{"text":"pipeline has been fully mutated.","type":"text"}]}],"name":"h2PipelineConfigurator"},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A callback that will be invoked if HTTP\/1.1 has been explicitly"},{"type":"text","text":" "},{"type":"text","text":"negotiated, or if no protocol was negotiated. Must return a future that completes when the"},{"type":"text","text":" "},{"type":"text","text":"pipeline has been fully mutated."}]}],"name":"http1PipelineConfigurator"}]},{"content":[{"text":"Return Value","anchor":"return-value","type":"heading","level":2},{"type":"paragraph","inlineContent":[{"text":"An ","type":"text"},{"type":"codeVoice","code":"EventLoopFuture<Void>"},{"text":" that completes when the pipeline is ready to negotiate.","type":"text"}]}],"kind":"content"},{"content":[{"type":"heading","level":2,"anchor":"discussion","text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"HTTP\/2 secure upgrade uses the Application Layer Protocol Negotiation TLS extension to"},{"type":"text","text":" "},{"type":"text","text":"negotiate the inner protocol as part of the TLS handshake. For this reason, until the TLS"},{"type":"text","text":" "},{"type":"text","text":"handshake is complete, the ultimate configuration of the channel pipeline cannot be known."}]},{"type":"paragraph","inlineContent":[{"text":"This function configures the pipeline with a pair of callbacks that will handle the result","type":"text"},{"text":" ","type":"text"},{"text":"of the negotiation. It explicitly ","type":"text"},{"inlineContent":[{"text":"does not","type":"text"}],"type":"strong"},{"text":" configure a TLS handler to actually attempt","type":"text"},{"text":" ","type":"text"},{"text":"to negotiate ALPN. The supported ALPN protocols are provided in","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"NIOHTTP2SupportedALPNProtocols"},{"text":": please ensure that the TLS handler you are using for your","type":"text"},{"text":" ","type":"text"},{"text":"pipeline is appropriately configured to perform this protocol negotiation.","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"If negotiation results in an unexpected protocol, the pipeline will close the connection"},{"type":"text","text":" "},{"type":"text","text":"and no callback will fire."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"This configuration is acceptable for use on both client and server channel pipelines."}]}],"kind":"content"}],"references":{"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoopFuture":{"navigatorTitle":[{"kind":"identifier","text":"EventLoopFuture"}],"abstract":[{"text":"Holder for a result that will be provided later.","type":"text"}],"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"EventLoopFuture"}],"kind":"symbol","url":"\/documentation\/niocore\/eventloopfuture","role":"symbol","title":"EventLoopFuture","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture","type":"topic"},"doc://co.pointfree.VaporRouting/documentation/NIOCore":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","role":"collection","kind":"symbol","type":"topic","abstract":[],"title":"NIOCore","url":"\/documentation\/niocore"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelPipeline":{"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"ChannelPipeline"}],"abstract":[{"type":"text","text":"A list of "},{"type":"codeVoice","code":"ChannelHandler"},{"type":"text","text":"s that handle or intercept inbound events and outbound operations of a"},{"type":"text","text":" "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":". "},{"type":"codeVoice","code":"ChannelPipeline"},{"type":"text","text":" implements an advanced form of the Intercepting Filter pattern"},{"type":"text","text":" "},{"type":"text","text":"to give a user full control over how an event is handled and how the "},{"type":"codeVoice","code":"ChannelHandler"},{"type":"text","text":"s in a pipeline"},{"type":"text","text":" "},{"type":"text","text":"interact with each other."}],"navigatorTitle":[{"kind":"identifier","text":"ChannelPipeline"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline","title":"ChannelPipeline","role":"symbol","type":"topic","url":"\/documentation\/niocore\/channelpipeline","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelPipeline/configureHTTP2SecureUpgrade(h2PipelineConfigurator:http1PipelineConfigurator:)":{"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"configureHTTP2SecureUpgrade","kind":"identifier"},{"text":"(","kind":"text"},{"text":"h2PipelineConfigurator","kind":"externalParam"},{"text":": (","kind":"text"},{"preciseIdentifier":"s:7NIOCore15ChannelPipelineC","text":"ChannelPipeline","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"text":"http1PipelineConfigurator","kind":"externalParam"},{"text":": (","kind":"text"},{"preciseIdentifier":"s:7NIOCore15ChannelPipelineC","text":"ChannelPipeline","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"},{"text":">","kind":"text"}],"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline\/configureHTTP2SecureUpgrade(h2PipelineConfigurator:http1PipelineConfigurator:)","title":"configureHTTP2SecureUpgrade(h2PipelineConfigurator:http1PipelineConfigurator:)","url":"\/documentation\/niocore\/channelpipeline\/configurehttp2secureupgrade(h2pipelineconfigurator:http1pipelineconfigurator:)","role":"symbol","deprecated":true,"kind":"symbol","abstract":[{"type":"text","text":"Configures a channel pipeline to perform a HTTP\/2 secure upgrade."}]}}}