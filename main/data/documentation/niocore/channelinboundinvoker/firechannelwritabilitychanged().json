{"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelInboundInvoker"]]},"variants":[{"paths":["\/documentation\/niocore\/channelinboundinvoker\/firechannelwritabilitychanged()"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","schemaVersion":{"minor":3,"patch":0,"major":0},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"fireChannelWritabilityChanged","kind":"identifier"},{"text":"()","kind":"text"}],"platforms":["Linux"],"languages":["swift"]}]},{"kind":"content","content":[{"type":"heading","anchor":"discussion","text":"Discussion","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"The writability state of a Channel depends on watermarks that can be set via "},{"type":"codeVoice","code":"Channel.setOption"},{"type":"text","text":" and how much data"},{"type":"text","text":" "},{"type":"text","text":"is still waiting to be transferred to the remote peer."},{"type":"text","text":" "},{"type":"text","text":"You should take care to enforce some kind of backpressure if the channel becomes unwritable which means "},{"code":"Channel.isWritable","type":"codeVoice"},{"type":"text","text":" "},{"type":"text","text":"will return "},{"type":"codeVoice","code":"false"},{"type":"text","text":" to ensure you do not consume too much memory due to queued writes. What exactly you should do here depends on the"},{"type":"text","text":" "},{"type":"text","text":"protocol and other semantics. But for example you may want to stop writing to the "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":" until "},{"type":"codeVoice","code":"Channel.writable"},{"type":"text","text":" becomes"},{"type":"text","text":" "},{"type":"codeVoice","code":"true"},{"type":"text","text":" again or stop reading at all."}]}]}],"sections":[],"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelInboundInvoker\/fireChannelWritabilityChanged()","interfaceLanguage":"swift"},"metadata":{"modules":[{"name":"NIOCore"}],"symbolKind":"method","title":"fireChannelWritabilityChanged()","role":"symbol","roleHeading":"Instance Method","externalID":"s:7NIOCore21ChannelInboundInvokerP04fireB18WritabilityChangedyyF","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"fireChannelWritabilityChanged"},{"kind":"text","text":"()"}],"required":true},"abstract":[{"text":"Called when a ","type":"text"},{"code":"Channel","type":"codeVoice"},{"text":"’s writable state changes.","type":"text"}],"references":{"doc://co.pointfree.VaporRouting/documentation/NIOCore":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","role":"collection","kind":"symbol","type":"topic","abstract":[],"title":"NIOCore","url":"\/documentation\/niocore"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelInboundInvoker/fireChannelWritabilityChanged()":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"fireChannelWritabilityChanged"},{"text":"()","kind":"text"}],"abstract":[{"text":"Called when a ","type":"text"},{"code":"Channel","type":"codeVoice"},{"type":"text","text":"’s writable state changes."}],"type":"topic","required":true,"kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelInboundInvoker\/fireChannelWritabilityChanged()","url":"\/documentation\/niocore\/channelinboundinvoker\/firechannelwritabilitychanged()","role":"symbol","title":"fireChannelWritabilityChanged()"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelInboundInvoker":{"kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ChannelInboundInvoker","kind":"identifier"}],"url":"\/documentation\/niocore\/channelinboundinvoker","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelInboundInvoker","title":"ChannelInboundInvoker","navigatorTitle":[{"text":"ChannelInboundInvoker","kind":"identifier"}],"type":"topic","abstract":[{"text":"Fire inbound events related to a ","type":"text"},{"code":"Channel","type":"codeVoice"},{"text":" through the ","type":"text"},{"code":"ChannelPipeline","type":"codeVoice"},{"text":" until its end is reached or it’s consumed by a ","type":"text"},{"code":"ChannelHandler","type":"codeVoice"},{"text":".","type":"text"}],"role":"symbol"}}}