{"abstract":[{"text":"Return an empty ","type":"text"},{"type":"codeVoice","code":"ByteBuffer"},{"text":" allocated with ","type":"text"},{"type":"codeVoice","code":"ByteBufferAllocator()"},{"text":".","type":"text"}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ByteBuffer"]]},"schemaVersion":{"major":0,"patch":0,"minor":3},"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ByteBuffer\/init()","interfaceLanguage":"swift"},"metadata":{"externalID":"s:7NIOCore10ByteBufferVACycfc","extendedModule":"NIOCore","symbolKind":"init","role":"symbol","title":"init()","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"()"}],"roleHeading":"Initializer","modules":[{"name":"NIOCore"}]},"sections":[],"primaryContentSections":[{"declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"text":"init","kind":"keyword"},{"text":"()","kind":"text"}]}],"kind":"declarations"},{"kind":"content","content":[{"text":"Discussion","level":2,"type":"heading","anchor":"discussion"},{"inlineContent":[{"type":"text","text":"Calling this constructor will not allocate because it will return a "},{"code":"ByteBuffer","type":"codeVoice"},{"type":"text","text":" that wraps a shared storage"},{"type":"text","text":" "},{"type":"text","text":"object. As soon as you write to the constructed buffer however, you will incur an allocation because a"},{"type":"text","text":" "},{"type":"text","text":"copy-on-write will happen."}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"info: If you have access to a "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":", "},{"type":"codeVoice","code":"ChannelHandlerContext"},{"type":"text","text":", or "},{"type":"codeVoice","code":"ByteBufferAllocator"},{"type":"text","text":" it is"},{"type":"text","text":" "},{"type":"text","text":"recommended using "},{"type":"codeVoice","code":"channel.allocator.buffer(capacity: 0)"},{"type":"text","text":". This allows SwiftNIO to do"},{"type":"text","text":" "},{"type":"text","text":"accounting and optimisations of resources acquired for operations on a given "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":" in the future."}]}]}]}]}],"kind":"symbol","variants":[{"paths":["\/documentation\/niocore\/bytebuffer\/init()"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://co.pointfree.VaporRouting/documentation/NIOCore/ByteBuffer":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ByteBuffer"}],"url":"\/documentation\/niocore\/bytebuffer","title":"ByteBuffer","kind":"symbol","type":"topic","abstract":[{"type":"codeVoice","code":"ByteBuffer"},{"type":"text","text":" stores contiguously allocated raw bytes. It is a random and sequential accessible sequence of zero or"},{"type":"text","text":" "},{"type":"text","text":"more bytes (octets)."}],"navigatorTitle":[{"kind":"identifier","text":"ByteBuffer"}],"role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ByteBuffer"},"doc://co.pointfree.VaporRouting/documentation/NIOCore":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","role":"collection","kind":"symbol","type":"topic","abstract":[],"title":"NIOCore","url":"\/documentation\/niocore"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ByteBuffer/init()":{"abstract":[{"text":"Return an empty ","type":"text"},{"type":"codeVoice","code":"ByteBuffer"},{"text":" allocated with ","type":"text"},{"type":"codeVoice","code":"ByteBufferAllocator()"},{"text":".","type":"text"}],"url":"\/documentation\/niocore\/bytebuffer\/init()","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ByteBuffer\/init()","fragments":[{"text":"init","kind":"identifier"},{"text":"()","kind":"text"}],"kind":"symbol","role":"symbol","title":"init()"}}}