{"sections":[],"variants":[{"paths":["\/documentation\/niocore\/bytebuffer\/init(dispatchdata:)"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"minor":3,"major":0,"patch":0},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"text":"init","kind":"keyword"},{"text":"(","kind":"text"},{"text":"dispatchData","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"DispatchData","kind":"typeIdentifier","preciseIdentifier":"s:8Dispatch0A4DataV"},{"text":")","kind":"text"}]}]},{"content":[{"anchor":"discussion","text":"Discussion","level":2,"type":"heading"},{"inlineContent":[{"type":"text","text":"This will allocate a new "},{"code":"ByteBuffer","type":"codeVoice"},{"type":"text","text":" with enough space to fit the bytes of the "},{"code":"DispatchData","type":"codeVoice"},{"type":"text","text":" and potentially"},{"type":"text","text":" "},{"type":"text","text":"some extra space using the default allocator."}],"type":"paragraph"},{"items":[{"content":[{"inlineContent":[{"text":"info: If you have access to a ","type":"text"},{"code":"Channel","type":"codeVoice"},{"text":", ","type":"text"},{"code":"ChannelHandlerContext","type":"codeVoice"},{"text":", or ","type":"text"},{"code":"ByteBufferAllocator","type":"codeVoice"},{"text":" we","type":"text"},{"text":" ","type":"text"},{"text":"recommend using ","type":"text"},{"code":"channel.allocator.buffer(dispatchData:)","type":"codeVoice"},{"text":". Or if you want to write multiple items into","type":"text"},{"text":" ","type":"text"},{"text":"the buffer use ","type":"text"},{"code":"channel.allocator.buffer(capacity: ...)","type":"codeVoice"},{"text":" to allocate a ","type":"text"},{"code":"ByteBuffer","type":"codeVoice"},{"text":" of the right","type":"text"},{"text":" ","type":"text"},{"text":"size followed by a ","type":"text"},{"code":"writeDispatchData","type":"codeVoice"},{"text":" instead of using this method. This allows SwiftNIO to do","type":"text"},{"text":" ","type":"text"},{"text":"accounting and optimisations of resources acquired for operations on a given ","type":"text"},{"code":"Channel","type":"codeVoice"},{"text":" in the future.","type":"text"}],"type":"paragraph"}]}],"type":"unorderedList"}],"kind":"content"}],"kind":"symbol","metadata":{"title":"init(dispatchData:)","roleHeading":"Initializer","extendedModule":"NIOCore","externalID":"s:7NIOCore10ByteBufferV12dispatchDataAC8Dispatch0fE0V_tcfc","modules":[{"name":"NIOCore"}],"role":"symbol","symbolKind":"init","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"dispatchData","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"DispatchData","kind":"typeIdentifier","preciseIdentifier":"s:8Dispatch0A4DataV"},{"text":")","kind":"text"}]},"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ByteBuffer"]]},"abstract":[{"type":"text","text":"Create a fresh "},{"code":"ByteBuffer","type":"codeVoice"},{"type":"text","text":" containing the bytes contained in the given "},{"code":"DispatchData","type":"codeVoice"},{"type":"text","text":"."}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ByteBuffer\/init(dispatchData:)"},"references":{"doc://co.pointfree.VaporRouting/documentation/NIOCore/ByteBuffer":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ByteBuffer"}],"url":"\/documentation\/niocore\/bytebuffer","title":"ByteBuffer","kind":"symbol","type":"topic","abstract":[{"type":"codeVoice","code":"ByteBuffer"},{"type":"text","text":" stores contiguously allocated raw bytes. It is a random and sequential accessible sequence of zero or"},{"type":"text","text":" "},{"type":"text","text":"more bytes (octets)."}],"navigatorTitle":[{"kind":"identifier","text":"ByteBuffer"}],"role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ByteBuffer"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ByteBuffer/init(dispatchData:)":{"title":"init(dispatchData:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ByteBuffer\/init(dispatchData:)","kind":"symbol","type":"topic","url":"\/documentation\/niocore\/bytebuffer\/init(dispatchdata:)","abstract":[{"type":"text","text":"Create a fresh "},{"type":"codeVoice","code":"ByteBuffer"},{"type":"text","text":" containing the bytes contained in the given "},{"type":"codeVoice","code":"DispatchData"},{"type":"text","text":"."}],"role":"symbol","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"dispatchData","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"DispatchData","preciseIdentifier":"s:8Dispatch0A4DataV","kind":"typeIdentifier"},{"text":")","kind":"text"}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","role":"collection","kind":"symbol","type":"topic","abstract":[],"title":"NIOCore","url":"\/documentation\/niocore"}}}