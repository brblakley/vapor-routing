{"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"I"},{"kind":"text","text":">("},{"kind":"externalParam","text":"integer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"I"},{"kind":"text","text":", "},{"kind":"externalParam","text":"endianness"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Endianness","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/Endianness","preciseIdentifier":"s:7NIOCore10EndiannessO"},{"kind":"text","text":" = .big, "},{"kind":"externalParam","text":"as"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"I"},{"kind":"text","text":".Type = I.self) "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"I"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","text":"FixedWidthInteger","preciseIdentifier":"s:s17FixedWidthIntegerP"}],"platforms":["Linux"]}]},{"kind":"content","content":[{"anchor":"discussion","text":"Discussion","level":2,"type":"heading"},{"inlineContent":[{"type":"text","text":"This will allocate a new "},{"code":"ByteBuffer","type":"codeVoice"},{"type":"text","text":" with enough space to fit "},{"code":"integer","type":"codeVoice"},{"type":"text","text":" and potentially some extra space using"},{"type":"text","text":" "},{"type":"text","text":"the default allocator."}],"type":"paragraph"},{"items":[{"content":[{"inlineContent":[{"type":"text","text":"info: If you have access to a "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":", "},{"type":"codeVoice","code":"ChannelHandlerContext"},{"type":"text","text":", or "},{"type":"codeVoice","code":"ByteBufferAllocator"},{"type":"text","text":" we"},{"type":"text","text":" "},{"type":"text","text":"recommend using "},{"type":"codeVoice","code":"channel.allocator.buffer(integer:)"},{"type":"text","text":". Or if you want to write multiple items into the"},{"type":"text","text":" "},{"type":"text","text":"buffer use "},{"type":"codeVoice","code":"channel.allocator.buffer(capacity: ...)"},{"type":"text","text":" to allocate a "},{"type":"codeVoice","code":"ByteBuffer"},{"type":"text","text":" of the right"},{"type":"text","text":" "},{"type":"text","text":"size followed by a "},{"type":"codeVoice","code":"writeInteger"},{"type":"text","text":" instead of using this method. This allows SwiftNIO to do"},{"type":"text","text":" "},{"type":"text","text":"accounting and optimisations of resources acquired for operations on a given "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":" in the future."}],"type":"paragraph"}]}],"type":"unorderedList"}]}],"abstract":[{"type":"text","text":"Create a fresh "},{"type":"codeVoice","code":"ByteBuffer"},{"type":"text","text":" containing the bytes of the byte representation in the given "},{"type":"codeVoice","code":"endianness"},{"type":"text","text":" of"},{"type":"text","text":" "},{"type":"codeVoice","code":"integer"},{"type":"text","text":"."}],"sections":[],"kind":"symbol","identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ByteBuffer\/init(integer:endianness:as:)","interfaceLanguage":"swift"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/niocore\/bytebuffer\/init(integer:endianness:as:)"]}],"schemaVersion":{"patch":0,"minor":3,"major":0},"metadata":{"fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"I"},{"kind":"text","text":">("},{"kind":"externalParam","text":"integer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"I"},{"kind":"text","text":", "},{"kind":"externalParam","text":"endianness"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7NIOCore10EndiannessO","kind":"typeIdentifier","text":"Endianness"},{"kind":"text","text":", "},{"kind":"externalParam","text":"as"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"I"},{"kind":"text","text":".Type)"}],"modules":[{"name":"NIOCore"}],"title":"init(integer:endianness:as:)","externalID":"s:7NIOCore10ByteBufferV7integer10endianness2asACx_AA10EndiannessOxmtcs17FixedWidthIntegerRzlufc","role":"symbol","extendedModule":"NIOCore","symbolKind":"init","roleHeading":"Initializer"},"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ByteBuffer"]]},"references":{"doc://co.pointfree.VaporRouting/documentation/NIOCore/ByteBuffer/init(integer:endianness:as:)":{"title":"init(integer:endianness:as:)","abstract":[{"text":"Create a fresh ","type":"text"},{"code":"ByteBuffer","type":"codeVoice"},{"text":" containing the bytes of the byte representation in the given ","type":"text"},{"type":"codeVoice","code":"endianness"},{"type":"text","text":" of"},{"type":"text","text":" "},{"type":"codeVoice","code":"integer"},{"type":"text","text":"."}],"kind":"symbol","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"I"},{"kind":"text","text":">("},{"kind":"externalParam","text":"integer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"I"},{"kind":"text","text":", "},{"kind":"externalParam","text":"endianness"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7NIOCore10EndiannessO","kind":"typeIdentifier","text":"Endianness"},{"kind":"text","text":", "},{"kind":"externalParam","text":"as"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"I"},{"kind":"text","text":".Type)"}],"role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ByteBuffer\/init(integer:endianness:as:)","url":"\/documentation\/niocore\/bytebuffer\/init(integer:endianness:as:)","type":"topic"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/Endianness":{"abstract":[{"text":"Endianness refers to the sequential order in which bytes are arranged into larger numerical values when stored in","type":"text"},{"text":" ","type":"text"},{"text":"memory or when transmitted over digital links.","type":"text"}],"kind":"symbol","role":"symbol","url":"\/documentation\/niocore\/endianness","title":"Endianness","navigatorTitle":[{"text":"Endianness","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/Endianness","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Endianness","kind":"identifier"}],"type":"topic"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ByteBuffer":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ByteBuffer"}],"url":"\/documentation\/niocore\/bytebuffer","title":"ByteBuffer","kind":"symbol","type":"topic","abstract":[{"type":"codeVoice","code":"ByteBuffer"},{"type":"text","text":" stores contiguously allocated raw bytes. It is a random and sequential accessible sequence of zero or"},{"type":"text","text":" "},{"type":"text","text":"more bytes (octets)."}],"navigatorTitle":[{"kind":"identifier","text":"ByteBuffer"}],"role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ByteBuffer"},"doc://co.pointfree.VaporRouting/documentation/NIOCore":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","role":"collection","kind":"symbol","type":"topic","abstract":[],"title":"NIOCore","url":"\/documentation\/niocore"}}}