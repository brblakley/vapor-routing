{"primaryContentSections":[{"declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"text":"mutating","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"moveReaderIndex","kind":"identifier"},{"text":"(","kind":"text"},{"text":"to","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"offset","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"text":")","kind":"text"}]}],"kind":"declarations"},{"parameters":[{"name":"offset","content":[{"type":"paragraph","inlineContent":[{"text":"The offset in bytes to set the reader index to.","type":"text"}]}]}],"kind":"parameters"},{"content":[{"anchor":"discussion","type":"heading","level":2,"text":"Discussion"},{"content":[{"inlineContent":[{"text":"By contract the bytes between (including) ","type":"text"},{"code":"readerIndex","type":"codeVoice"},{"text":" and (excluding) ","type":"text"},{"code":"writerIndex","type":"codeVoice"},{"text":" must be","type":"text"},{"text":" ","type":"text"},{"text":"initialised, ie. have been written before. Also the ","type":"text"},{"code":"readerIndex","type":"codeVoice"},{"text":" must always be less than or equal","type":"text"},{"text":" ","type":"text"},{"text":"to the ","type":"text"},{"code":"writerIndex","type":"codeVoice"},{"text":". Failing to meet either of these requirements leads to undefined behaviour.","type":"text"}],"type":"paragraph"}],"type":"aside","style":"warning","name":"Warning"}],"kind":"content"}],"metadata":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"moveReaderIndex","kind":"identifier"},{"text":"(","kind":"text"},{"text":"to","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"},{"text":")","kind":"text"}],"title":"moveReaderIndex(to:)","modules":[{"name":"NIOCore"}],"externalID":"s:7NIOCore10ByteBufferV15moveReaderIndex2toySi_tF","role":"symbol","roleHeading":"Instance Method","symbolKind":"method","extendedModule":"NIOCore"},"abstract":[{"text":"Set the reader index to ","type":"text"},{"type":"codeVoice","code":"offset"},{"text":".","type":"text"}],"schemaVersion":{"minor":3,"major":0,"patch":0},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/niocore\/bytebuffer\/movereaderindex(to:)"]}],"kind":"symbol","sections":[],"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ByteBuffer\/moveReaderIndex(to:)","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ByteBuffer"]]},"references":{"doc://co.pointfree.VaporRouting/documentation/NIOCore/ByteBuffer/moveReaderIndex(to:)":{"kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ByteBuffer\/moveReaderIndex(to:)","url":"\/documentation\/niocore\/bytebuffer\/movereaderindex(to:)","abstract":[{"text":"Set the reader index to ","type":"text"},{"code":"offset","type":"codeVoice"},{"type":"text","text":"."}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"moveReaderIndex"},{"kind":"text","text":"("},{"kind":"externalParam","text":"to"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"},{"kind":"text","text":")"}],"title":"moveReaderIndex(to:)","role":"symbol","type":"topic"},"doc://co.pointfree.VaporRouting/documentation/NIOCore":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","role":"collection","kind":"symbol","type":"topic","abstract":[],"title":"NIOCore","url":"\/documentation\/niocore"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ByteBuffer":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ByteBuffer"}],"url":"\/documentation\/niocore\/bytebuffer","title":"ByteBuffer","kind":"symbol","type":"topic","abstract":[{"type":"codeVoice","code":"ByteBuffer"},{"type":"text","text":" stores contiguously allocated raw bytes. It is a random and sequential accessible sequence of zero or"},{"type":"text","text":" "},{"type":"text","text":"more bytes (octets)."}],"navigatorTitle":[{"kind":"identifier","text":"ByteBuffer"}],"role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ByteBuffer"}}}