{"metadata":{"roleHeading":"Class","title":"NIOFileHandle","externalID":"s:7NIOCore13NIOFileHandleC","symbolKind":"class","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"NIOFileHandle","kind":"identifier"}],"navigatorTitle":[{"text":"NIOFileHandle","kind":"identifier"}],"modules":[{"name":"NIOCore"}],"role":"symbol"},"relationshipsSections":[{"title":"Conforms To","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/FileDescriptor","doc:\/\/co.pointfree.VaporRouting\/s23CustomStringConvertibleP"],"kind":"relationships","type":"conformsTo"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/NIOFileHandle"},"abstract":[{"text":"A ","type":"text"},{"code":"NIOFileHandle","type":"codeVoice"},{"text":" is a handle to an open file.","type":"text"}],"kind":"symbol","sections":[],"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["Linux"],"tokens":[{"kind":"keyword","text":"final"},{"kind":"text","text":" "},{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"NIOFileHandle"}]}]},{"content":[{"anchor":"overview","text":"Overview","level":2,"type":"heading"},{"inlineContent":[{"text":"When creating a ","type":"text"},{"type":"codeVoice","code":"NIOFileHandle"},{"text":" it takes ownership of the underlying file descriptor. When a ","type":"text"},{"type":"codeVoice","code":"NIOFileHandle"},{"text":" is no longer","type":"text"},{"text":" ","type":"text"},{"text":"needed you must ","type":"text"},{"type":"codeVoice","code":"close"},{"text":" it or take back ownership of the file descriptor using ","type":"text"},{"type":"codeVoice","code":"takeDescriptorOwnership"},{"text":".","type":"text"}],"type":"paragraph"},{"content":[{"type":"paragraph","inlineContent":[{"text":"One underlying file descriptor should usually be managed by one ","type":"text"},{"code":"NIOFileHandle","type":"codeVoice"},{"text":" only.","type":"text"}]}],"name":"Note","type":"aside","style":"note"},{"content":[{"inlineContent":[{"text":"Failing to manage the lifetime of a ","type":"text"},{"type":"codeVoice","code":"NIOFileHandle"},{"text":" correctly will result in undefined behaviour.","type":"text"}],"type":"paragraph"}],"name":"Warning","type":"aside","style":"warning"},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":""},{"type":"codeVoice","code":"NIOFileHandle"},{"type":"text","text":" objects are not thread-safe and are mutable. They also cannot be fully thread-safe as they refer to a global underlying file descriptor."}]}],"name":"Warning","type":"aside","style":"warning"}],"kind":"content"}],"topicSections":[{"title":"Structures","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/NIOFileHandle\/Flags","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/NIOFileHandle\/Mode"]},{"title":"Initializers","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/NIOFileHandle\/init(descriptor:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/NIOFileHandle\/init(path:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/NIOFileHandle\/init(path:mode:flags:)"]},{"title":"Instance Properties","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/NIOFileHandle\/isOpen"]},{"title":"Instance Methods","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/NIOFileHandle\/close()","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/NIOFileHandle\/duplicate()","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/NIOFileHandle\/takeDescriptorOwnership()","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/NIOFileHandle\/withUnsafeFileDescriptor(_:)"]},{"title":"Default Implementations","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/NIOFileHandle\/CustomStringConvertible-Implementations"],"generated":true}],"variants":[{"paths":["\/documentation\/niocore\/niofilehandle"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"patch":0,"major":0,"minor":3},"references":{"doc://co.pointfree.VaporRouting/documentation/NIOCore/NIOFileHandle/CustomStringConvertible-Implementations":{"kind":"article","title":"CustomStringConvertible Implementations","abstract":[],"type":"topic","url":"\/documentation\/niocore\/niofilehandle\/customstringconvertible-implementations","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/NIOFileHandle\/CustomStringConvertible-Implementations","role":"collectionGroup"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/NIOFileHandle/withUnsafeFileDescriptor(_:)":{"type":"topic","url":"\/documentation\/niocore\/niofilehandle\/withunsafefiledescriptor(_:)","abstract":[{"type":"text","text":"Will be called with the file descriptor if still open, if not it will"},{"type":"text","text":" "},{"type":"text","text":"throw an "},{"type":"codeVoice","code":"IOError"},{"type":"text","text":"."}],"kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"withUnsafeFileDescriptor"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">(("},{"preciseIdentifier":"s:s4CInta","kind":"typeIdentifier","text":"CInt"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"T"}],"role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/NIOFileHandle\/withUnsafeFileDescriptor(_:)","title":"withUnsafeFileDescriptor(_:)"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/NIOFileHandle/isOpen":{"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"isOpen"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"}],"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/NIOFileHandle\/isOpen","role":"symbol","url":"\/documentation\/niocore\/niofilehandle\/isopen","abstract":[{"type":"codeVoice","code":"true"},{"text":" if this ","type":"text"},{"type":"codeVoice","code":"FileDescriptor"},{"text":" is open (which means it was not closed yet).","type":"text"}],"kind":"symbol","title":"isOpen"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/NIOFileHandle/Flags":{"abstract":[{"type":"codeVoice","code":"Flags"},{"type":"text","text":" allows to specify additional flags to "},{"type":"codeVoice","code":"Mode"},{"type":"text","text":", such as permission for file creation."}],"type":"topic","url":"\/documentation\/niocore\/niofilehandle\/flags","kind":"symbol","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Flags"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/NIOFileHandle\/Flags","title":"NIOFileHandle.Flags","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Flags"}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/NIOFileHandle/duplicate()":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"duplicate"},{"kind":"text","text":"() "},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"NIOFileHandle","preciseIdentifier":"s:7NIOCore13NIOFileHandleC","kind":"typeIdentifier"}],"type":"topic","url":"\/documentation\/niocore\/niofilehandle\/duplicate()","abstract":[{"type":"text","text":"Duplicates this "},{"code":"NIOFileHandle","type":"codeVoice"},{"type":"text","text":". This means that a new "},{"code":"NIOFileHandle","type":"codeVoice"},{"type":"text","text":" object with a new underlying file descriptor"},{"type":"text","text":" "},{"type":"text","text":"is returned. The caller takes ownership of the returned "},{"code":"NIOFileHandle","type":"codeVoice"},{"type":"text","text":" and is responsible for closing it."}],"kind":"symbol","role":"symbol","title":"duplicate()","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/NIOFileHandle\/duplicate()"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/NIOFileHandle/init(path:)":{"abstract":[{"text":"Open a new ","type":"text"},{"type":"codeVoice","code":"NIOFileHandle"},{"text":". This operation is blocking.","type":"text"}],"type":"topic","title":"init(path:)","fragments":[{"text":"convenience","kind":"keyword"},{"text":" ","kind":"text"},{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"path","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"}],"url":"\/documentation\/niocore\/niofilehandle\/init(path:)","role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/NIOFileHandle\/init(path:)","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/NIOFileHandle/close()":{"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/NIOFileHandle\/close()","kind":"symbol","abstract":[{"text":"Close this ","type":"text"},{"code":"FileDescriptor","type":"codeVoice"},{"text":".","type":"text"}],"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"close","kind":"identifier"},{"text":"() ","kind":"text"},{"text":"throws","kind":"keyword"}],"url":"\/documentation\/niocore\/niofilehandle\/close()","title":"close()"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/NIOFileHandle/takeDescriptorOwnership()":{"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/NIOFileHandle\/takeDescriptorOwnership()","title":"takeDescriptorOwnership()","url":"\/documentation\/niocore\/niofilehandle\/takedescriptorownership()","abstract":[{"type":"text","text":"Take the ownership of the underlying file descriptor. This is similar to "},{"type":"codeVoice","code":"close()"},{"type":"text","text":" but the underlying file"},{"type":"text","text":" "},{"type":"text","text":"descriptor remains open. The caller is responsible for closing the file descriptor by some other means."}],"role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"takeDescriptorOwnership"},{"kind":"text","text":"() "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"text":"CInt","preciseIdentifier":"s:s4CInta","kind":"typeIdentifier"}],"kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/NIOFileHandle/init(path:mode:flags:)":{"kind":"symbol","type":"topic","abstract":[{"text":"Open a new ","type":"text"},{"code":"NIOFileHandle","type":"codeVoice"},{"text":". This operation is blocking.","type":"text"}],"role":"symbol","fragments":[{"text":"convenience","kind":"keyword"},{"text":" ","kind":"text"},{"text":"init","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"path"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"kind":"externalParam","text":"mode"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"NIOFileHandle","preciseIdentifier":"s:7NIOCore13NIOFileHandleC"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Mode","preciseIdentifier":"s:7NIOCore13NIOFileHandleC4ModeV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"flags"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"NIOFileHandle","preciseIdentifier":"s:7NIOCore13NIOFileHandleC"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Flags","preciseIdentifier":"s:7NIOCore13NIOFileHandleC5FlagsV"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"}],"url":"\/documentation\/niocore\/niofilehandle\/init(path:mode:flags:)","title":"init(path:mode:flags:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/NIOFileHandle\/init(path:mode:flags:)"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/FileDescriptor":{"url":"\/documentation\/niocore\/filedescriptor","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/FileDescriptor","abstract":[],"kind":"symbol","navigatorTitle":[{"text":"FileDescriptor","kind":"identifier"}],"type":"topic","title":"FileDescriptor","role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"FileDescriptor","kind":"identifier"}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/NIOFileHandle":{"title":"NIOFileHandle","url":"\/documentation\/niocore\/niofilehandle","abstract":[{"type":"text","text":"A "},{"type":"codeVoice","code":"NIOFileHandle"},{"type":"text","text":" is a handle to an open file."}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"NIOFileHandle","kind":"identifier"}],"navigatorTitle":[{"text":"NIOFileHandle","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/NIOFileHandle","kind":"symbol","type":"topic","role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/NIOFileHandle/init(descriptor:)":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/NIOFileHandle\/init(descriptor:)","title":"init(descriptor:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"descriptor"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:s4CInta","text":"CInt"},{"kind":"text","text":")"}],"role":"symbol","type":"topic","url":"\/documentation\/niocore\/niofilehandle\/init(descriptor:)","kind":"symbol","abstract":[{"text":"Create a ","type":"text"},{"code":"NIOFileHandle","type":"codeVoice"},{"text":" taking ownership of ","type":"text"},{"code":"descriptor","type":"codeVoice"},{"text":". You must call ","type":"text"},{"code":"NIOFileHandle.close","type":"codeVoice"},{"type":"text","text":" or "},{"type":"codeVoice","code":"NIOFileHandle.takeDescriptorOwnership"},{"type":"text","text":" before"},{"type":"text","text":" "},{"type":"text","text":"this object can be safely released."}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/NIOFileHandle/Mode":{"title":"NIOFileHandle.Mode","url":"\/documentation\/niocore\/niofilehandle\/mode","abstract":[{"type":"codeVoice","code":"Mode"},{"type":"text","text":" represents file access modes."}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Mode","kind":"identifier"}],"navigatorTitle":[{"text":"Mode","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/NIOFileHandle\/Mode","kind":"symbol","type":"topic","role":"symbol"},"doc://co.pointfree.VaporRouting/s23CustomStringConvertibleP":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/s23CustomStringConvertibleP","title":"Swift.CustomStringConvertible","type":"unresolvable"},"doc://co.pointfree.VaporRouting/documentation/NIOCore":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","role":"collection","kind":"symbol","type":"topic","abstract":[],"title":"NIOCore","url":"\/documentation\/niocore"}}}