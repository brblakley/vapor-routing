{"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/NIOClientTCPBootstrap"]]},"variants":[{"paths":["\/documentation\/niocore\/nioclienttcpbootstrap\/channelinitializer(_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"modules":[{"name":"NIOCore"}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"channelInitializer"},{"kind":"text","text":"(("},{"preciseIdentifier":"s:7NIOCore7ChannelP","kind":"typeIdentifier","text":"Channel"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:7NIOCore15EventLoopFutureC","kind":"typeIdentifier","text":"EventLoopFuture"},{"kind":"text","text":"<"},{"preciseIdentifier":"s:s4Voida","kind":"typeIdentifier","text":"Void"},{"text":">) -> ","kind":"text"},{"preciseIdentifier":"s:7NIOCore21NIOClientTCPBootstrapV","text":"NIOClientTCPBootstrap","kind":"typeIdentifier"}],"symbolKind":"method","roleHeading":"Instance Method","title":"channelInitializer(_:)","externalID":"s:7NIOCore21NIOClientTCPBootstrapV18channelInitializeryAcA15EventLoopFutureCyytGAA7Channel_pcF","role":"symbol"},"sections":[],"schemaVersion":{"patch":0,"major":0,"minor":3},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/NIOClientTCPBootstrap\/channelInitializer(_:)"},"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"channelInitializer"},{"kind":"text","text":"("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"handler"},{"kind":"text","text":": "},{"kind":"keyword","text":"@escaping"},{"kind":"text","text":" ("},{"kind":"typeIdentifier","text":"Channel","preciseIdentifier":"s:7NIOCore7ChannelP","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/Channel"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"EventLoopFuture","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture"},{"text":"<","kind":"text"},{"text":"Void","preciseIdentifier":"s:s4Voida","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"text":"NIOClientTCPBootstrap","preciseIdentifier":"s:7NIOCore21NIOClientTCPBootstrapV","kind":"typeIdentifier","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/NIOClientTCPBootstrap"}],"platforms":["Linux"]}],"kind":"declarations"},{"parameters":[{"content":[{"type":"paragraph","inlineContent":[{"text":"A closure that initializes the provided ","type":"text"},{"code":"Channel","type":"codeVoice"},{"text":".","type":"text"}]}],"name":"handler"}],"kind":"parameters"},{"kind":"content","content":[{"type":"heading","anchor":"discussion","level":2,"text":"Discussion"},{"type":"paragraph","inlineContent":[{"text":"The connected ","type":"text"},{"code":"Channel","type":"codeVoice"},{"text":" will operate on ","type":"text"},{"code":"ByteBuffer","type":"codeVoice"},{"text":" as inbound and ","type":"text"},{"code":"IOData","type":"codeVoice"},{"text":" as outbound messages.","type":"text"}]},{"type":"aside","content":[{"inlineContent":[{"text":"The ","type":"text"},{"code":"handler","type":"codeVoice"},{"text":" closure may be invoked ","type":"text"},{"inlineContent":[{"type":"text","text":"multiple times"}],"type":"emphasis"},{"text":" so it’s usually the right choice to instantiate","type":"text"},{"text":" ","type":"text"},{"code":"ChannelHandler","type":"codeVoice"},{"text":"s within ","type":"text"},{"code":"handler","type":"codeVoice"},{"text":". The reason ","type":"text"},{"code":"handler","type":"codeVoice"},{"text":" may be invoked multiple times is that to","type":"text"},{"text":" ","type":"text"},{"text":"successfully set up a connection multiple connections might be setup in the process. Assuming a","type":"text"},{"text":" ","type":"text"},{"text":"hostname that resolves to both IPv4 and IPv6 addresses, NIO will follow","type":"text"},{"text":" ","type":"text"},{"identifier":"https:\/\/en.wikipedia.org\/wiki\/Happy_Eyeballs","isActive":true,"type":"reference"},{"text":" and race both an IPv4 and an IPv6","type":"text"},{"text":" ","type":"text"},{"text":"connection. It is possible that both connections get fully established before the IPv4 connection","type":"text"},{"text":" ","type":"text"},{"text":"will be closed again because the IPv6 connection ‘won the race’. Therefore the ","type":"text"},{"code":"channelInitializer","type":"codeVoice"},{"text":" ","type":"text"},{"text":"might be called multiple times and it’s important not to share stateful ","type":"text"},{"code":"ChannelHandler","type":"codeVoice"},{"text":"s in more","type":"text"},{"text":" ","type":"text"},{"text":"than one ","type":"text"},{"code":"Channel","type":"codeVoice"},{"text":".","type":"text"}],"type":"paragraph"}],"style":"warning","name":"Warning"}]}],"kind":"symbol","abstract":[{"type":"text","text":"Initialize the connected "},{"type":"codeVoice","code":"SocketChannel"},{"type":"text","text":" with "},{"type":"codeVoice","code":"initializer"},{"type":"text","text":". The most common task in initializer is to add"},{"type":"text","text":" "},{"type":"codeVoice","code":"ChannelHandler"},{"type":"text","text":"s to the "},{"type":"codeVoice","code":"ChannelPipeline"},{"type":"text","text":"."}],"references":{"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoopFuture":{"navigatorTitle":[{"kind":"identifier","text":"EventLoopFuture"}],"abstract":[{"text":"Holder for a result that will be provided later.","type":"text"}],"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"EventLoopFuture"}],"kind":"symbol","url":"\/documentation\/niocore\/eventloopfuture","role":"symbol","title":"EventLoopFuture","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture","type":"topic"},"doc://co.pointfree.VaporRouting/documentation/NIOCore":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","role":"collection","kind":"symbol","type":"topic","abstract":[],"title":"NIOCore","url":"\/documentation\/niocore"},"https://en.wikipedia.org/wiki/Happy_Eyeballs":{"title":"Happy Eyeballs","type":"link","url":"https:\/\/en.wikipedia.org\/wiki\/Happy_Eyeballs","titleInlineContent":[{"type":"emphasis","inlineContent":[{"type":"text","text":"Happy Eyeballs"}]}],"identifier":"https:\/\/en.wikipedia.org\/wiki\/Happy_Eyeballs"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/NIOClientTCPBootstrap/channelInitializer(_:)":{"title":"channelInitializer(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"channelInitializer","kind":"identifier"},{"text":"((","kind":"text"},{"text":"Channel","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore7ChannelP"},{"text":") -> ","kind":"text"},{"text":"EventLoopFuture","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15EventLoopFutureC"},{"text":"<","kind":"text"},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"text":">) -> ","kind":"text"},{"text":"NIOClientTCPBootstrap","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore21NIOClientTCPBootstrapV"}],"type":"topic","url":"\/documentation\/niocore\/nioclienttcpbootstrap\/channelinitializer(_:)","abstract":[{"type":"text","text":"Initialize the connected "},{"type":"codeVoice","code":"SocketChannel"},{"type":"text","text":" with "},{"type":"codeVoice","code":"initializer"},{"type":"text","text":". The most common task in initializer is to add"},{"type":"text","text":" "},{"type":"codeVoice","code":"ChannelHandler"},{"type":"text","text":"s to the "},{"type":"codeVoice","code":"ChannelPipeline"},{"type":"text","text":"."}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/NIOClientTCPBootstrap\/channelInitializer(_:)","role":"symbol","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/NIOClientTCPBootstrap":{"url":"\/documentation\/niocore\/nioclienttcpbootstrap","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/NIOClientTCPBootstrap","abstract":[{"code":"NIOClientTCPBootstrap","type":"codeVoice"},{"text":" is a bootstrap that allows you to bootstrap client TCP connections using NIO on BSD Sockets,","type":"text"},{"type":"text","text":" "},{"type":"text","text":"NIO Transport Services, or other ways."}],"kind":"symbol","navigatorTitle":[{"text":"NIOClientTCPBootstrap","kind":"identifier"}],"type":"topic","title":"NIOClientTCPBootstrap","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"NIOClientTCPBootstrap","kind":"identifier"}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/Channel":{"url":"\/documentation\/niocore\/channel","navigatorTitle":[{"kind":"identifier","text":"Channel"}],"title":"Channel","role":"symbol","abstract":[{"type":"text","text":"A "},{"code":"Channel","type":"codeVoice"},{"type":"text","text":" is easiest thought of as a network socket. But it can be anything that is capable of I\/O operations such"},{"type":"text","text":" "},{"type":"text","text":"as read, write, connect, and bind."}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/Channel","kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Channel"}],"type":"topic"}}}