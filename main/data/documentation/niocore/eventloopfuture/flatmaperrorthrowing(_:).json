{"sections":[],"kind":"symbol","identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture\/flatMapErrorThrowing(_:)"},"variants":[{"paths":["\/documentation\/niocore\/eventloopfuture\/flatmaperrorthrowing(_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"primaryContentSections":[{"declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"flatMapErrorThrowing","kind":"identifier"},{"text":"(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"callback","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"@escaping","kind":"keyword"},{"text":" (","kind":"text"},{"text":"Error","kind":"typeIdentifier","preciseIdentifier":"s:s5ErrorP"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"EventLoopFuture","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15EventLoopFutureC"},{"text":"<","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":">","kind":"text"}]}],"kind":"declarations"},{"parameters":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Function that will receive the error value of this "},{"code":"EventLoopFuture","type":"codeVoice"},{"type":"text","text":" and return"},{"type":"text","text":" "},{"type":"text","text":"a new value lifted into a new "},{"code":"EventLoopFuture","type":"codeVoice"},{"type":"text","text":"."}]}],"name":"callback"}],"kind":"parameters"},{"content":[{"text":"Return Value","type":"heading","anchor":"return-value","level":2},{"inlineContent":[{"type":"text","text":"A future that will receive the eventual value or a rethrown error."}],"type":"paragraph"}],"kind":"content"},{"content":[{"anchor":"discussion","level":2,"type":"heading","text":"Discussion"},{"inlineContent":[{"text":"Operations performed in ","type":"text"},{"code":"flatMapErrorThrowing","type":"codeVoice"},{"text":" should not block, or they will block the entire","type":"text"},{"text":" ","type":"text"},{"text":"event loop. ","type":"text"},{"code":"flatMapErrorThrowing","type":"codeVoice"},{"text":" is intended for use when you have the ability to synchronously","type":"text"},{"text":" ","type":"text"},{"text":"recover from errors.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"If your callback function throws, the returned "},{"code":"EventLoopFuture","type":"codeVoice"},{"type":"text","text":" will error."}],"type":"paragraph"}],"kind":"content"}],"abstract":[{"type":"text","text":"When the current "},{"type":"codeVoice","code":"EventLoopFuture<Value>"},{"type":"text","text":" is in an error state, run the provided callback, which"},{"type":"text","text":" "},{"type":"text","text":"may recover from the error and returns a new value of type "},{"type":"codeVoice","code":"Value"},{"type":"text","text":". The provided callback may optionally "},{"type":"codeVoice","code":"throw"},{"type":"text","text":","},{"type":"text","text":" "},{"type":"text","text":"in which case the "},{"type":"codeVoice","code":"EventLoopFuture"},{"type":"text","text":" will be in a failed state with the new thrown error."}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture"]]},"metadata":{"extendedModule":"NIOCore","symbolKind":"method","externalID":"s:7NIOCore15EventLoopFutureC20flatMapErrorThrowingyACyxGxs0G0_pKcF","role":"symbol","title":"flatMapErrorThrowing(_:)","roleHeading":"Instance Method","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"flatMapErrorThrowing","kind":"identifier"},{"text":"((","kind":"text"},{"text":"Error","preciseIdentifier":"s:s5ErrorP","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"EventLoopFuture","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":">","kind":"text"}],"modules":[{"name":"NIOCore"}]},"schemaVersion":{"minor":3,"major":0,"patch":0},"references":{"doc://co.pointfree.VaporRouting/documentation/NIOCore":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","role":"collection","kind":"symbol","type":"topic","abstract":[],"title":"NIOCore","url":"\/documentation\/niocore"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoopFuture":{"navigatorTitle":[{"kind":"identifier","text":"EventLoopFuture"}],"abstract":[{"text":"Holder for a result that will be provided later.","type":"text"}],"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"EventLoopFuture"}],"kind":"symbol","url":"\/documentation\/niocore\/eventloopfuture","role":"symbol","title":"EventLoopFuture","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture","type":"topic"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoopFuture/flatMapErrorThrowing(_:)":{"type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"flatMapErrorThrowing"},{"kind":"text","text":"(("},{"kind":"typeIdentifier","preciseIdentifier":"s:s5ErrorP","text":"Error"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture"},{"text":"<","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":">","kind":"text"}],"kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture\/flatMapErrorThrowing(_:)","abstract":[{"type":"text","text":"When the current "},{"type":"codeVoice","code":"EventLoopFuture<Value>"},{"type":"text","text":" is in an error state, run the provided callback, which"},{"type":"text","text":" "},{"type":"text","text":"may recover from the error and returns a new value of type "},{"type":"codeVoice","code":"Value"},{"type":"text","text":". The provided callback may optionally "},{"type":"codeVoice","code":"throw"},{"type":"text","text":","},{"type":"text","text":" "},{"type":"text","text":"in which case the "},{"type":"codeVoice","code":"EventLoopFuture"},{"type":"text","text":" will be in a failed state with the new thrown error."}],"role":"symbol","title":"flatMapErrorThrowing(_:)","url":"\/documentation\/niocore\/eventloopfuture\/flatmaperrorthrowing(_:)"}}}