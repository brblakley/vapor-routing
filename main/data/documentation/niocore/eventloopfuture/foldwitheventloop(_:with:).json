{"kind":"symbol","metadata":{"role":"symbol","roleHeading":"Instance Method","modules":[{"name":"NIOCore"}],"symbolKind":"method","extendedModule":"NIOCore","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"foldWithEventLoop"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"OtherValue"},{"kind":"text","text":">(["},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"OtherValue"},{"kind":"text","text":">], "},{"kind":"externalParam","text":"with"},{"kind":"text","text":": ("},{"text":"Value","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"OtherValue","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"preciseIdentifier":"s:7NIOCore9EventLoopP","text":"EventLoop","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":">","kind":"text"}],"externalID":"s:7NIOCore15EventLoopFutureC08foldWithbC0_4withACyxGSayACyqd__GG_AFx_qd__AA0bC0_ptctlF","title":"foldWithEventLoop(_:with:)"},"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture"]]},"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture\/foldWithEventLoop(_:with:)","interfaceLanguage":"swift"},"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"foldWithEventLoop"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"OtherValue"},{"kind":"text","text":">("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"futures"},{"kind":"text","text":": ["},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture","text":"EventLoopFuture"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"OtherValue"},{"kind":"text","text":">], "},{"kind":"externalParam","text":"with"},{"kind":"text","text":" "},{"kind":"internalParam","text":"combiningFunction"},{"kind":"text","text":": "},{"kind":"keyword","text":"@escaping"},{"kind":"text","text":" ("},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"OtherValue"},{"kind":"text","text":", "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore9EventLoopP","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoop","text":"EventLoop"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture","text":"EventLoopFuture"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture","text":"EventLoopFuture"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":">"}],"languages":["swift"],"platforms":["Linux"]}],"kind":"declarations"},{"parameters":[{"name":"futures","content":[{"type":"paragraph","inlineContent":[{"text":"An array of ","type":"text"},{"code":"EventLoopFuture<NewValue>","type":"codeVoice"},{"text":" to wait for.","type":"text"}]}]},{"name":"with","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A function that will be used to fold the values of two "},{"code":"EventLoopFuture","type":"codeVoice"},{"type":"text","text":"s and return a new value wrapped in an "},{"code":"EventLoopFuture","type":"codeVoice"},{"type":"text","text":"."}]}]}],"kind":"parameters"},{"content":[{"text":"Return Value","anchor":"return-value","level":2,"type":"heading"},{"inlineContent":[{"text":"A new ","type":"text"},{"code":"EventLoopFuture","type":"codeVoice"},{"text":" with the folded value whose callbacks run on ","type":"text"},{"code":"self.eventLoop","type":"codeVoice"},{"text":".","type":"text"}],"type":"paragraph"}],"kind":"content"},{"content":[{"anchor":"discussion","text":"Discussion","type":"heading","level":2},{"inlineContent":[{"type":"text","text":"This function is suited when you have APIs that already know how to return "},{"type":"codeVoice","code":"EventLoopFuture"},{"type":"text","text":"s."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"The returned "},{"code":"EventLoopFuture","type":"codeVoice"},{"type":"text","text":" will fail as soon as the a failure is encountered in any of the"},{"type":"text","text":" "},{"code":"futures","type":"codeVoice"},{"type":"text","text":" (or in this one). However, the failure will not occur until all preceding"},{"type":"text","text":" "},{"code":"EventLoopFutures","type":"codeVoice"},{"type":"text","text":" have completed. At the point the failure is encountered, all subsequent"},{"type":"text","text":" "},{"code":"EventLoopFuture","type":"codeVoice"},{"type":"text","text":" objects will no longer be waited for. This function therefore fails fast: once"},{"type":"text","text":" "},{"type":"text","text":"a failure is encountered, it will immediately fail the overall EventLoopFuture."}],"type":"paragraph"}],"kind":"content"}],"sections":[],"schemaVersion":{"minor":3,"major":0,"patch":0},"abstract":[{"text":"Returns a new ","type":"text"},{"code":"EventLoopFuture","type":"codeVoice"},{"text":" that fires only when this ","type":"text"},{"code":"EventLoopFuture","type":"codeVoice"},{"text":" and","type":"text"},{"text":" ","type":"text"},{"text":"all the provided ","type":"text"},{"code":"futures","type":"codeVoice"},{"text":" complete. It then provides the result of folding the value of this","type":"text"},{"text":" ","type":"text"},{"code":"EventLoopFuture","type":"codeVoice"},{"text":" with the values of all the provided ","type":"text"},{"code":"futures","type":"codeVoice"},{"text":".","type":"text"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/niocore\/eventloopfuture\/foldwitheventloop(_:with:)"]}],"references":{"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoopFuture/foldWithEventLoop(_:with:)":{"kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture\/foldWithEventLoop(_:with:)","abstract":[{"type":"text","text":"Returns a new "},{"code":"EventLoopFuture","type":"codeVoice"},{"type":"text","text":" that fires only when this "},{"code":"EventLoopFuture","type":"codeVoice"},{"type":"text","text":" and"},{"type":"text","text":" "},{"type":"text","text":"all the provided "},{"code":"futures","type":"codeVoice"},{"text":" complete. It then provides the result of folding the value of this","type":"text"},{"text":" ","type":"text"},{"code":"EventLoopFuture","type":"codeVoice"},{"text":" with the values of all the provided ","type":"text"},{"type":"codeVoice","code":"futures"},{"type":"text","text":"."}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"foldWithEventLoop"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"OtherValue"},{"kind":"text","text":">(["},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"OtherValue"},{"kind":"text","text":">], "},{"kind":"externalParam","text":"with"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"OtherValue"},{"kind":"text","text":", "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore9EventLoopP","text":"EventLoop"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:7NIOCore15EventLoopFutureC","kind":"typeIdentifier","text":"EventLoopFuture"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":">) -> "},{"preciseIdentifier":"s:7NIOCore15EventLoopFutureC","kind":"typeIdentifier","text":"EventLoopFuture"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":">"}],"title":"foldWithEventLoop(_:with:)","type":"topic","url":"\/documentation\/niocore\/eventloopfuture\/foldwitheventloop(_:with:)","role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","role":"collection","kind":"symbol","type":"topic","abstract":[],"title":"NIOCore","url":"\/documentation\/niocore"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoop":{"kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"EventLoop","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoop","type":"topic","navigatorTitle":[{"text":"EventLoop","kind":"identifier"}],"title":"EventLoop","role":"symbol","url":"\/documentation\/niocore\/eventloop","abstract":[{"text":"An EventLoop processes IO \/ tasks in an endless loop for ","type":"text"},{"code":"Channel","type":"codeVoice"},{"type":"text","text":"s until itâ€™s closed."}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoopFuture":{"navigatorTitle":[{"kind":"identifier","text":"EventLoopFuture"}],"abstract":[{"text":"Holder for a result that will be provided later.","type":"text"}],"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"EventLoopFuture"}],"kind":"symbol","url":"\/documentation\/niocore\/eventloopfuture","role":"symbol","title":"EventLoopFuture","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture","type":"topic"}}}