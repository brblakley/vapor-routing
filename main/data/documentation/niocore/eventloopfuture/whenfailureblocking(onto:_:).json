{"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"whenFailureBlocking"},{"kind":"text","text":"("},{"kind":"externalParam","text":"onto"},{"kind":"text","text":" "},{"kind":"internalParam","text":"queue"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:8Dispatch0A5QueueC","text":"DispatchQueue"},{"kind":"text","text":", "},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"callbackMayBlock"},{"kind":"text","text":": "},{"kind":"keyword","text":"@escaping"},{"kind":"text","text":" ("},{"kind":"typeIdentifier","preciseIdentifier":"s:s5ErrorP","text":"Error"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"kind":"text","text":")"}],"languages":["swift"]}]},{"kind":"parameters","parameters":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"the "},{"type":"codeVoice","code":"DispatchQueue"},{"type":"text","text":" on which the blocking IO \/ task specified by "},{"type":"codeVoice","code":"callbackMayBlock"},{"type":"text","text":" is scheduled."}]}],"name":"onto"},{"content":[{"inlineContent":[{"text":"The callback that is called with the failed result of the ","type":"text"},{"type":"codeVoice","code":"EventLoopFuture"},{"text":".","type":"text"}],"type":"paragraph"}],"name":"callbackMayBlock"}]},{"kind":"content","content":[{"type":"heading","text":"Discussion","level":2,"anchor":"discussion"},{"type":"paragraph","inlineContent":[{"text":"An observer callback cannot return a value, meaning that this function cannot be chained","type":"text"},{"text":" ","type":"text"},{"text":"from. If you are attempting to create a computation pipeline, consider ","type":"text"},{"code":"recover","type":"codeVoice"},{"text":" or ","type":"text"},{"code":"flatMapError","type":"codeVoice"},{"text":".","type":"text"},{"text":" ","type":"text"},{"text":"If you find yourself passing the results from this ","type":"text"},{"code":"EventLoopFuture","type":"codeVoice"},{"text":" to a new ","type":"text"},{"code":"EventLoopPromise","type":"codeVoice"},{"text":" ","type":"text"},{"text":"in the body of this function, consider using ","type":"text"},{"code":"cascade","type":"codeVoice"},{"text":" instead.","type":"text"}]}]}],"kind":"symbol","sections":[],"metadata":{"roleHeading":"Instance Method","modules":[{"name":"NIOCore"}],"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"whenFailureBlocking","kind":"identifier"},{"text":"(","kind":"text"},{"text":"onto","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"DispatchQueue","kind":"typeIdentifier","preciseIdentifier":"s:8Dispatch0A5QueueC"},{"text":", (","kind":"text"},{"text":"Error","kind":"typeIdentifier","preciseIdentifier":"s:s5ErrorP"},{"text":") -> ","kind":"text"},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"text":")","kind":"text"}],"externalID":"s:7NIOCore15EventLoopFutureC19whenFailureBlocking4onto_y8Dispatch0I5QueueC_ys5Error_pctF","extendedModule":"NIOCore","title":"whenFailureBlocking(onto:_:)","symbolKind":"method"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/niocore\/eventloopfuture\/whenfailureblocking(onto:_:)"]}],"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture\/whenFailureBlocking(onto:_:)","interfaceLanguage":"swift"},"schemaVersion":{"major":0,"patch":0,"minor":3},"abstract":[{"text":"Adds an observer callback to this ","type":"text"},{"code":"EventLoopFuture","type":"codeVoice"},{"text":" that is called when the","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"EventLoopFuture"},{"type":"text","text":" has a failure result. The observer callback is permitted to block."}],"references":{"doc://co.pointfree.VaporRouting/documentation/NIOCore":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","role":"collection","kind":"symbol","type":"topic","abstract":[],"title":"NIOCore","url":"\/documentation\/niocore"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoopFuture/whenFailureBlocking(onto:_:)":{"type":"topic","abstract":[{"type":"text","text":"Adds an observer callback to this "},{"code":"EventLoopFuture","type":"codeVoice"},{"text":" that is called when the","type":"text"},{"text":" ","type":"text"},{"code":"EventLoopFuture","type":"codeVoice"},{"text":" has a failure result. The observer callback is permitted to block.","type":"text"}],"role":"symbol","url":"\/documentation\/niocore\/eventloopfuture\/whenfailureblocking(onto:_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"whenFailureBlocking","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"onto"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:8Dispatch0A5QueueC","text":"DispatchQueue"},{"text":", (","kind":"text"},{"preciseIdentifier":"s:s5ErrorP","text":"Error","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"},{"text":")","kind":"text"}],"kind":"symbol","title":"whenFailureBlocking(onto:_:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture\/whenFailureBlocking(onto:_:)"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoopFuture":{"navigatorTitle":[{"kind":"identifier","text":"EventLoopFuture"}],"abstract":[{"text":"Holder for a result that will be provided later.","type":"text"}],"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"EventLoopFuture"}],"kind":"symbol","url":"\/documentation\/niocore\/eventloopfuture","role":"symbol","title":"EventLoopFuture","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture","type":"topic"}}}