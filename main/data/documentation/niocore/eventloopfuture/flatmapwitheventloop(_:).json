{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/niocore\/eventloopfuture\/flatmapwitheventloop(_:)"]}],"abstract":[{"type":"text","text":"When the current "},{"code":"EventLoopFuture<Value>","type":"codeVoice"},{"type":"text","text":" is fulfilled, run the provided callback,"},{"type":"text","text":" "},{"type":"text","text":"which will provide a new "},{"code":"EventLoopFuture","type":"codeVoice"},{"type":"text","text":" alongside the "},{"code":"EventLoop","type":"codeVoice"},{"type":"text","text":" associated with this future."}],"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["Linux"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"flatMapWithEventLoop"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"NewValue"},{"kind":"text","text":">("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"callback"},{"kind":"text","text":": "},{"kind":"keyword","text":"@escaping"},{"kind":"text","text":" ("},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":", "},{"kind":"typeIdentifier","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoop","preciseIdentifier":"s:7NIOCore9EventLoopP","text":"EventLoop"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"NewValue"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"NewValue"},{"kind":"text","text":">"}]}],"kind":"declarations"},{"parameters":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Function that will receive the value of this "},{"type":"codeVoice","code":"EventLoopFuture"},{"type":"text","text":" and return"},{"type":"text","text":" "},{"type":"text","text":"a new "},{"type":"codeVoice","code":"EventLoopFuture"},{"type":"text","text":"."}]}],"name":"callback"}],"kind":"parameters"},{"content":[{"anchor":"return-value","level":2,"text":"Return Value","type":"heading"},{"inlineContent":[{"text":"A future that will receive the eventual value.","type":"text"}],"type":"paragraph"}],"kind":"content"},{"content":[{"anchor":"discussion","text":"Discussion","type":"heading","level":2},{"inlineContent":[{"type":"text","text":"This allows you to dynamically dispatch new asynchronous tasks as phases in a"},{"type":"text","text":" "},{"type":"text","text":"longer series of processing steps. Note that you can use the results of the"},{"type":"text","text":" "},{"type":"text","text":"current "},{"type":"codeVoice","code":"EventLoopFuture<Value>"},{"type":"text","text":" when determining how to dispatch the next operation."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"This works well when you have APIs that already know how to return "},{"type":"codeVoice","code":"EventLoopFuture"},{"type":"text","text":"s."},{"type":"text","text":" "},{"type":"text","text":"You can do something with the result of one and just return the next future:"}],"type":"paragraph"},{"type":"codeListing","code":["let d1 = networkRequest(args).future()","let d2 = d1.flatMapWithEventLoop { t, eventLoop -> EventLoopFuture<NewValue> in","    eventLoop.makeSucceededFuture(t + 1)","}","d2.whenSuccess { u in","    NSLog(\"Result of second request: \\(u)\")","}"],"syntax":null},{"inlineContent":[{"text":"Note: In a sense, the ","type":"text"},{"code":"EventLoopFuture<NewValue>","type":"codeVoice"},{"text":" is returned before it’s created.","type":"text"}],"type":"paragraph"}],"kind":"content"}],"metadata":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"flatMapWithEventLoop"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"NewValue"},{"kind":"text","text":">(("},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":", "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore9EventLoopP","text":"EventLoop"},{"text":") -> ","kind":"text"},{"text":"EventLoopFuture","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15EventLoopFutureC"},{"text":"<","kind":"text"},{"text":"NewValue","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"text":"EventLoopFuture","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15EventLoopFutureC"},{"text":"<","kind":"text"},{"text":"NewValue","kind":"typeIdentifier"},{"text":">","kind":"text"}],"role":"symbol","modules":[{"name":"NIOCore"}],"externalID":"s:7NIOCore15EventLoopFutureC011flatMapWithbC0yACyqd__GAEx_AA0bC0_ptclF","title":"flatMapWithEventLoop(_:)","roleHeading":"Instance Method","extendedModule":"NIOCore","symbolKind":"method"},"kind":"symbol","hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture"]]},"sections":[],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture\/flatMapWithEventLoop(_:)"},"schemaVersion":{"major":0,"minor":3,"patch":0},"references":{"doc://co.pointfree.VaporRouting/documentation/NIOCore":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","role":"collection","kind":"symbol","type":"topic","abstract":[],"title":"NIOCore","url":"\/documentation\/niocore"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoop":{"kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"EventLoop","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoop","type":"topic","navigatorTitle":[{"text":"EventLoop","kind":"identifier"}],"title":"EventLoop","role":"symbol","url":"\/documentation\/niocore\/eventloop","abstract":[{"text":"An EventLoop processes IO \/ tasks in an endless loop for ","type":"text"},{"code":"Channel","type":"codeVoice"},{"type":"text","text":"s until it’s closed."}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoopFuture":{"navigatorTitle":[{"kind":"identifier","text":"EventLoopFuture"}],"abstract":[{"text":"Holder for a result that will be provided later.","type":"text"}],"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"EventLoopFuture"}],"kind":"symbol","url":"\/documentation\/niocore\/eventloopfuture","role":"symbol","title":"EventLoopFuture","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture","type":"topic"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoopFuture/flatMapWithEventLoop(_:)":{"kind":"symbol","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"flatMapWithEventLoop","kind":"identifier"},{"text":"<","kind":"text"},{"text":"NewValue","kind":"genericParameter"},{"text":">((","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"EventLoop","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore9EventLoopP"},{"text":") -> ","kind":"text"},{"text":"EventLoopFuture","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15EventLoopFutureC"},{"text":"<","kind":"text"},{"text":"NewValue","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"text":"EventLoopFuture","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15EventLoopFutureC"},{"text":"<","kind":"text"},{"text":"NewValue","kind":"typeIdentifier"},{"text":">","kind":"text"}],"abstract":[{"text":"When the current ","type":"text"},{"code":"EventLoopFuture<Value>","type":"codeVoice"},{"text":" is fulfilled, run the provided callback,","type":"text"},{"text":" ","type":"text"},{"text":"which will provide a new ","type":"text"},{"code":"EventLoopFuture","type":"codeVoice"},{"text":" alongside the ","type":"text"},{"code":"EventLoop","type":"codeVoice"},{"text":" associated with this future.","type":"text"}],"title":"flatMapWithEventLoop(_:)","role":"symbol","url":"\/documentation\/niocore\/eventloopfuture\/flatmapwitheventloop(_:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture\/flatMapWithEventLoop(_:)"}}}