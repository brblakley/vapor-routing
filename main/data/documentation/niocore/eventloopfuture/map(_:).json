{"metadata":{"title":"map(_:)","modules":[{"name":"NIOCore"}],"role":"symbol","externalID":"s:7NIOCore15EventLoopFutureC3mapyACyqd__Gqd__xclF","extendedModule":"NIOCore","roleHeading":"Instance Method","symbolKind":"method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"map"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"NewValue"},{"kind":"text","text":">(("},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":") -> ("},{"text":"NewValue","kind":"typeIdentifier"},{"text":")) -> ","kind":"text"},{"preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"NewValue","kind":"typeIdentifier"},{"text":">","kind":"text"}]},"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture"]]},"kind":"symbol","abstract":[{"text":"When the current ","type":"text"},{"code":"EventLoopFuture<Value>","type":"codeVoice"},{"text":" is fulfilled, run the provided callback, which","type":"text"},{"text":" ","type":"text"},{"text":"performs a synchronous computation and returns a new value of type ","type":"text"},{"code":"NewValue","type":"codeVoice"},{"text":".","type":"text"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/niocore\/eventloopfuture\/map(_:)"]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture\/map(_:)"},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"map"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"NewValue"},{"kind":"text","text":">("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"callback"},{"kind":"text","text":": "},{"kind":"keyword","text":"@escaping"},{"kind":"text","text":" ("},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":") -> ("},{"kind":"typeIdentifier","text":"NewValue"},{"kind":"text","text":")) -> "},{"kind":"typeIdentifier","text":"EventLoopFuture","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture","preciseIdentifier":"s:7NIOCore15EventLoopFutureC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"NewValue"},{"kind":"text","text":">"}],"languages":["swift"]}]},{"kind":"parameters","parameters":[{"name":"callback","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Function that will receive the value of this "},{"code":"EventLoopFuture","type":"codeVoice"},{"type":"text","text":" and return"},{"type":"text","text":" "},{"type":"text","text":"a new value lifted into a new "},{"code":"EventLoopFuture","type":"codeVoice"},{"type":"text","text":"."}]}]}]},{"content":[{"text":"Return Value","anchor":"return-value","type":"heading","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"A future that will receive the eventual value."}]}],"kind":"content"},{"content":[{"level":2,"text":"Discussion","type":"heading","anchor":"discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Operations performed in "},{"type":"codeVoice","code":"map"},{"type":"text","text":" should not block, or they will block the entire event"},{"type":"text","text":" "},{"type":"text","text":"loop. "},{"type":"codeVoice","code":"map"},{"type":"text","text":" is intended for use when you have a data-driven function that performs"},{"type":"text","text":" "},{"type":"text","text":"a simple data transformation that cannot error."}]},{"type":"paragraph","inlineContent":[{"text":"If you have a data-driven function that can throw, you should use ","type":"text"},{"code":"flatMapThrowing","type":"codeVoice"},{"text":" ","type":"text"},{"text":"instead.","type":"text"}]},{"code":["let future1 = eventually()","let future2 = future1.map { T -> U in","    ... stuff ...","    return u","}","let future3 = future2.map { U -> V in","    ... stuff ...","    return v","}"],"syntax":null,"type":"codeListing"}],"kind":"content"}],"sections":[],"schemaVersion":{"patch":0,"minor":3,"major":0},"references":{"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoopFuture/map(_:)":{"kind":"symbol","title":"map(_:)","abstract":[{"type":"text","text":"When the current "},{"type":"codeVoice","code":"EventLoopFuture<Value>"},{"type":"text","text":" is fulfilled, run the provided callback, which"},{"type":"text","text":" "},{"type":"text","text":"performs a synchronous computation and returns a new value of type "},{"type":"codeVoice","code":"NewValue"},{"type":"text","text":"."}],"url":"\/documentation\/niocore\/eventloopfuture\/map(_:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture\/map(_:)","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"map"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"NewValue"},{"kind":"text","text":">(("},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":") -> ("},{"kind":"typeIdentifier","text":"NewValue"},{"kind":"text","text":")) -> "},{"preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"NewValue","kind":"typeIdentifier"},{"text":">","kind":"text"}],"type":"topic"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoopFuture":{"navigatorTitle":[{"kind":"identifier","text":"EventLoopFuture"}],"abstract":[{"text":"Holder for a result that will be provided later.","type":"text"}],"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"EventLoopFuture"}],"kind":"symbol","url":"\/documentation\/niocore\/eventloopfuture","role":"symbol","title":"EventLoopFuture","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture","type":"topic"},"doc://co.pointfree.VaporRouting/documentation/NIOCore":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","role":"collection","kind":"symbol","type":"topic","abstract":[],"title":"NIOCore","url":"\/documentation\/niocore"}}}