{"metadata":{"modules":[{"name":"NIOCore"}],"extendedModule":"NIOCore","roleHeading":"Instance Method","title":"recover(_:)","externalID":"s:7NIOCore15EventLoopFutureC7recoveryACyxGxs5Error_pcF","role":"symbol","symbolKind":"method","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"recover","kind":"identifier"},{"text":"((","kind":"text"},{"text":"Error","kind":"typeIdentifier","preciseIdentifier":"s:s5ErrorP"},{"text":") -> ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"EventLoopFuture","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15EventLoopFutureC"},{"text":"<","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":">","kind":"text"}]},"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture"]]},"sections":[],"variants":[{"paths":["\/documentation\/niocore\/eventloopfuture\/recover(_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture\/recover(_:)"},"kind":"symbol","abstract":[{"text":"When the current ","type":"text"},{"code":"EventLoopFuture<Value>","type":"codeVoice"},{"text":" is in an error state, run the provided callback, which","type":"text"},{"text":" ","type":"text"},{"text":"can recover from the error and return a new value of type ","type":"text"},{"code":"Value","type":"codeVoice"},{"text":". The provided callback may not ","type":"text"},{"code":"throw","type":"codeVoice"},{"text":",","type":"text"},{"text":" ","type":"text"},{"text":"so this function should be used when the error is always recoverable.","type":"text"}],"primaryContentSections":[{"declarations":[{"platforms":["Linux"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"recover"},{"kind":"text","text":"("},{"kind":"externalParam","text":"_"},{"text":" ","kind":"text"},{"text":"callback","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"@escaping","kind":"keyword"},{"text":" (","kind":"text"},{"text":"Error","preciseIdentifier":"s:s5ErrorP","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"EventLoopFuture","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":">","kind":"text"}],"languages":["swift"]}],"kind":"declarations"},{"parameters":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Function that will receive the error value of this "},{"code":"EventLoopFuture","type":"codeVoice"},{"type":"text","text":" and return"},{"type":"text","text":" "},{"type":"text","text":"a new value lifted into a new "},{"code":"EventLoopFuture","type":"codeVoice"},{"type":"text","text":"."}]}],"name":"callback"}],"kind":"parameters"},{"content":[{"type":"heading","text":"Return Value","anchor":"return-value","level":2},{"type":"paragraph","inlineContent":[{"text":"A future that will receive the recovered value.","type":"text"}]}],"kind":"content"},{"content":[{"text":"Discussion","type":"heading","anchor":"discussion","level":2},{"type":"paragraph","inlineContent":[{"text":"Operations performed in ","type":"text"},{"type":"codeVoice","code":"recover"},{"text":" should not block, or they will block the entire","type":"text"},{"text":" ","type":"text"},{"text":"event loop. ","type":"text"},{"type":"codeVoice","code":"recover"},{"text":" is intended for use when you have the ability to synchronously","type":"text"},{"text":" ","type":"text"},{"text":"recover from errors.","type":"text"}]}],"kind":"content"}],"schemaVersion":{"major":0,"patch":0,"minor":3},"references":{"doc://co.pointfree.VaporRouting/documentation/NIOCore":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","role":"collection","kind":"symbol","type":"topic","abstract":[],"title":"NIOCore","url":"\/documentation\/niocore"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoopFuture":{"navigatorTitle":[{"kind":"identifier","text":"EventLoopFuture"}],"abstract":[{"text":"Holder for a result that will be provided later.","type":"text"}],"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"EventLoopFuture"}],"kind":"symbol","url":"\/documentation\/niocore\/eventloopfuture","role":"symbol","title":"EventLoopFuture","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture","type":"topic"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoopFuture/recover(_:)":{"abstract":[{"type":"text","text":"When the current "},{"type":"codeVoice","code":"EventLoopFuture<Value>"},{"text":" is in an error state, run the provided callback, which","type":"text"},{"text":" ","type":"text"},{"text":"can recover from the error and return a new value of type ","type":"text"},{"code":"Value","type":"codeVoice"},{"text":". The provided callback may not ","type":"text"},{"code":"throw","type":"codeVoice"},{"text":",","type":"text"},{"text":" ","type":"text"},{"text":"so this function should be used when the error is always recoverable.","type":"text"}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"recover","kind":"identifier"},{"text":"((","kind":"text"},{"text":"Error","kind":"typeIdentifier","preciseIdentifier":"s:s5ErrorP"},{"text":") -> ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"EventLoopFuture","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15EventLoopFutureC"},{"text":"<","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":">","kind":"text"}],"type":"topic","url":"\/documentation\/niocore\/eventloopfuture\/recover(_:)","kind":"symbol","title":"recover(_:)","role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture\/recover(_:)"}}}