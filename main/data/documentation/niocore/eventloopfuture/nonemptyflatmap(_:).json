{"variants":[{"paths":["\/documentation\/niocore\/eventloopfuture\/nonemptyflatmap(_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"major":0,"patch":0,"minor":3},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"nonemptyFlatMap"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"NewValue"},{"kind":"text","text":">("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"transform"},{"kind":"text","text":": "},{"kind":"keyword","text":"@escaping"},{"kind":"text","text":" ("},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":") -> "},{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture"},{"kind":"text","text":"<"},{"text":"NewValue","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"text":"EventLoopFuture","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture"},{"text":"<","kind":"text"},{"text":"NewValue","kind":"typeIdentifier"},{"text":"> ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"Collection","kind":"typeIdentifier","preciseIdentifier":"s:Sl"},{"text":", ","kind":"text"},{"text":"NewValue","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"RangeReplaceableCollection","kind":"typeIdentifier","preciseIdentifier":"s:Sm"}]}]}],"sections":[],"metadata":{"modules":[{"name":"NIOCore"}],"symbolKind":"method","title":"nonemptyFlatMap(_:)","roleHeading":"Instance Method","extendedModule":"NIOCore","externalID":"s:7NIOCore15EventLoopFutureC8AsyncKitE15nonemptyFlatMapyACyqd__GAFxcSlRzSmRd__lF","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"nonemptyFlatMap"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"NewValue"},{"kind":"text","text":">(("},{"text":"Value","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"EventLoopFuture","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15EventLoopFutureC"},{"text":"<","kind":"text"},{"text":"NewValue","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"text":"EventLoopFuture","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15EventLoopFutureC"},{"text":"<","kind":"text"},{"text":"NewValue","kind":"typeIdentifier"},{"text":">","kind":"text"}],"role":"symbol"},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture\/nonemptyFlatMap(_:)"},"kind":"symbol","abstract":[{"type":"text","text":"Checks that the future’s value (if any) returns "},{"code":"false","type":"codeVoice"},{"type":"text","text":" for "},{"code":".isEmpty","type":"codeVoice"},{"type":"text","text":". If the check fails, a new future with"},{"type":"text","text":" "},{"type":"text","text":"an empty array as its value is returned. Otherwise, the provided normal "},{"code":"flatMap()","type":"codeVoice"},{"type":"text","text":" callback is invoked. The"},{"type":"text","text":" "},{"type":"text","text":"callback’s returned future must have a value type that is an "},{"code":"Array","type":"codeVoice"},{"type":"text","text":" or a "},{"code":"RangeReplaceableCollection","type":"codeVoice"},{"type":"text","text":"."}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture"]]},"references":{"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoopFuture":{"navigatorTitle":[{"kind":"identifier","text":"EventLoopFuture"}],"abstract":[{"text":"Holder for a result that will be provided later.","type":"text"}],"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"EventLoopFuture"}],"kind":"symbol","url":"\/documentation\/niocore\/eventloopfuture","role":"symbol","title":"EventLoopFuture","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture","type":"topic"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoopFuture/nonemptyFlatMap(_:)":{"type":"topic","title":"nonemptyFlatMap(_:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture\/nonemptyFlatMap(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"nonemptyFlatMap","kind":"identifier"},{"text":"<","kind":"text"},{"text":"NewValue","kind":"genericParameter"},{"text":">((","kind":"text"},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"NewValue"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"NewValue"},{"kind":"text","text":">"}],"url":"\/documentation\/niocore\/eventloopfuture\/nonemptyflatmap(_:)","kind":"symbol","abstract":[{"type":"text","text":"Checks that the future’s value (if any) returns "},{"code":"false","type":"codeVoice"},{"type":"text","text":" for "},{"code":".isEmpty","type":"codeVoice"},{"type":"text","text":". If the check fails, a new future with"},{"type":"text","text":" "},{"type":"text","text":"an empty array as its value is returned. Otherwise, the provided normal "},{"code":"flatMap()","type":"codeVoice"},{"type":"text","text":" callback is invoked. The"},{"type":"text","text":" "},{"type":"text","text":"callback’s returned future must have a value type that is an "},{"type":"codeVoice","code":"Array"},{"type":"text","text":" or a "},{"type":"codeVoice","code":"RangeReplaceableCollection"},{"type":"text","text":"."}],"role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","role":"collection","kind":"symbol","type":"topic","abstract":[],"title":"NIOCore","url":"\/documentation\/niocore"}}}