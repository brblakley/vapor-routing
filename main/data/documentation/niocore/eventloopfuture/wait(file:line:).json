{"metadata":{"modules":[{"name":"NIOCore"}],"roleHeading":"Instance Method","extendedModule":"NIOCore","symbolKind":"method","title":"wait(file:line:)","role":"symbol","externalID":"s:7NIOCore15EventLoopFutureC4wait4file4linexs12StaticStringV_SutKF","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"wait","kind":"identifier"},{"text":"(","kind":"text"},{"text":"file","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s12StaticStringV","text":"StaticString","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"line","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Su","text":"UInt","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Value","kind":"typeIdentifier"}]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/niocore\/eventloopfuture\/wait(file:line:)"]}],"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"wait","kind":"identifier"},{"text":"(","kind":"text"},{"text":"file","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s12StaticStringV","text":"StaticString","kind":"typeIdentifier"},{"text":" = ","kind":"text"},{"text":"#file","kind":"keyword"},{"text":", ","kind":"text"},{"text":"line","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Su","text":"UInt","kind":"typeIdentifier"},{"text":" = ","kind":"text"},{"text":"#line","kind":"keyword"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Value","kind":"typeIdentifier"}],"platforms":["Linux"]}],"kind":"declarations"},{"content":[{"text":"Return Value","type":"heading","level":2,"anchor":"return-value"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The value of the "},{"type":"codeVoice","code":"EventLoopFuture"},{"type":"text","text":" when it completes."}]}],"kind":"content"},{"content":[{"type":"heading","level":2,"text":"Discussion","anchor":"discussion"},{"inlineContent":[{"type":"text","text":"If the "},{"code":"EventLoopFuture","type":"codeVoice"},{"type":"text","text":" resolves with a value, that value is returned from "},{"code":"wait()","type":"codeVoice"},{"type":"text","text":". If"},{"type":"text","text":" "},{"type":"text","text":"the "},{"code":"EventLoopFuture","type":"codeVoice"},{"type":"text","text":" resolves with an error, that error will be thrown instead."},{"type":"text","text":" "},{"code":"wait()","type":"codeVoice"},{"type":"text","text":" will block whatever thread it is called on, so it must not be called on event loop"},{"type":"text","text":" "},{"type":"text","text":"threads: it is primarily useful for testing, or for building interfaces between blocking"},{"type":"text","text":" "},{"type":"text","text":"and non-blocking code."}],"type":"paragraph"},{"style":"note","name":"Throws","content":[{"type":"paragraph","inlineContent":[{"text":"The error value of the ","type":"text"},{"code":"EventLoopFuture","type":"codeVoice"},{"text":" if it errors.","type":"text"}]}],"type":"aside"}],"kind":"content"}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture"]]},"sections":[],"schemaVersion":{"major":0,"minor":3,"patch":0},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture\/wait(file:line:)"},"abstract":[{"type":"text","text":"Wait for the resolution of this "},{"type":"codeVoice","code":"EventLoopFuture"},{"type":"text","text":" by blocking the current thread until it"},{"type":"text","text":" "},{"type":"text","text":"resolves."}],"kind":"symbol","references":{"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoopFuture/wait(file:line:)":{"kind":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"wait"},{"kind":"text","text":"("},{"text":"file","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"StaticString","kind":"typeIdentifier","preciseIdentifier":"s:s12StaticStringV"},{"text":", ","kind":"text"},{"text":"line","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"UInt","kind":"typeIdentifier","preciseIdentifier":"s:Su"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Value","kind":"typeIdentifier"}],"abstract":[{"text":"Wait for the resolution of this ","type":"text"},{"code":"EventLoopFuture","type":"codeVoice"},{"text":" by blocking the current thread until it","type":"text"},{"text":" ","type":"text"},{"text":"resolves.","type":"text"}],"title":"wait(file:line:)","role":"symbol","url":"\/documentation\/niocore\/eventloopfuture\/wait(file:line:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture\/wait(file:line:)"},"doc://co.pointfree.VaporRouting/documentation/NIOCore":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","role":"collection","kind":"symbol","type":"topic","abstract":[],"title":"NIOCore","url":"\/documentation\/niocore"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoopFuture":{"navigatorTitle":[{"kind":"identifier","text":"EventLoopFuture"}],"abstract":[{"text":"Holder for a result that will be provided later.","type":"text"}],"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"EventLoopFuture"}],"kind":"symbol","url":"\/documentation\/niocore\/eventloopfuture","role":"symbol","title":"EventLoopFuture","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture","type":"topic"}}}