{"kind":"symbol","abstract":[{"text":"This type is intended to be used by libraries which use NIO, and offer their users either the option","type":"text"},{"text":" ","type":"text"},{"text":"to ","type":"text"},{"type":"codeVoice","code":".share"},{"text":" an existing event loop group or create (and manage) a new one (","type":"text"},{"type":"codeVoice","code":".createNew"},{"text":") and let it be","type":"text"},{"text":" ","type":"text"},{"text":"managed by given library and its lifecycle.","type":"text"}],"schemaVersion":{"major":0,"minor":3,"patch":0},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["Linux"],"tokens":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"NIOEventLoopGroupProvider","kind":"identifier"}]}]}],"topicSections":[{"title":"Enumeration Cases","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/NIOEventLoopGroupProvider\/createNew","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/NIOEventLoopGroupProvider\/shared(_:)"]}],"sections":[],"metadata":{"role":"symbol","title":"NIOEventLoopGroupProvider","externalID":"s:7NIOCore25NIOEventLoopGroupProviderO","modules":[{"name":"NIOCore"}],"roleHeading":"Enumeration","navigatorTitle":[{"text":"NIOEventLoopGroupProvider","kind":"identifier"}],"symbolKind":"enum","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"NIOEventLoopGroupProvider","kind":"identifier"}]},"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore"]]},"variants":[{"paths":["\/documentation\/niocore\/nioeventloopgroupprovider"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/NIOEventLoopGroupProvider","interfaceLanguage":"swift"},"references":{"doc://co.pointfree.VaporRouting/documentation/NIOCore/NIOEventLoopGroupProvider/shared(_:)":{"abstract":[{"text":"Use an ","type":"text"},{"type":"codeVoice","code":"EventLoopGroup"},{"text":" provided by the user.","type":"text"},{"text":" ","type":"text"},{"text":"The owner of this group is responsible for its lifecycle.","type":"text"}],"type":"topic","url":"\/documentation\/niocore\/nioeventloopgroupprovider\/shared(_:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/NIOEventLoopGroupProvider\/shared(_:)","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"shared"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"EventLoopGroup","preciseIdentifier":"s:7NIOCore14EventLoopGroupP"},{"kind":"text","text":")"}],"title":"NIOEventLoopGroupProvider.shared(_:)"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/NIOEventLoopGroupProvider/createNew":{"abstract":[{"text":"Create a new ","type":"text"},{"type":"codeVoice","code":"EventLoopGroup"},{"text":" when necessary.","type":"text"},{"text":" ","type":"text"},{"text":"The library which accepts this provider takes ownership of the created event loop group,","type":"text"},{"text":" ","type":"text"},{"text":"and must ensure its proper shutdown when the library is being shut down.","type":"text"}],"type":"topic","url":"\/documentation\/niocore\/nioeventloopgroupprovider\/createnew","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/NIOEventLoopGroupProvider\/createNew","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"createNew"}],"title":"NIOEventLoopGroupProvider.createNew"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/NIOEventLoopGroupProvider":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/NIOEventLoopGroupProvider","abstract":[{"text":"This type is intended to be used by libraries which use NIO, and offer their users either the option","type":"text"},{"text":" ","type":"text"},{"text":"to ","type":"text"},{"code":".share","type":"codeVoice"},{"text":" an existing event loop group or create (and manage) a new one (","type":"text"},{"code":".createNew","type":"codeVoice"},{"type":"text","text":") and let it be"},{"type":"text","text":" "},{"type":"text","text":"managed by given library and its lifecycle."}],"title":"NIOEventLoopGroupProvider","kind":"symbol","role":"symbol","type":"topic","url":"\/documentation\/niocore\/nioeventloopgroupprovider","fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"text":"NIOEventLoopGroupProvider","kind":"identifier"}],"navigatorTitle":[{"text":"NIOEventLoopGroupProvider","kind":"identifier"}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","role":"collection","kind":"symbol","type":"topic","abstract":[],"title":"NIOCore","url":"\/documentation\/niocore"}}}