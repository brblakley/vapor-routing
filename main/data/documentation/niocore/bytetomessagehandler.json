{"metadata":{"symbolKind":"class","title":"ByteToMessageHandler","externalID":"s:7NIOCore20ByteToMessageHandlerC","navigatorTitle":[{"text":"ByteToMessageHandler","kind":"identifier"}],"role":"symbol","modules":[{"name":"NIOCore"}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ByteToMessageHandler","kind":"identifier"}],"roleHeading":"Class"},"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/niocore\/bytetomessagehandler"]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"relationshipsSections":[{"kind":"relationships","type":"conformsTo","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelHandler","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelInboundHandler","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOutboundHandler","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/RemovableChannelHandler"],"title":"Conforms To"}],"topicSections":[{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ByteToMessageHandler\/init(_:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ByteToMessageHandler\/init(_:maximumBufferSize:)"],"title":"Initializers"},{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ByteToMessageHandler\/InboundIn","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ByteToMessageHandler\/InboundOut"],"title":"Type Aliases"},{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ByteToMessageHandler\/ChannelHandler-Implementations","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ByteToMessageHandler\/ChannelInboundHandler-Implementations","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ByteToMessageHandler\/ChannelOutboundHandler-Implementations","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ByteToMessageHandler\/RemovableChannelHandler-Implementations","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ByteToMessageHandler\/_ChannelInboundHandler-Implementations","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ByteToMessageHandler\/_ChannelOutboundHandler-Implementations"],"title":"Default Implementations","generated":true}],"kind":"symbol","identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ByteToMessageHandler","interfaceLanguage":"swift"},"sections":[],"abstract":[{"type":"text","text":"A handler which turns a given "},{"type":"codeVoice","code":"ByteToMessageDecoder"},{"type":"text","text":" into a "},{"type":"codeVoice","code":"ChannelInboundHandler"},{"type":"text","text":" that can then be added to a"},{"type":"text","text":" "},{"code":"ChannelPipeline","type":"codeVoice"},{"type":"text","text":"."}],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"final"},{"kind":"text","text":" "},{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"ByteToMessageHandler"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Decoder"},{"kind":"text","text":"> "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Decoder"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore20ByteToMessageDecoderP","text":"ByteToMessageDecoder","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ByteToMessageDecoder"}],"platforms":["Linux"]}]},{"kind":"content","content":[{"text":"Overview","level":2,"anchor":"overview","type":"heading"},{"inlineContent":[{"text":"Most importantly, ","type":"text"},{"code":"ByteToMessageHandler","type":"codeVoice"},{"text":" handles the tricky buffer management for you and flattens out all","type":"text"},{"text":" ","type":"text"},{"text":"re-entrancy on ","type":"text"},{"code":"channelRead","type":"codeVoice"},{"text":" that may happen in the ","type":"text"},{"code":"ChannelPipeline","type":"codeVoice"},{"text":".","type":"text"}],"type":"paragraph"}]}],"references":{"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelInboundHandler":{"conformance":{"constraints":[{"type":"codeVoice","code":"Decoder"},{"type":"text","text":" conforms to "},{"code":"ByteToMessageDecoder","type":"codeVoice"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol","url":"\/documentation\/niocore\/channelinboundhandler","title":"ChannelInboundHandler","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ChannelInboundHandler"}],"kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelInboundHandler","navigatorTitle":[{"kind":"identifier","text":"ChannelInboundHandler"}],"type":"topic","abstract":[{"type":"codeVoice","code":"ChannelHandler"},{"type":"text","text":" which handles inbound I\/O events for a "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":"."}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ByteToMessageHandler/init(_:)":{"title":"init(_:)","url":"\/documentation\/niocore\/bytetomessagehandler\/init(_:)","role":"symbol","fragments":[{"text":"convenience","kind":"keyword"},{"text":" ","kind":"text"},{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Decoder","kind":"typeIdentifier"},{"text":")","kind":"text"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ByteToMessageHandler\/init(_:)","type":"topic","abstract":[],"kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ByteToMessageHandler/InboundOut":{"title":"ByteToMessageHandler.InboundOut","kind":"symbol","url":"\/documentation\/niocore\/bytetomessagehandler\/inboundout","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ByteToMessageHandler\/InboundOut","abstract":[{"type":"text","text":"The type of the inbound data which will be forwarded to the next "},{"code":"ChannelInboundHandler","type":"codeVoice"},{"type":"text","text":" in the "},{"type":"codeVoice","code":"ChannelPipeline"},{"text":".","type":"text"}],"fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"InboundOut","kind":"identifier"}],"navigatorTitle":[{"text":"InboundOut","kind":"identifier"}],"role":"symbol","type":"topic"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ByteToMessageHandler/ChannelOutboundHandler-Implementations":{"abstract":[],"title":"ChannelOutboundHandler Implementations","kind":"article","role":"collectionGroup","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ByteToMessageHandler\/ChannelOutboundHandler-Implementations","type":"topic","url":"\/documentation\/niocore\/bytetomessagehandler\/channeloutboundhandler-implementations"},"doc://co.pointfree.VaporRouting/documentation/NIOCore":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","role":"collection","kind":"symbol","type":"topic","abstract":[],"title":"NIOCore","url":"\/documentation\/niocore"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/RemovableChannelHandler":{"conformance":{"constraints":[{"type":"codeVoice","code":"Decoder"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"ByteToMessageDecoder"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"url":"\/documentation\/niocore\/removablechannelhandler","type":"topic","title":"RemovableChannelHandler","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"RemovableChannelHandler"}],"abstract":[{"text":"A ","type":"text"},{"type":"codeVoice","code":"RemovableChannelHandler"},{"text":" is a ","type":"text"},{"code":"ChannelHandler","type":"codeVoice"},{"text":" that can be dynamically removed from a ","type":"text"},{"code":"ChannelPipeline","type":"codeVoice"},{"text":" whilst","type":"text"},{"text":" ","type":"text"},{"text":"the ","type":"text"},{"code":"Channel","type":"codeVoice"},{"text":" is operating normally.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"A "},{"code":"RemovableChannelHandler","type":"codeVoice"},{"type":"text","text":" is required to remove itself from the "},{"code":"ChannelPipeline","type":"codeVoice"},{"type":"text","text":" (using"},{"type":"text","text":" "},{"code":"ChannelHandlerContext.removeHandler","type":"codeVoice"},{"type":"text","text":") as soon as possible."}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/RemovableChannelHandler","kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"RemovableChannelHandler"}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ByteToMessageHandler":{"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ByteToMessageHandler","kind":"identifier"}],"url":"\/documentation\/niocore\/bytetomessagehandler","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ByteToMessageHandler","title":"ByteToMessageHandler","role":"symbol","kind":"symbol","abstract":[{"text":"A handler which turns a given ","type":"text"},{"code":"ByteToMessageDecoder","type":"codeVoice"},{"text":" into a ","type":"text"},{"code":"ChannelInboundHandler","type":"codeVoice"},{"type":"text","text":" that can then be added to a"},{"type":"text","text":" "},{"code":"ChannelPipeline","type":"codeVoice"},{"type":"text","text":"."}],"type":"topic","navigatorTitle":[{"text":"ByteToMessageHandler","kind":"identifier"}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ByteToMessageHandler/RemovableChannelHandler-Implementations":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ByteToMessageHandler\/RemovableChannelHandler-Implementations","kind":"article","title":"RemovableChannelHandler Implementations","url":"\/documentation\/niocore\/bytetomessagehandler\/removablechannelhandler-implementations","role":"collectionGroup","type":"topic","abstract":[]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ByteToMessageDecoder":{"url":"\/documentation\/niocore\/bytetomessagedecoder","role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"ByteToMessageDecoder","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ByteToMessageDecoder","navigatorTitle":[{"text":"ByteToMessageDecoder","kind":"identifier"}],"abstract":[{"code":"ByteToMessageDecoder","type":"codeVoice"},{"type":"text","text":"s decode bytes in a stream-like fashion from "},{"code":"ByteBuffer","type":"codeVoice"},{"type":"text","text":" to another message type."}],"type":"topic","title":"ByteToMessageDecoder","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelHandler":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelHandler","conformance":{"constraints":[{"type":"codeVoice","code":"Decoder"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"ByteToMessageDecoder"},{"type":"text","text":"."}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"kind":"symbol","title":"ChannelHandler","navigatorTitle":[{"kind":"identifier","text":"ChannelHandler"}],"url":"\/documentation\/niocore\/channelhandler","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ChannelHandler"}],"role":"symbol","type":"topic","abstract":[{"type":"text","text":"You should "},{"type":"emphasis","inlineContent":[{"text":"never","type":"text"}]},{"type":"text","text":" implement this protocol directly. Please implement one of its sub-protocols."}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ByteToMessageHandler/_ChannelInboundHandler-Implementations":{"kind":"article","type":"topic","title":"_ChannelInboundHandler Implementations","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ByteToMessageHandler\/_ChannelInboundHandler-Implementations","url":"\/documentation\/niocore\/bytetomessagehandler\/_channelinboundhandler-implementations","abstract":[],"role":"collectionGroup"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ByteToMessageHandler/init(_:maximumBufferSize:)":{"fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Decoder"},{"kind":"text","text":", "},{"kind":"externalParam","text":"maximumBufferSize"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":"?)"}],"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ByteToMessageHandler\/init(_:maximumBufferSize:)","abstract":[{"text":"Initialize a ","type":"text"},{"type":"codeVoice","code":"ByteToMessageHandler"},{"text":".","type":"text"}],"role":"symbol","title":"init(_:maximumBufferSize:)","kind":"symbol","url":"\/documentation\/niocore\/bytetomessagehandler\/init(_:maximumbuffersize:)"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelOutboundHandler":{"type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ChannelOutboundHandler"}],"role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOutboundHandler","url":"\/documentation\/niocore\/channeloutboundhandler","kind":"symbol","abstract":[{"code":"ChannelHandler","type":"codeVoice"},{"type":"text","text":" which handles outbound I\/O events or intercept an outbound I\/O operation for a "},{"code":"Channel","type":"codeVoice"},{"type":"text","text":"."}],"navigatorTitle":[{"kind":"identifier","text":"ChannelOutboundHandler"}],"conformance":{"constraints":[{"type":"codeVoice","code":"Decoder"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"WriteObservingByteToMessageDecoder"},{"type":"text","text":"."}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"title":"ChannelOutboundHandler"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ByteToMessageHandler/ChannelInboundHandler-Implementations":{"kind":"article","abstract":[],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ByteToMessageHandler\/ChannelInboundHandler-Implementations","url":"\/documentation\/niocore\/bytetomessagehandler\/channelinboundhandler-implementations","type":"topic","role":"collectionGroup","title":"ChannelInboundHandler Implementations"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ByteToMessageHandler/InboundIn":{"fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"InboundIn"}],"abstract":[{"type":"text","text":"The type of the inbound data which is wrapped in "},{"type":"codeVoice","code":"NIOAny"},{"type":"text","text":"."}],"title":"ByteToMessageHandler.InboundIn","navigatorTitle":[{"kind":"identifier","text":"InboundIn"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ByteToMessageHandler\/InboundIn","role":"symbol","kind":"symbol","type":"topic","url":"\/documentation\/niocore\/bytetomessagehandler\/inboundin"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ByteToMessageHandler/ChannelHandler-Implementations":{"title":"ChannelHandler Implementations","abstract":[],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ByteToMessageHandler\/ChannelHandler-Implementations","url":"\/documentation\/niocore\/bytetomessagehandler\/channelhandler-implementations","kind":"article","type":"topic","role":"collectionGroup"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ByteToMessageHandler/_ChannelOutboundHandler-Implementations":{"type":"topic","role":"collectionGroup","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ByteToMessageHandler\/_ChannelOutboundHandler-Implementations","url":"\/documentation\/niocore\/bytetomessagehandler\/_channeloutboundhandler-implementations","kind":"article","abstract":[],"title":"_ChannelOutboundHandler Implementations"}}}