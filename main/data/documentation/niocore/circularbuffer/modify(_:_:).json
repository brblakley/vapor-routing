{"schemaVersion":{"patch":0,"minor":3,"major":0},"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/CircularBuffer"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"mutating"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"modify"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Result"},{"kind":"text","text":">("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"index"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore14CircularBufferV","text":"CircularBuffer","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/CircularBuffer"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":">."},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore14CircularBufferV5IndexV","text":"Index","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/CircularBuffer\/Index"},{"kind":"text","text":", "},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"modifyFunc"},{"kind":"text","text":": ("},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Result"},{"kind":"text","text":") "},{"kind":"keyword","text":"rethrows"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Result"}]}]},{"kind":"parameters","parameters":[{"content":[{"type":"paragraph","inlineContent":[{"text":"The index of the object that should be modified. If this index is invalid this function will trap.","type":"text"}]}],"name":"index"},{"content":[{"inlineContent":[{"type":"text","text":"The function to apply to the modified object."}],"type":"paragraph"}],"name":"modifyFunc"}]},{"kind":"content","content":[{"level":2,"text":"Discussion","type":"heading","anchor":"discussion"},{"inlineContent":[{"text":"This function exists to provide a method of modifying the element in its underlying backing storage, instead","type":"text"},{"text":" ","type":"text"},{"text":"of copying it out, modifying it, and copying it back in. This emulates the behaviour of the ","type":"text"},{"code":"_modify","type":"codeVoice"},{"text":" accessor","type":"text"},{"text":" ","type":"text"},{"text":"that is part of the generalized accessors work. That accessor is currently underscored and not safe to use, so","type":"text"},{"text":" ","type":"text"},{"text":"this is the next best thing.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"text":"Note that this function is not guaranteed to be fast. In particular, as it is both generic and accepts a closure","type":"text"},{"text":" ","type":"text"},{"text":"it is possible that it will be slower than using the get\/modify\/set path that occurs with the subscript. If you","type":"text"},{"text":" ","type":"text"},{"text":"are interested in using this function for performance you ","type":"text"},{"inlineContent":[{"text":"must","type":"text"}],"type":"emphasis"},{"text":" test and verify that the optimisation applies","type":"text"},{"text":" ","type":"text"},{"text":"correctly in your situation.","type":"text"}],"type":"paragraph"}]}],"sections":[],"metadata":{"roleHeading":"Instance Method","modules":[{"name":"NIOCore"}],"title":"modify(_:_:)","extendedModule":"NIOCore","symbolKind":"method","externalID":"s:7NIOCore14CircularBufferV6modifyyqd__AC5IndexVyx_G_qd__xzKXEtKlF","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"modify"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Result"},{"kind":"text","text":">("},{"preciseIdentifier":"s:7NIOCore14CircularBufferV","kind":"typeIdentifier","text":"CircularBuffer"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":">."},{"preciseIdentifier":"s:7NIOCore14CircularBufferV5IndexV","kind":"typeIdentifier","text":"Index"},{"kind":"text","text":", ("},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Result"},{"kind":"text","text":") "},{"kind":"keyword","text":"rethrows"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Result"}]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/niocore\/circularbuffer\/modify(_:_:)"]}],"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/CircularBuffer\/modify(_:_:)","interfaceLanguage":"swift"},"kind":"symbol","abstract":[{"type":"text","text":"Modify the element at "},{"type":"codeVoice","code":"index"},{"type":"text","text":"."}],"references":{"doc://co.pointfree.VaporRouting/documentation/NIOCore/CircularBuffer/Index":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/CircularBuffer\/Index","role":"symbol","kind":"symbol","title":"CircularBuffer.Index","navigatorTitle":[{"text":"Index","kind":"identifier"}],"abstract":[{"text":"An opaque ","type":"text"},{"code":"CircularBuffer","type":"codeVoice"},{"text":" index.","type":"text"}],"type":"topic","url":"\/documentation\/niocore\/circularbuffer\/index","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Index","kind":"identifier"}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","role":"collection","kind":"symbol","type":"topic","abstract":[],"title":"NIOCore","url":"\/documentation\/niocore"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/CircularBuffer":{"abstract":[{"text":"An automatically expanding ring buffer implementation backed by a ","type":"text"},{"code":"ContiguousArray","type":"codeVoice"},{"text":". Even though this implementation","type":"text"},{"text":" ","type":"text"},{"text":"will automatically expand if more elements than ","type":"text"},{"code":"initialCapacity","type":"codeVoice"},{"type":"text","text":" are stored, itâ€™s advantageous to prevent"},{"type":"text","text":" "},{"type":"text","text":"expansions from happening frequently. Expansions will always force an allocation and a copy to happen."}],"kind":"symbol","title":"CircularBuffer","role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/CircularBuffer","url":"\/documentation\/niocore\/circularbuffer","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"CircularBuffer"}],"navigatorTitle":[{"kind":"identifier","text":"CircularBuffer"}],"type":"topic"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/CircularBuffer/modify(_:_:)":{"type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"modify","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Result","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"CircularBuffer","preciseIdentifier":"s:7NIOCore14CircularBufferV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":">.","kind":"text"},{"text":"Index","preciseIdentifier":"s:7NIOCore14CircularBufferV5IndexV","kind":"typeIdentifier"},{"text":", (","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Result","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"rethrows","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Result","kind":"typeIdentifier"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/CircularBuffer\/modify(_:_:)","url":"\/documentation\/niocore\/circularbuffer\/modify(_:_:)","abstract":[{"text":"Modify the element at ","type":"text"},{"code":"index","type":"codeVoice"},{"text":".","type":"text"}],"kind":"symbol","role":"symbol","title":"modify(_:_:)"}}}