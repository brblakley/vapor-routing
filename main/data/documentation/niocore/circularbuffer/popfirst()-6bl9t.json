{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/CircularBuffer\/popFirst()-6bl9t"},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"tokens":[{"kind":"keyword","text":"mutating"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"popFirst"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":"?"}],"languages":["swift"]}]},{"kind":"content","content":[{"type":"heading","anchor":"return-value","level":2,"text":"Return Value"},{"inlineContent":[{"type":"text","text":"The first element of the "},{"code":"CircularBuffer","type":"codeVoice"},{"type":"text","text":" if the "},{"code":"CircularBuffer","type":"codeVoice"},{"type":"text","text":" is not"},{"type":"text","text":" "},{"type":"text","text":"empty; otherwise, "},{"code":"nil","type":"codeVoice"},{"type":"text","text":"."}],"type":"paragraph"}]},{"kind":"content","content":[{"type":"heading","text":"Discussion","anchor":"discussion","level":2},{"type":"paragraph","inlineContent":[{"text":"Calling this method may invalidate all saved indices of this","type":"text"},{"text":" ","type":"text"},{"code":"CircularBuffer","type":"codeVoice"},{"text":". Do not rely on a previously stored index value after","type":"text"},{"text":" ","type":"text"},{"text":"altering a ","type":"text"},{"code":"CircularBuffer","type":"codeVoice"},{"text":" with any operation that can change its length.","type":"text"}]},{"type":"aside","content":[{"inlineContent":[{"type":"text","text":"O(1)"}],"type":"paragraph"}],"name":"Complexity","style":"note"}]}],"sections":[],"kind":"symbol","metadata":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"popFirst"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":"?"}],"roleHeading":"Instance Method","role":"symbol","symbolKind":"method","modules":[{"name":"NIOCore"}],"title":"popFirst()","extendedModule":"NIOCore","externalID":"s:7NIOCore14CircularBufferV8popFirstxSgyF"},"schemaVersion":{"major":0,"minor":3,"patch":0},"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/CircularBuffer"]]},"abstract":[{"text":"Removes and returns the first element of the ","type":"text"},{"type":"codeVoice","code":"CircularBuffer"},{"text":".","type":"text"}],"variants":[{"paths":["\/documentation\/niocore\/circularbuffer\/popfirst()-6bl9t"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://co.pointfree.VaporRouting/documentation/NIOCore":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","role":"collection","kind":"symbol","type":"topic","abstract":[],"title":"NIOCore","url":"\/documentation\/niocore"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/CircularBuffer/popFirst()-6bl9t":{"url":"\/documentation\/niocore\/circularbuffer\/popfirst()-6bl9t","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/CircularBuffer\/popFirst()-6bl9t","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"popFirst","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"type":"topic","kind":"symbol","title":"popFirst()","abstract":[{"text":"Removes and returns the first element of the ","type":"text"},{"type":"codeVoice","code":"CircularBuffer"},{"text":".","type":"text"}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/CircularBuffer":{"abstract":[{"text":"An automatically expanding ring buffer implementation backed by a ","type":"text"},{"code":"ContiguousArray","type":"codeVoice"},{"text":". Even though this implementation","type":"text"},{"text":" ","type":"text"},{"text":"will automatically expand if more elements than ","type":"text"},{"code":"initialCapacity","type":"codeVoice"},{"type":"text","text":" are stored, itâ€™s advantageous to prevent"},{"type":"text","text":" "},{"type":"text","text":"expansions from happening frequently. Expansions will always force an allocation and a copy to happen."}],"kind":"symbol","title":"CircularBuffer","role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/CircularBuffer","url":"\/documentation\/niocore\/circularbuffer","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"CircularBuffer"}],"navigatorTitle":[{"kind":"identifier","text":"CircularBuffer"}],"type":"topic"}}}