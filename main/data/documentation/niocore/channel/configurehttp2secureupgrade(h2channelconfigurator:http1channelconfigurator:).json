{"metadata":{"extendedModule":"NIOCore","roleHeading":"Instance Method","externalID":"s:7NIOCore7ChannelP8NIOHTTP2E27configureHTTP2SecureUpgrade02h2B12Configurator05http1bI0AA15EventLoopFutureCyytGAjaB_pc_AjaB_pctF","modules":[{"name":"NIOCore"}],"title":"configureHTTP2SecureUpgrade(h2ChannelConfigurator:http1ChannelConfigurator:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"configureHTTP2SecureUpgrade"},{"kind":"text","text":"("},{"kind":"externalParam","text":"h2ChannelConfigurator"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore7ChannelP","text":"Channel"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"kind":"text","text":">, "},{"kind":"externalParam","text":"http1ChannelConfigurator"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore7ChannelP","text":"Channel"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"kind":"text","text":">"}],"role":"symbol","symbolKind":"method"},"kind":"symbol","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/niocore\/channel\/configurehttp2secureupgrade(h2channelconfigurator:http1channelconfigurator:)"]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["Linux"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"configureHTTP2SecureUpgrade"},{"kind":"text","text":"("},{"kind":"externalParam","text":"h2ChannelConfigurator"},{"kind":"text","text":": "},{"kind":"keyword","text":"@escaping"},{"kind":"text","text":" ("},{"preciseIdentifier":"s:7NIOCore7ChannelP","kind":"typeIdentifier","text":"Channel","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/Channel"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:7NIOCore15EventLoopFutureC","kind":"typeIdentifier","text":"EventLoopFuture","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"text":"http1ChannelConfigurator","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"@escaping","kind":"keyword"},{"text":" (","kind":"text"},{"preciseIdentifier":"s:7NIOCore7ChannelP","text":"Channel","kind":"typeIdentifier","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/Channel"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture","kind":"typeIdentifier","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture","kind":"typeIdentifier","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"},{"text":">","kind":"text"}]}]},{"parameters":[{"name":"h2ChannelConfigurator","content":[{"type":"paragraph","inlineContent":[{"text":"A callback that will be invoked if HTTP\/2 has been negogiated, and that","type":"text"},{"text":" ","type":"text"},{"text":"should configure the channel for HTTP\/2 use. Must return a future that completes when the","type":"text"},{"text":" ","type":"text"},{"text":"channel has been fully mutated.","type":"text"}]}]},{"name":"http1ChannelConfigurator","content":[{"type":"paragraph","inlineContent":[{"text":"A callback that will be invoked if HTTP\/1.1 has been explicitly","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"negotiated, or if no protocol was negotiated. Must return a future that completes when the"},{"type":"text","text":" "},{"type":"text","text":"channel has been fully mutated."}]}]}],"kind":"parameters"},{"content":[{"text":"Return Value","type":"heading","anchor":"return-value","level":2},{"inlineContent":[{"type":"text","text":"An "},{"type":"codeVoice","code":"EventLoopFuture<Void>"},{"type":"text","text":" that completes when the channel is ready to negotiate."}],"type":"paragraph"}],"kind":"content"},{"content":[{"type":"heading","anchor":"discussion","text":"Discussion","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"HTTP\/2 secure upgrade uses the Application Layer Protocol Negotiation TLS extension to"},{"type":"text","text":" "},{"type":"text","text":"negotiate the inner protocol as part of the TLS handshake. For this reason, until the TLS"},{"type":"text","text":" "},{"type":"text","text":"handshake is complete, the ultimate configuration of the channel pipeline cannot be known."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"This function configures the channel with a pair of callbacks that will handle the result"},{"type":"text","text":" "},{"type":"text","text":"of the negotiation. It explicitly "},{"inlineContent":[{"text":"does not","type":"text"}],"type":"strong"},{"type":"text","text":" configure a TLS handler to actually attempt"},{"type":"text","text":" "},{"type":"text","text":"to negotiate ALPN. The supported ALPN protocols are provided in"},{"type":"text","text":" "},{"type":"codeVoice","code":"NIOHTTP2SupportedALPNProtocols"},{"type":"text","text":": please ensure that the TLS handler you are using for your"},{"type":"text","text":" "},{"type":"text","text":"pipeline is appropriately configured to perform this protocol negotiation."}]},{"type":"paragraph","inlineContent":[{"text":"If negotiation results in an unexpected protocol, the pipeline will close the connection","type":"text"},{"text":" ","type":"text"},{"text":"and no callback will fire.","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"This configuration is acceptable for use on both client and server channel pipelines."}]}],"kind":"content"}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/Channel"]]},"abstract":[{"type":"text","text":"Configures a channel to perform a HTTP\/2 secure upgrade."}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/Channel\/configureHTTP2SecureUpgrade(h2ChannelConfigurator:http1ChannelConfigurator:)"},"references":{"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoopFuture":{"navigatorTitle":[{"kind":"identifier","text":"EventLoopFuture"}],"abstract":[{"text":"Holder for a result that will be provided later.","type":"text"}],"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"EventLoopFuture"}],"kind":"symbol","url":"\/documentation\/niocore\/eventloopfuture","role":"symbol","title":"EventLoopFuture","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture","type":"topic"},"doc://co.pointfree.VaporRouting/documentation/NIOCore":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","role":"collection","kind":"symbol","type":"topic","abstract":[],"title":"NIOCore","url":"\/documentation\/niocore"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/Channel":{"url":"\/documentation\/niocore\/channel","navigatorTitle":[{"kind":"identifier","text":"Channel"}],"title":"Channel","role":"symbol","abstract":[{"type":"text","text":"A "},{"code":"Channel","type":"codeVoice"},{"type":"text","text":" is easiest thought of as a network socket. But it can be anything that is capable of I\/O operations such"},{"type":"text","text":" "},{"type":"text","text":"as read, write, connect, and bind."}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/Channel","kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Channel"}],"type":"topic"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/Channel/configureHTTP2SecureUpgrade(h2ChannelConfigurator:http1ChannelConfigurator:)":{"kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"configureHTTP2SecureUpgrade"},{"kind":"text","text":"("},{"kind":"externalParam","text":"h2ChannelConfigurator"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"Channel","preciseIdentifier":"s:7NIOCore7ChannelP"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"EventLoopFuture","preciseIdentifier":"s:7NIOCore15EventLoopFutureC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":">, "},{"kind":"externalParam","text":"http1ChannelConfigurator"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"Channel","preciseIdentifier":"s:7NIOCore7ChannelP"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"kind":"text","text":">"}],"url":"\/documentation\/niocore\/channel\/configurehttp2secureupgrade(h2channelconfigurator:http1channelconfigurator:)","role":"symbol","abstract":[{"type":"text","text":"Configures a channel to perform a HTTP\/2 secure upgrade."}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/Channel\/configureHTTP2SecureUpgrade(h2ChannelConfigurator:http1ChannelConfigurator:)","title":"configureHTTP2SecureUpgrade(h2ChannelConfigurator:http1ChannelConfigurator:)","type":"topic"}}}