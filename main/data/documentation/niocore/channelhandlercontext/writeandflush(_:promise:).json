{"sections":[],"schemaVersion":{"major":0,"patch":0,"minor":3},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"writeAndFlush"},{"kind":"text","text":"("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"data"},{"kind":"text","text":": "},{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/NIOAny","preciseIdentifier":"s:7NIOCore6NIOAnyV","kind":"typeIdentifier","text":"NIOAny"},{"kind":"text","text":", "},{"kind":"externalParam","text":"promise"},{"kind":"text","text":": "},{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopPromise","preciseIdentifier":"s:7NIOCore16EventLoopPromiseV","kind":"typeIdentifier","text":"EventLoopPromise"},{"kind":"text","text":"<"},{"preciseIdentifier":"s:s4Voida","kind":"typeIdentifier","text":"Void"},{"kind":"text","text":">?)"}]}]},{"kind":"parameters","parameters":[{"content":[{"inlineContent":[{"type":"text","text":"The data to write, should be of type "},{"code":"ChannelOutboundHandler.OutboundOut","type":"codeVoice"},{"type":"text","text":"."}],"type":"paragraph"}],"name":"data"},{"content":[{"inlineContent":[{"type":"text","text":"The promise fulfilled when the previously written data been written and flushed or if that failed."}],"type":"paragraph"}],"name":"promise"}]}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelHandlerContext"]]},"kind":"symbol","abstract":[{"text":"Send a ","type":"text"},{"code":"write","type":"codeVoice"},{"type":"text","text":" event followed by a "},{"type":"codeVoice","code":"flush"},{"type":"text","text":" event to the next outbound "},{"type":"codeVoice","code":"ChannelHandler"},{"type":"text","text":" in the "},{"type":"codeVoice","code":"ChannelPipeline"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"When the "},{"type":"codeVoice","code":"write"},{"type":"text","text":" event reaches the "},{"type":"codeVoice","code":"HeadChannelHandler"},{"type":"text","text":" the data will be enqueued to be written when the "},{"type":"codeVoice","code":"flush"},{"type":"text","text":" "},{"type":"text","text":"also reaches the "},{"type":"codeVoice","code":"HeadChannelHandler"},{"type":"text","text":"."}],"metadata":{"symbolKind":"method","title":"writeAndFlush(_:promise:)","role":"symbol","roleHeading":"Instance Method","modules":[{"name":"NIOCore"}],"externalID":"s:7NIOCore21ChannelHandlerContextC13writeAndFlush_7promiseyAA6NIOAnyV_AA16EventLoopPromiseVyytGSgtF","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"writeAndFlush"},{"kind":"text","text":"("},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore6NIOAnyV","text":"NIOAny"},{"kind":"text","text":", "},{"kind":"externalParam","text":"promise"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore16EventLoopPromiseV","text":"EventLoopPromise"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"kind":"text","text":">?)"}]},"variants":[{"paths":["\/documentation\/niocore\/channelhandlercontext\/writeandflush(_:promise:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelHandlerContext\/writeAndFlush(_:promise:)"},"references":{"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelHandlerContext":{"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ChannelHandlerContext","kind":"identifier"}],"url":"\/documentation\/niocore\/channelhandlercontext","type":"topic","role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelHandlerContext","title":"ChannelHandlerContext","navigatorTitle":[{"text":"ChannelHandlerContext","kind":"identifier"}],"abstract":[{"text":"Every ","type":"text"},{"type":"codeVoice","code":"ChannelHandler"},{"text":" has – when added to a ","type":"text"},{"type":"codeVoice","code":"ChannelPipeline"},{"text":" – a corresponding ","type":"text"},{"type":"codeVoice","code":"ChannelHandlerContext"},{"text":" which is","type":"text"},{"text":" ","type":"text"},{"text":"the way ","type":"text"},{"type":"codeVoice","code":"ChannelHandler"},{"text":"s can interact with other ","type":"text"},{"type":"codeVoice","code":"ChannelHandler"},{"text":"s in the pipeline.","type":"text"}],"kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","role":"collection","kind":"symbol","type":"topic","abstract":[],"title":"NIOCore","url":"\/documentation\/niocore"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoopPromise":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"EventLoopPromise"}],"abstract":[{"type":"text","text":"A promise to provide a result later."}],"navigatorTitle":[{"kind":"identifier","text":"EventLoopPromise"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopPromise","title":"EventLoopPromise","role":"symbol","type":"topic","url":"\/documentation\/niocore\/eventlooppromise","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelHandlerContext/writeAndFlush(_:promise:)":{"role":"symbol","title":"writeAndFlush(_:promise:)","kind":"symbol","type":"topic","abstract":[{"text":"Send a ","type":"text"},{"code":"write","type":"codeVoice"},{"text":" event followed by a ","type":"text"},{"type":"codeVoice","code":"flush"},{"text":" event to the next outbound ","type":"text"},{"type":"codeVoice","code":"ChannelHandler"},{"text":" in the ","type":"text"},{"type":"codeVoice","code":"ChannelPipeline"},{"text":".","type":"text"},{"text":" ","type":"text"},{"text":"When the ","type":"text"},{"type":"codeVoice","code":"write"},{"text":" event reaches the ","type":"text"},{"type":"codeVoice","code":"HeadChannelHandler"},{"text":" the data will be enqueued to be written when the ","type":"text"},{"type":"codeVoice","code":"flush"},{"text":" ","type":"text"},{"text":"also reaches the ","type":"text"},{"type":"codeVoice","code":"HeadChannelHandler"},{"type":"text","text":"."}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"writeAndFlush","kind":"identifier"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:7NIOCore6NIOAnyV","text":"NIOAny","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"promise","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7NIOCore16EventLoopPromiseV","text":"EventLoopPromise","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"},{"text":">?)","kind":"text"}],"url":"\/documentation\/niocore\/channelhandlercontext\/writeandflush(_:promise:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelHandlerContext\/writeAndFlush(_:promise:)"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/NIOAny":{"role":"symbol","kind":"symbol","abstract":[{"code":"NIOAny","type":"codeVoice"},{"text":" is an opaque container for values of ","type":"text"},{"inlineContent":[{"text":"any","type":"text"}],"type":"emphasis"},{"text":" type, similar to Swift’s builtin ","type":"text"},{"code":"Any","type":"codeVoice"},{"text":" type. Contrary to","type":"text"},{"text":" ","type":"text"},{"code":"Any","type":"codeVoice"},{"text":" the overhead of ","type":"text"},{"code":"NIOAny","type":"codeVoice"},{"text":" depends on the the type of the wrapped value. Certain types that are important","type":"text"},{"text":" ","type":"text"},{"text":"for the performance of a SwiftNIO application like ","type":"text"},{"code":"ByteBuffer","type":"codeVoice"},{"text":", ","type":"text"},{"code":"FileRegion","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"AddressEnvelope<ByteBuffer>","type":"codeVoice"},{"text":" can be expected","type":"text"},{"text":" ","type":"text"},{"text":"to be wrapped almost without overhead. All others will have similar performance as if they were passed as an ","type":"text"},{"code":"Any","type":"codeVoice"},{"text":" as","type":"text"},{"text":" ","type":"text"},{"code":"NIOAny","type":"codeVoice"},{"text":" just like ","type":"text"},{"code":"Any","type":"codeVoice"},{"text":" will contain them within an existential container.","type":"text"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/NIOAny","url":"\/documentation\/niocore\/nioany","navigatorTitle":[{"kind":"identifier","text":"NIOAny"}],"title":"NIOAny","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"NIOAny"}]}}}