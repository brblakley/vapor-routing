{"sections":[],"primaryContentSections":[{"declarations":[{"tokens":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ContinueCondition","kind":"identifier"}],"languages":["swift"],"platforms":["Linux"]}],"kind":"declarations"}],"topicSections":[{"title":"Enumeration Cases","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncKit\/EventLoopFutureQueue\/ContinueCondition\/complete","doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncKit\/EventLoopFutureQueue\/ContinueCondition\/failure","doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncKit\/EventLoopFutureQueue\/ContinueCondition\/success"]},{"title":"Default Implementations","generated":true,"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncKit\/EventLoopFutureQueue\/ContinueCondition\/Equatable-Implementations"]}],"kind":"symbol","schemaVersion":{"minor":3,"patch":0,"major":0},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncKit\/EventLoopFutureQueue\/ContinueCondition"},"metadata":{"role":"symbol","modules":[{"name":"AsyncKit"}],"title":"EventLoopFutureQueue.ContinueCondition","externalID":"s:8AsyncKit20EventLoopFutureQueueC17ContinueConditionO","symbolKind":"enum","roleHeading":"Enumeration","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"ContinueCondition"}],"navigatorTitle":[{"kind":"identifier","text":"ContinueCondition"}]},"variants":[{"paths":["\/documentation\/asynckit\/eventloopfuturequeue\/continuecondition"],"traits":[{"interfaceLanguage":"swift"}]}],"relationshipsSections":[{"title":"Conforms To","type":"conformsTo","kind":"relationships","identifiers":["doc:\/\/co.pointfree.VaporRouting\/SQ","doc:\/\/co.pointfree.VaporRouting\/SH"]}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncKit","doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncKit\/EventLoopFutureQueue"]]},"abstract":[{"type":"text","text":"Under what conditions an appended closure should be run."}],"references":{"doc://co.pointfree.VaporRouting/documentation/AsyncKit/EventLoopFutureQueue":{"kind":"symbol","title":"EventLoopFutureQueue","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"EventLoopFutureQueue"}],"role":"symbol","abstract":[{"type":"text","text":"Allows you to queue closures that produce an "},{"type":"codeVoice","code":"EventLoopFuture"},{"type":"text","text":", so each future only gets run if the previous ones complete, succeed, or fail."}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncKit\/EventLoopFutureQueue","url":"\/documentation\/asynckit\/eventloopfuturequeue","type":"topic","navigatorTitle":[{"kind":"identifier","text":"EventLoopFutureQueue"}]},"doc://co.pointfree.VaporRouting/SH":{"type":"unresolvable","identifier":"doc:\/\/co.pointfree.VaporRouting\/SH","title":"Swift.Hashable"},"doc://co.pointfree.VaporRouting/documentation/AsyncKit/EventLoopFutureQueue/ContinueCondition/Equatable-Implementations":{"title":"Equatable Implementations","role":"collectionGroup","url":"\/documentation\/asynckit\/eventloopfuturequeue\/continuecondition\/equatable-implementations","type":"topic","abstract":[],"kind":"article","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncKit\/EventLoopFutureQueue\/ContinueCondition\/Equatable-Implementations"},"doc://co.pointfree.VaporRouting/documentation/AsyncKit/EventLoopFutureQueue/ContinueCondition/success":{"type":"topic","title":"EventLoopFutureQueue.ContinueCondition.success","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncKit\/EventLoopFutureQueue\/ContinueCondition\/success","url":"\/documentation\/asynckit\/eventloopfuturequeue\/continuecondition\/success","role":"symbol","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"success"}],"abstract":[{"type":"text","text":"Run closure on the previous future’s success."}],"kind":"symbol"},"doc://co.pointfree.VaporRouting/SQ":{"type":"unresolvable","identifier":"doc:\/\/co.pointfree.VaporRouting\/SQ","title":"Swift.Equatable"},"doc://co.pointfree.VaporRouting/documentation/AsyncKit":{"abstract":[],"kind":"symbol","url":"\/documentation\/asynckit","role":"collection","title":"AsyncKit","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncKit","type":"topic"},"doc://co.pointfree.VaporRouting/documentation/AsyncKit/EventLoopFutureQueue/ContinueCondition":{"kind":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ContinueCondition","kind":"identifier"}],"title":"EventLoopFutureQueue.ContinueCondition","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncKit\/EventLoopFutureQueue\/ContinueCondition","navigatorTitle":[{"text":"ContinueCondition","kind":"identifier"}],"abstract":[{"text":"Under what conditions an appended closure should be run.","type":"text"}],"role":"symbol","url":"\/documentation\/asynckit\/eventloopfuturequeue\/continuecondition","type":"topic"},"doc://co.pointfree.VaporRouting/documentation/AsyncKit/EventLoopFutureQueue/ContinueCondition/complete":{"fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"complete"}],"abstract":[{"text":"Run closure on the previous future’s completion.","type":"text"}],"role":"symbol","url":"\/documentation\/asynckit\/eventloopfuturequeue\/continuecondition\/complete","kind":"symbol","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncKit\/EventLoopFutureQueue\/ContinueCondition\/complete","title":"EventLoopFutureQueue.ContinueCondition.complete"},"doc://co.pointfree.VaporRouting/documentation/AsyncKit/EventLoopFutureQueue/ContinueCondition/failure":{"url":"\/documentation\/asynckit\/eventloopfuturequeue\/continuecondition\/failure","type":"topic","abstract":[{"type":"text","text":"Run closure on the previous future’s failure."}],"role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncKit\/EventLoopFutureQueue\/ContinueCondition\/failure","title":"EventLoopFutureQueue.ContinueCondition.failure","kind":"symbol","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"failure"}]}}}