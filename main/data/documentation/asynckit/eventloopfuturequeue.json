{"schemaVersion":{"patch":0,"major":0,"minor":3},"abstract":[{"text":"Allows you to queue closures that produce an ","type":"text"},{"type":"codeVoice","code":"EventLoopFuture"},{"text":", so each future only gets run if the previous ones complete, succeed, or fail.","type":"text"}],"primaryContentSections":[{"declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"text":"final","kind":"keyword"},{"text":" ","kind":"text"},{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"EventLoopFutureQueue","kind":"identifier"}]}],"kind":"declarations"}],"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncKit\/EventLoopFutureQueue\/init(eventLoop:)"]},{"title":"Instance Properties","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncKit\/EventLoopFutureQueue\/eventLoop"]},{"title":"Instance Methods","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncKit\/EventLoopFutureQueue\/append(_:runningOn:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncKit\/EventLoopFutureQueue\/append(each:_:)-1fw85","doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncKit\/EventLoopFutureQueue\/append(each:_:)-3i4m4","doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncKit\/EventLoopFutureQueue\/append(onPrevious:generator:)"]},{"title":"Enumerations","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncKit\/EventLoopFutureQueue\/ContinueCondition","doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncKit\/EventLoopFutureQueue\/ContinueError"]}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncKit"]]},"metadata":{"modules":[{"name":"AsyncKit"}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"EventLoopFutureQueue","kind":"identifier"}],"roleHeading":"Class","title":"EventLoopFutureQueue","symbolKind":"class","navigatorTitle":[{"text":"EventLoopFutureQueue","kind":"identifier"}],"externalID":"s:8AsyncKit20EventLoopFutureQueueC","role":"symbol"},"kind":"symbol","sections":[],"variants":[{"paths":["\/documentation\/asynckit\/eventloopfuturequeue"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncKit\/EventLoopFutureQueue","interfaceLanguage":"swift"},"references":{"doc://co.pointfree.VaporRouting/documentation/AsyncKit/EventLoopFutureQueue/ContinueError":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncKit\/EventLoopFutureQueue\/ContinueError","navigatorTitle":[{"text":"ContinueError","kind":"identifier"}],"kind":"symbol","type":"topic","url":"\/documentation\/asynckit\/eventloopfuturequeue\/continueerror","abstract":[{"type":"text","text":"Errors that get propogated based on a future’s completion status and the next appended closure’s continuation condition."}],"fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ContinueError","kind":"identifier"}],"role":"symbol","title":"EventLoopFutureQueue.ContinueError"},"doc://co.pointfree.VaporRouting/documentation/AsyncKit/EventLoopFutureQueue/append(each:_:)-1fw85":{"abstract":[{"type":"text","text":"For each element of the provided collection, invoke the given generator"},{"text":" ","type":"text"},{"text":"and queue the returned future. Return a future whose value is an array","type":"text"},{"text":" ","type":"text"},{"text":"containing the result of each generated future in the same order as the","type":"text"},{"text":" ","type":"text"},{"text":"original sequence. The resulting array is intended to have semantics","type":"text"},{"text":" ","type":"text"},{"text":"substantially similar to those provided by ","type":"text"},{"type":"codeVoice","code":"EventLoop.flatten(_:on:)"},{"text":".","type":"text"}],"kind":"symbol","title":"append(each:_:)","role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncKit\/EventLoopFutureQueue\/append(each:_:)-1fw85","url":"\/documentation\/asynckit\/eventloopfuturequeue\/append(each:_:)-1fw85","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"append","kind":"identifier"},{"text":"<","kind":"text"},{"text":"S","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"Value","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"each","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"S","kind":"typeIdentifier"},{"text":", (","kind":"text"},{"text":"S","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"EventLoopFuture","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15EventLoopFutureC"},{"text":"<","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"text":"EventLoopFuture","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15EventLoopFutureC"},{"text":"<[","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":"]>","kind":"text"}]},"doc://co.pointfree.VaporRouting/documentation/AsyncKit/EventLoopFutureQueue/ContinueCondition":{"kind":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ContinueCondition","kind":"identifier"}],"title":"EventLoopFutureQueue.ContinueCondition","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncKit\/EventLoopFutureQueue\/ContinueCondition","navigatorTitle":[{"text":"ContinueCondition","kind":"identifier"}],"abstract":[{"text":"Under what conditions an appended closure should be run.","type":"text"}],"role":"symbol","url":"\/documentation\/asynckit\/eventloopfuturequeue\/continuecondition","type":"topic"},"doc://co.pointfree.VaporRouting/documentation/AsyncKit/EventLoopFutureQueue/append(each:_:)-3i4m4":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"append"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"S"},{"kind":"text","text":">("},{"kind":"externalParam","text":"each"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"S"},{"kind":"text","text":", ("},{"kind":"typeIdentifier","text":"S"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"EventLoopFuture","preciseIdentifier":"s:7NIOCore15EventLoopFutureC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"text":">) -> ","kind":"text"},{"text":"EventLoopFuture","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15EventLoopFutureC"},{"text":"<","kind":"text"},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":">"}],"title":"append(each:_:)","url":"\/documentation\/asynckit\/eventloopfuturequeue\/append(each:_:)-3i4m4","kind":"symbol","abstract":[{"type":"text","text":"Same as "},{"type":"codeVoice","code":"append(each:_:)"},{"type":"text","text":" above, but assumes all futures return "},{"type":"codeVoice","code":"Void"},{"text":" ","type":"text"},{"text":"and returns a ","type":"text"},{"code":"Void","type":"codeVoice"},{"text":" future instead of a result array.","type":"text"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncKit\/EventLoopFutureQueue\/append(each:_:)-3i4m4","role":"symbol","type":"topic"},"doc://co.pointfree.VaporRouting/documentation/AsyncKit":{"abstract":[],"kind":"symbol","url":"\/documentation\/asynckit","role":"collection","title":"AsyncKit","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncKit","type":"topic"},"doc://co.pointfree.VaporRouting/documentation/AsyncKit/EventLoopFutureQueue/eventLoop":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncKit\/EventLoopFutureQueue\/eventLoop","fragments":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"eventLoop","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7NIOCore9EventLoopP","text":"EventLoop","kind":"typeIdentifier"}],"abstract":[{"text":"The event loop that all the futures’s completions are handled on.","type":"text"}],"role":"symbol","title":"eventLoop","type":"topic","kind":"symbol","url":"\/documentation\/asynckit\/eventloopfuturequeue\/eventloop"},"doc://co.pointfree.VaporRouting/documentation/AsyncKit/EventLoopFutureQueue":{"kind":"symbol","title":"EventLoopFutureQueue","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"EventLoopFutureQueue"}],"role":"symbol","abstract":[{"type":"text","text":"Allows you to queue closures that produce an "},{"type":"codeVoice","code":"EventLoopFuture"},{"type":"text","text":", so each future only gets run if the previous ones complete, succeed, or fail."}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncKit\/EventLoopFutureQueue","url":"\/documentation\/asynckit\/eventloopfuturequeue","type":"topic","navigatorTitle":[{"kind":"identifier","text":"EventLoopFutureQueue"}]},"doc://co.pointfree.VaporRouting/documentation/AsyncKit/EventLoopFutureQueue/append(_:runningOn:)":{"kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"append","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Value","kind":"genericParameter"},{"text":">(() -> ","kind":"text"},{"text":"EventLoopFuture","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15EventLoopFutureC"},{"text":"<","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"text":"runningOn","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"EventLoopFutureQueue","kind":"typeIdentifier","preciseIdentifier":"s:8AsyncKit20EventLoopFutureQueueC"},{"text":".","kind":"text"},{"text":"ContinueCondition","kind":"typeIdentifier","preciseIdentifier":"s:8AsyncKit20EventLoopFutureQueueC17ContinueConditionO"},{"text":") -> ","kind":"text"},{"text":"EventLoopFuture","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15EventLoopFutureC"},{"text":"<","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":">","kind":"text"}],"title":"append(_:runningOn:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncKit\/EventLoopFutureQueue\/append(_:runningOn:)","abstract":[{"text":"An overload for ","type":"text"},{"type":"codeVoice","code":"append(generator:runningOn:)"},{"text":" that takes in an ","type":"text"},{"type":"codeVoice","code":"EventLoopFuture"},{"text":" as an auto closure to provide a better 1-liner API.","type":"text"}],"role":"symbol","url":"\/documentation\/asynckit\/eventloopfuturequeue\/append(_:runningon:)","type":"topic"},"doc://co.pointfree.VaporRouting/documentation/AsyncKit/EventLoopFutureQueue/append(onPrevious:generator:)":{"abstract":[{"text":"Adds another ","type":"text"},{"code":"EventLoopFuture","type":"codeVoice"},{"text":" producing closure to be run as soon as all previously queued future have completed, succeeded, or failed.","type":"text"}],"url":"\/documentation\/asynckit\/eventloopfuturequeue\/append(onprevious:generator:)","role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncKit\/EventLoopFutureQueue\/append(onPrevious:generator:)","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"append","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"Value"},{"kind":"text","text":">("},{"kind":"externalParam","text":"onPrevious"},{"kind":"text","text":": "},{"preciseIdentifier":"s:8AsyncKit20EventLoopFutureQueueC","kind":"typeIdentifier","text":"EventLoopFutureQueue"},{"kind":"text","text":"."},{"preciseIdentifier":"s:8AsyncKit20EventLoopFutureQueueC17ContinueConditionO","kind":"typeIdentifier","text":"ContinueCondition"},{"kind":"text","text":", "},{"kind":"externalParam","text":"generator"},{"kind":"text","text":": () -> "},{"preciseIdentifier":"s:7NIOCore15EventLoopFutureC","kind":"typeIdentifier","text":"EventLoopFuture"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":">) -> "},{"preciseIdentifier":"s:7NIOCore15EventLoopFutureC","kind":"typeIdentifier","text":"EventLoopFuture"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":">"}],"title":"append(onPrevious:generator:)","type":"topic"},"doc://co.pointfree.VaporRouting/documentation/AsyncKit/EventLoopFutureQueue/init(eventLoop:)":{"url":"\/documentation\/asynckit\/eventloopfuturequeue\/init(eventloop:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncKit\/EventLoopFutureQueue\/init(eventLoop:)","abstract":[{"text":"Create a new ","type":"text"},{"code":"EventLoopFutureQueue","type":"codeVoice"},{"text":" on a given event loop.","type":"text"}],"type":"topic","kind":"symbol","title":"init(eventLoop:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"eventLoop"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"EventLoop","preciseIdentifier":"s:7NIOCore9EventLoopP"},{"kind":"text","text":")"}],"role":"symbol"}}}