{"schemaVersion":{"patch":0,"minor":3,"major":0},"kind":"symbol","hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/URLRouting","doc:\/\/co.pointfree.VaporRouting\/documentation\/URLRouting\/PathBuilder","doc:\/\/co.pointfree.VaporRouting\/documentation\/URLRouting\/PathBuilder\/PathZipOOOOVV","doc:\/\/co.pointfree.VaporRouting\/documentation\/URLRouting\/PathBuilder\/PathZipOOOOVV\/Parser-Implementations"]]},"abstract":[{"text":"Returns a parser that transforms the output of this parser into a new parser.","type":"text"}],"variants":[{"paths":["\/documentation\/urlrouting\/pathbuilder\/pathzipoooovv\/flatmap(_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"metadata":{"role":"symbol","title":"flatMap(_:)","modules":[{"name":"URLRouting"}],"roleHeading":"Instance Method","extendedModule":"Parsing","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"flatMap","kind":"identifier"},{"text":"<","kind":"text"},{"text":"NewParser","kind":"genericParameter"},{"text":">((","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"NewParser"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:7Parsing7ParsersO","text":"Parsers","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:7Parsing7ParsersO7FlatMapV","text":"FlatMap","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"NewParser","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":">","kind":"text"}],"symbolKind":"method","externalID":"s:7Parsing6ParserPAAE7flatMapyAA7ParsersO04FlatD0Vy_qd__xGqd__6OutputQzcAaBRd__5InputQyd__ALRtzlF::SYNTHESIZED::s:10URLRouting11PathBuilderO0B9ZipOOOOVVV"},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/URLRouting\/PathBuilder\/PathZipOOOOVV\/flatMap(_:)"},"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"flatMap","kind":"identifier"},{"text":"<","kind":"text"},{"text":"NewParser","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"transform","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"@escaping","kind":"keyword"},{"text":" (","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"NewParser","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Parsers","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Parsers","kind":"typeIdentifier","preciseIdentifier":"s:7Parsing7ParsersO"},{"text":".","kind":"text"},{"text":"FlatMap","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Parsers\/FlatMap","kind":"typeIdentifier","preciseIdentifier":"s:7Parsing7ParsersO7FlatMapV"},{"text":"<","kind":"text"},{"text":"NewParser","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":"> ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"NewParser","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"Parser","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Parser","kind":"typeIdentifier","preciseIdentifier":"s:7Parsing6ParserP"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":" == ","kind":"text"},{"text":"NewParser","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Input","kind":"typeIdentifier"}],"platforms":["Linux"]}],"kind":"declarations"},{"parameters":[{"name":"transform","content":[{"type":"paragraph","inlineContent":[{"text":"A closure that transforms values of this parserâ€™s output and returns a","type":"text"},{"text":" ","type":"text"},{"text":"new parser.","type":"text"}]}]}],"kind":"parameters"},{"kind":"content","content":[{"type":"heading","text":"Return Value","level":2,"anchor":"return-value"},{"type":"paragraph","inlineContent":[{"type":"text","text":"A parser that transforms output from an upstream parser into a new parser."}]}]},{"kind":"content","content":[{"type":"heading","anchor":"discussion","text":"Discussion","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"This method is similar to "},{"type":"codeVoice","code":"Sequence.flatMap"},{"type":"text","text":", "},{"type":"codeVoice","code":"Optional.flatMap"},{"type":"text","text":", and "},{"type":"codeVoice","code":"Result.flatMap"},{"type":"text","text":" in the"},{"type":"text","text":" "},{"type":"text","text":"Swift standard library, as well as "},{"type":"codeVoice","code":"Publisher.flatMap"},{"type":"text","text":" in the Combine framework."}]},{"type":"heading","anchor":"Printability","text":"Printability","level":2},{"type":"paragraph","inlineContent":[{"code":"Parser.flatMap","type":"codeVoice"},{"type":"text","text":" is "},{"type":"emphasis","inlineContent":[{"type":"text","text":"not"}]},{"type":"text","text":" printable, as the logic contained inside its transform operation to"},{"type":"text","text":" "},{"type":"text","text":"some new parser is not reversible."}]},{"type":"paragraph","inlineContent":[{"text":"If you are building a parser-printer, avoid uses of ","type":"text"},{"type":"codeVoice","code":"flatMap"},{"text":" and instead prefer the use of","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"Parser\/map(_:)-4hsj5"},{"text":" with conversions that preserve printability.","type":"text"}]}]}],"references":{"doc://co.pointfree.VaporRouting/documentation/Parsing/Parsers/FlatMap":{"url":"\/documentation\/parsing\/parsers\/flatmap","type":"topic","title":"Parsers.FlatMap","kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Parsers\/FlatMap","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"FlatMap"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"FlatMap"}],"abstract":[{"text":"A parser that transforms the output of another parser into a new parser.","type":"text"}]},"doc://co.pointfree.VaporRouting/documentation/Parsing/Parsers":{"abstract":[{"text":"A namespace for types that serve as parsers.","type":"text"}],"title":"Parsers","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Parsers","kind":"identifier"}],"url":"\/documentation\/parsing\/parsers","type":"topic","kind":"symbol","role":"symbol","navigatorTitle":[{"text":"Parsers","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Parsers"},"doc://co.pointfree.VaporRouting/documentation/URLRouting/PathBuilder/PathZipOOOOVV":{"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/URLRouting\/PathBuilder\/PathZipOOOOVV","abstract":[],"kind":"symbol","url":"\/documentation\/urlrouting\/pathbuilder\/pathzipoooovv","navigatorTitle":[{"text":"PathZipOOOOVV","kind":"identifier"}],"role":"symbol","title":"PathBuilder.PathZipOOOOVV","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"PathZipOOOOVV","kind":"identifier"}]},"doc://co.pointfree.VaporRouting/documentation/URLRouting":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/URLRouting","url":"\/documentation\/urlrouting","role":"collection","abstract":[],"kind":"symbol","type":"topic","title":"URLRouting"},"doc://co.pointfree.VaporRouting/documentation/URLRouting/PathBuilder/PathZipOOOOVV/Parser-Implementations":{"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/URLRouting\/PathBuilder\/PathZipOOOOVV\/Parser-Implementations","abstract":[],"kind":"article","url":"\/documentation\/urlrouting\/pathbuilder\/pathzipoooovv\/parser-implementations","role":"collectionGroup","title":"Parser Implementations"},"doc://co.pointfree.VaporRouting/documentation/Parsing/Parser":{"abstract":[{"text":"Declares a type that can incrementally parse an ","type":"text"},{"code":"Output","type":"codeVoice"},{"text":" value from an ","type":"text"},{"code":"Input","type":"codeVoice"},{"text":" value.","type":"text"}],"title":"Parser","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Parser","kind":"identifier"}],"url":"\/documentation\/parsing\/parser","type":"topic","kind":"symbol","role":"symbol","navigatorTitle":[{"text":"Parser","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Parser"},"doc://co.pointfree.VaporRouting/documentation/URLRouting/PathBuilder":{"abstract":[{"text":"A custom parameter attribute that constructs path component parsers from closures. The","type":"text"},{"text":" ","type":"text"},{"text":"constructed parser runs a number of parsers against each patch component, one after the other,","type":"text"},{"text":" ","type":"text"},{"text":"and accumulates their outputs.","type":"text"}],"title":"PathBuilder","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"PathBuilder","kind":"identifier"}],"url":"\/documentation\/urlrouting\/pathbuilder","type":"topic","kind":"symbol","role":"symbol","navigatorTitle":[{"text":"PathBuilder","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/URLRouting\/PathBuilder"},"doc://co.pointfree.VaporRouting/documentation/URLRouting/PathBuilder/PathZipOOOOVV/flatMap(_:)":{"url":"\/documentation\/urlrouting\/pathbuilder\/pathzipoooovv\/flatmap(_:)","abstract":[{"text":"Returns a parser that transforms the output of this parser into a new parser.","type":"text"}],"kind":"symbol","role":"symbol","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/URLRouting\/PathBuilder\/PathZipOOOOVV\/flatMap(_:)","title":"flatMap(_:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"flatMap","kind":"identifier"},{"text":"<","kind":"text"},{"text":"NewParser","kind":"genericParameter"},{"text":">((","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"NewParser","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:7Parsing7ParsersO","text":"Parsers","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:7Parsing7ParsersO7FlatMapV","text":"FlatMap","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"NewParser"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":">"}]}}}