{"abstract":[{"text":"Wraps this parser with a type eraser.","type":"text"}],"metadata":{"title":"eraseToAnyParser()","modules":[{"name":"URLRouting"}],"symbolKind":"method","roleHeading":"Instance Method","role":"symbol","externalID":"s:7Parsing6ParserPAAE010eraseToAnyB0AA0eB0Vy5InputQz6OutputQzGyF::SYNTHESIZED::s:10URLRouting11PathBuilderO0B7ZipVOOOV","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"eraseToAnyParser","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"AnyParser","kind":"typeIdentifier","preciseIdentifier":"s:7Parsing9AnyParserV"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":">"}],"extendedModule":"Parsing"},"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/URLRouting\/PathBuilder\/PathZipVOOO\/eraseToAnyParser()","interfaceLanguage":"swift"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/urlrouting\/pathbuilder\/pathzipvooo\/erasetoanyparser()"]}],"primaryContentSections":[{"declarations":[{"platforms":["Linux"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"eraseToAnyParser","kind":"identifier"},{"text":"() -> ","kind":"text"},{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/AnyParser","text":"AnyParser","preciseIdentifier":"s:7Parsing9AnyParserV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":">","kind":"text"}],"languages":["swift"]}],"kind":"declarations"},{"kind":"content","content":[{"type":"heading","level":2,"anchor":"return-value","text":"Return Value"},{"type":"paragraph","inlineContent":[{"type":"text","text":"An "},{"type":"codeVoice","code":"AnyParser"},{"type":"text","text":" wrapping this parser."}]}]},{"kind":"content","content":[{"level":2,"anchor":"discussion","text":"Discussion","type":"heading"},{"inlineContent":[{"text":"This form of ","type":"text"},{"type":"emphasis","inlineContent":[{"type":"text","text":"type erasure"}]},{"text":" preserves abstraction across API boundaries, such as different","type":"text"},{"text":" ","type":"text"},{"text":"modules.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"When you expose your composed parsers as the "},{"type":"codeVoice","code":"AnyParser"},{"type":"text","text":" type, you can change the underlying"},{"type":"text","text":" "},{"type":"text","text":"implementation over time without affecting existing clients."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"Equivalent to passing "},{"code":"self","type":"codeVoice"},{"type":"text","text":" to "},{"code":"AnyParser.init","type":"codeVoice"},{"type":"text","text":"."}],"type":"paragraph"}]}],"schemaVersion":{"patch":0,"minor":3,"major":0},"kind":"symbol","hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/URLRouting","doc:\/\/co.pointfree.VaporRouting\/documentation\/URLRouting\/PathBuilder","doc:\/\/co.pointfree.VaporRouting\/documentation\/URLRouting\/PathBuilder\/PathZipVOOO","doc:\/\/co.pointfree.VaporRouting\/documentation\/URLRouting\/PathBuilder\/PathZipVOOO\/Parser-Implementations"]]},"sections":[],"references":{"doc://co.pointfree.VaporRouting/documentation/Parsing/AnyParser":{"abstract":[{"text":"A type-erased parser of ","type":"text"},{"code":"Output","type":"codeVoice"},{"text":" from ","type":"text"},{"type":"codeVoice","code":"Input"},{"type":"text","text":"."}],"url":"\/documentation\/parsing\/anyparser","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/AnyParser","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"AnyParser"}],"type":"topic","navigatorTitle":[{"kind":"identifier","text":"AnyParser"}],"role":"symbol","title":"AnyParser","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/URLRouting/PathBuilder":{"abstract":[{"text":"A custom parameter attribute that constructs path component parsers from closures. The","type":"text"},{"text":" ","type":"text"},{"text":"constructed parser runs a number of parsers against each patch component, one after the other,","type":"text"},{"text":" ","type":"text"},{"text":"and accumulates their outputs.","type":"text"}],"title":"PathBuilder","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"PathBuilder","kind":"identifier"}],"url":"\/documentation\/urlrouting\/pathbuilder","type":"topic","kind":"symbol","role":"symbol","navigatorTitle":[{"text":"PathBuilder","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/URLRouting\/PathBuilder"},"doc://co.pointfree.VaporRouting/documentation/URLRouting/PathBuilder/PathZipVOOO/Parser-Implementations":{"kind":"article","role":"collectionGroup","title":"Parser Implementations","abstract":[],"url":"\/documentation\/urlrouting\/pathbuilder\/pathzipvooo\/parser-implementations","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/URLRouting\/PathBuilder\/PathZipVOOO\/Parser-Implementations"},"doc://co.pointfree.VaporRouting/documentation/URLRouting":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/URLRouting","url":"\/documentation\/urlrouting","role":"collection","abstract":[],"kind":"symbol","type":"topic","title":"URLRouting"},"doc://co.pointfree.VaporRouting/documentation/URLRouting/PathBuilder/PathZipVOOO/eraseToAnyParser()":{"role":"symbol","abstract":[{"text":"Wraps this parser with a type eraser.","type":"text"}],"url":"\/documentation\/urlrouting\/pathbuilder\/pathzipvooo\/erasetoanyparser()","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/URLRouting\/PathBuilder\/PathZipVOOO\/eraseToAnyParser()","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"eraseToAnyParser"},{"kind":"text","text":"() -> "},{"preciseIdentifier":"s:7Parsing9AnyParserV","kind":"typeIdentifier","text":"AnyParser"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":">","kind":"text"}],"kind":"symbol","title":"eraseToAnyParser()"},"doc://co.pointfree.VaporRouting/documentation/URLRouting/PathBuilder/PathZipVOOO":{"title":"PathBuilder.PathZipVOOO","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/URLRouting\/PathBuilder\/PathZipVOOO","role":"symbol","abstract":[],"kind":"symbol","url":"\/documentation\/urlrouting\/pathbuilder\/pathzipvooo","navigatorTitle":[{"text":"PathZipVOOO","kind":"identifier"}],"type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"PathZipVOOO","kind":"identifier"}]}}}