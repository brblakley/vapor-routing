{"metadata":{"title":"verify(_:created:)","role":"symbol","externalID":"s:5Vapor12BCryptDigestC6verify_7createdSbSS_SStKF","roleHeading":"Instance Method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"verify"},{"kind":"text","text":"("},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"kind":"text","text":", "},{"kind":"externalParam","text":"created"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"symbolKind":"method","modules":[{"name":"Vapor"}]},"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/Vapor","doc:\/\/co.pointfree.VaporRouting\/documentation\/Vapor\/BCryptDigest"]]},"schemaVersion":{"major":0,"patch":0,"minor":3},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Vapor\/BCryptDigest\/verify(_:created:)"},"variants":[{"paths":["\/documentation\/vapor\/bcryptdigest\/verify(_:created:)"],"traits":[{"interfaceLanguage":"swift"}]}],"abstract":[{"type":"text","text":"Verifies an existing BCrypt hash matches the supplied plaintext value. Verification works by parsing the salt and version from"},{"type":"text","text":" "},{"type":"text","text":"the existing digest and using that information to hash the plaintext data. If hash digests match, this method returns "},{"type":"codeVoice","code":"true"},{"type":"text","text":"."}],"kind":"symbol","primaryContentSections":[{"declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"verify","kind":"identifier"},{"text":"(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"plaintext","kind":"internalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"created","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"hash","kind":"internalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"languages":["swift"],"platforms":["Linux"]}],"kind":"declarations"},{"parameters":[{"content":[{"inlineContent":[{"type":"text","text":"Plaintext data to digest and verify."}],"type":"paragraph"}],"name":"plaintext"},{"content":[{"type":"paragraph","inlineContent":[{"text":"Existing BCrypt hash to parse version, salt, and existing digest from.","type":"text"}]}],"name":"hash"}],"kind":"parameters"},{"content":[{"anchor":"return-value","level":2,"type":"heading","text":"Return Value"},{"inlineContent":[{"type":"text","text":""},{"type":"codeVoice","code":"true"},{"type":"text","text":" if the hash was created from the supplied plaintext data."}],"type":"paragraph"}],"kind":"content"},{"content":[{"level":2,"anchor":"discussion","text":"Discussion","type":"heading"},{"syntax":null,"code":["let hash = try BCrypt.hash(\"vapor\", cost: 4)","try BCrypt.verify(\"vapor\", created: hash) \/\/ true","try BCrypt.verify(\"foo\", created: hash) \/\/ false"],"type":"codeListing"},{"content":[{"inlineContent":[{"type":"text","text":""},{"type":"codeVoice","code":"CryptoError"},{"type":"text","text":" if hashing fails or if data conversion fails."}],"type":"paragraph"}],"style":"note","name":"Throws","type":"aside"}],"kind":"content"}],"sections":[],"references":{"doc://co.pointfree.VaporRouting/documentation/Vapor/BCryptDigest":{"url":"\/documentation\/vapor\/bcryptdigest","navigatorTitle":[{"kind":"identifier","text":"BCryptDigest"}],"title":"BCryptDigest","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Vapor\/BCryptDigest","role":"symbol","type":"topic","abstract":[{"type":"text","text":"Creates and verifies BCrypt hashes. Normally you will not need to initialize one of these classes and you will"},{"type":"text","text":" "},{"type":"text","text":"use the global "},{"type":"codeVoice","code":"BCrypt"},{"type":"text","text":" convenience instead."}],"kind":"symbol","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"BCryptDigest"}]},"doc://co.pointfree.VaporRouting/documentation/Vapor":{"title":"Vapor","abstract":[],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Vapor","kind":"symbol","url":"\/documentation\/vapor","type":"topic","role":"collection"},"doc://co.pointfree.VaporRouting/documentation/Vapor/BCryptDigest/verify(_:created:)":{"url":"\/documentation\/vapor\/bcryptdigest\/verify(_:created:)","title":"verify(_:created:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Vapor\/BCryptDigest\/verify(_:created:)","role":"symbol","type":"topic","abstract":[{"type":"text","text":"Verifies an existing BCrypt hash matches the supplied plaintext value. Verification works by parsing the salt and version from"},{"type":"text","text":" "},{"type":"text","text":"the existing digest and using that information to hash the plaintext data. If hash digests match, this method returns "},{"type":"codeVoice","code":"true"},{"type":"text","text":"."}],"kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"verify"},{"kind":"text","text":"("},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"kind":"text","text":", "},{"kind":"externalParam","text":"created"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}]}}}