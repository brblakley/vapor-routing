{"abstract":[{"type":"text","text":"A container providing arbitrary storage for extensions of an existing type, designed to obviate"},{"type":"text","text":" "},{"type":"text","text":"the problem of being unable to add stored properties to a type in an extension. Each stored item"},{"type":"text","text":" "},{"type":"text","text":"is keyed by a type conforming to "},{"type":"reference","isActive":true,"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Vapor\/StorageKey"},{"type":"text","text":" protocol."}],"schemaVersion":{"major":0,"patch":0,"minor":3},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Storage","kind":"identifier"}],"languages":["swift"],"platforms":["Linux"]}]}],"metadata":{"symbolKind":"struct","role":"symbol","roleHeading":"Structure","title":"Storage","externalID":"s:5Vapor7StorageV","modules":[{"name":"Vapor"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Storage"}],"navigatorTitle":[{"kind":"identifier","text":"Storage"}]},"kind":"symbol","variants":[{"paths":["\/documentation\/vapor\/storage"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/Vapor"]]},"topicSections":[{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/Vapor\/Storage\/init(logger:)"],"title":"Initializers"},{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/Vapor\/Storage\/clear()","doc:\/\/co.pointfree.VaporRouting\/documentation\/Vapor\/Storage\/contains(_:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/Vapor\/Storage\/get(_:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/Vapor\/Storage\/set(_:to:onShutdown:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/Vapor\/Storage\/shutdown()"],"title":"Instance Methods"},{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/Vapor\/Storage\/subscript(_:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/Vapor\/Storage\/subscript(_:default:)"],"title":"Subscripts"}],"sections":[],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Vapor\/Storage"},"references":{"doc://co.pointfree.VaporRouting/documentation/Vapor/Storage/init(logger:)":{"kind":"symbol","type":"topic","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"logger"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7Logging6LoggerV","kind":"typeIdentifier","text":"Logger"},{"kind":"text","text":")"}],"role":"symbol","abstract":[{"text":"Create a new ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Vapor\/Storage"},{"text":" container using the given logger.","type":"text"}],"url":"\/documentation\/vapor\/storage\/init(logger:)","title":"init(logger:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Vapor\/Storage\/init(logger:)"},"doc://co.pointfree.VaporRouting/documentation/Vapor/StorageKey":{"type":"topic","role":"symbol","title":"StorageKey","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"StorageKey"}],"abstract":[{"type":"text","text":"A key used to store values in a "},{"isActive":true,"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Vapor\/Storage","type":"reference"},{"type":"text","text":" must conform to this protocol."}],"url":"\/documentation\/vapor\/storagekey","kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Vapor\/StorageKey","navigatorTitle":[{"kind":"identifier","text":"StorageKey"}]},"doc://co.pointfree.VaporRouting/documentation/Vapor/Storage":{"type":"topic","role":"symbol","title":"Storage","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Storage"}],"abstract":[{"type":"text","text":"A container providing arbitrary storage for extensions of an existing type, designed to obviate"},{"type":"text","text":" "},{"type":"text","text":"the problem of being unable to add stored properties to a type in an extension. Each stored item"},{"type":"text","text":" "},{"type":"text","text":"is keyed by a type conforming to "},{"isActive":true,"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Vapor\/StorageKey","type":"reference"},{"type":"text","text":" protocol."}],"url":"\/documentation\/vapor\/storage","kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Vapor\/Storage","navigatorTitle":[{"kind":"identifier","text":"Storage"}]},"doc://co.pointfree.VaporRouting/documentation/Vapor/Storage/set(_:to:onShutdown:)":{"kind":"symbol","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"set","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"Key"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"Key"},{"kind":"text","text":".Type, "},{"kind":"externalParam","text":"to"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Key"},{"kind":"text","text":"."},{"text":"Value","kind":"typeIdentifier"},{"text":"?, ","kind":"text"},{"text":"onShutdown","kind":"externalParam"},{"text":": ((","kind":"text"},{"text":"Key","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ())?)","kind":"text"}],"role":"symbol","abstract":[{"text":"Set or remove a value for a given key, optionally providing a shutdown closure for the value.","type":"text"}],"url":"\/documentation\/vapor\/storage\/set(_:to:onshutdown:)","title":"set(_:to:onShutdown:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Vapor\/Storage\/set(_:to:onShutdown:)"},"doc://co.pointfree.VaporRouting/documentation/Vapor/Storage/get(_:)":{"abstract":[{"text":"Get the value of the given key if it exists and is of the proper type.","type":"text"}],"title":"get(_:)","url":"\/documentation\/vapor\/storage\/get(_:)","kind":"symbol","role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Vapor\/Storage\/get(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"get","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Key"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"Key"},{"kind":"text","text":".Type) -> "},{"kind":"typeIdentifier","text":"Key"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":"?"}],"type":"topic"},"doc://co.pointfree.VaporRouting/documentation/Vapor/Storage/clear()":{"abstract":[{"text":"Delete all values from the container. Does ","type":"text"},{"type":"emphasis","inlineContent":[{"type":"text","text":"not"}]},{"text":" invoke shutdown closures.","type":"text"}],"title":"clear()","url":"\/documentation\/vapor\/storage\/clear()","kind":"symbol","role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Vapor\/Storage\/clear()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"clear"},{"kind":"text","text":"()"}],"type":"topic"},"doc://co.pointfree.VaporRouting/documentation/Vapor":{"title":"Vapor","abstract":[],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Vapor","kind":"symbol","url":"\/documentation\/vapor","type":"topic","role":"collection"},"doc://co.pointfree.VaporRouting/documentation/Vapor/Storage/shutdown()":{"abstract":[{"text":"For every key in the container having a shutdown closure, invoke the closure. Designed to","type":"text"},{"text":" ","type":"text"},{"text":"be invoked during an explicit app shutdown process or in a reference typeâ€™s ","type":"text"},{"code":"deinit","type":"codeVoice"},{"type":"text","text":"."}],"title":"shutdown()","url":"\/documentation\/vapor\/storage\/shutdown()","kind":"symbol","role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Vapor\/Storage\/shutdown()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"shutdown"},{"kind":"text","text":"()"}],"type":"topic"},"doc://co.pointfree.VaporRouting/documentation/Vapor/Storage/subscript(_:default:)":{"abstract":[{"text":"Read access to a value via keyed subscript, adding the provided default","type":"text"},{"text":" ","type":"text"},{"text":"value to the storage if the key does not already exist. Similar to","type":"text"},{"text":" ","type":"text"},{"code":"Swift\/Dictionary\/subscript(key:default:)","type":"codeVoice"},{"type":"text","text":". The "},{"code":"defaultValue","type":"codeVoice"},{"type":"text","text":" autoclosure"},{"type":"text","text":" "},{"type":"text","text":"is evaluated only when the key does not already exist in the container."}],"title":"subscript(_:default:)","url":"\/documentation\/vapor\/storage\/subscript(_:default:)","kind":"symbol","role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Vapor\/Storage\/subscript(_:default:)","fragments":[{"kind":"keyword","text":"subscript"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Key"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"Key"},{"kind":"text","text":".Type, "},{"kind":"externalParam","text":"default"},{"kind":"text","text":" _: () -> "},{"kind":"typeIdentifier","text":"Key"},{"text":".","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Key","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Value","kind":"typeIdentifier"}],"type":"topic"},"doc://co.pointfree.VaporRouting/documentation/Vapor/Storage/subscript(_:)":{"type":"topic","role":"symbol","title":"subscript(_:)","fragments":[{"kind":"keyword","text":"subscript"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Key"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"Key"},{"kind":"text","text":".Type) -> "},{"kind":"typeIdentifier","text":"Key"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":"?"}],"abstract":[{"type":"text","text":"Read\/write access to values via keyed subscript."}],"url":"\/documentation\/vapor\/storage\/subscript(_:)","kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Vapor\/Storage\/subscript(_:)"},"doc://co.pointfree.VaporRouting/documentation/Vapor/Storage/contains(_:)":{"abstract":[{"text":"Test whether the given key exists in the container.","type":"text"}],"title":"contains(_:)","url":"\/documentation\/vapor\/storage\/contains(_:)","kind":"symbol","role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Vapor\/Storage\/contains(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"contains","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Key","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"typeIdentifier","text":"Key"},{"kind":"text","text":".Type) -> "},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"}],"type":"topic"}}}