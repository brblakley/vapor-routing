{"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Vapor\/Authenticatable\/guardMiddleware(throwing:)","interfaceLanguage":"swift"},"sections":[],"abstract":[{"text":"This middleware ensures that an ","type":"text"},{"code":"Authenticatable","type":"codeVoice"},{"text":" type ","type":"text"},{"code":"A","type":"codeVoice"},{"text":" has been authenticated","type":"text"},{"text":" ","type":"text"},{"text":"by a previous ","type":"text"},{"code":"Middleware","type":"codeVoice"},{"text":" or throws an ","type":"text"},{"code":"Error","type":"codeVoice"},{"text":". The middlewares that actually perform","type":"text"},{"text":" ","type":"text"},{"text":"authentication will ","type":"text"},{"type":"emphasis","inlineContent":[{"text":"not","type":"text"}]},{"text":" throw errors if they fail to authenticate the user (except in","type":"text"},{"text":" ","type":"text"},{"text":"some exceptional cases like malformed data). This allows the middlewares to be composed","type":"text"},{"text":" ","type":"text"},{"text":"together to create chains of authentication for multiple user types.","type":"text"}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/Vapor","doc:\/\/co.pointfree.VaporRouting\/documentation\/Vapor\/Authenticatable"]]},"schemaVersion":{"patch":0,"major":0,"minor":3},"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"guardMiddleware","kind":"identifier"},{"text":"(","kind":"text"},{"text":"throwing","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"error","kind":"internalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s5ErrorP","text":"Error","kind":"typeIdentifier"},{"text":" = Abort(.unauthorized, reason: \"\\(Self.self) not authenticated.\")) -> ","kind":"text"},{"preciseIdentifier":"s:5Vapor10MiddlewareP","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Vapor\/Middleware","text":"Middleware","kind":"typeIdentifier"}],"platforms":["Linux"]}],"kind":"declarations"},{"parameters":[{"name":"throwing","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":""},{"type":"codeVoice","code":"Error"},{"type":"text","text":" to throw if the type is not authed."}]}]}],"kind":"parameters"},{"content":[{"type":"heading","anchor":"discussion","level":2,"text":"Discussion"},{"type":"paragraph","inlineContent":[{"text":"Use this middleware to protect routes that might not otherwise attempt to access the","type":"text"},{"text":" ","type":"text"},{"text":"authenticated user (which always requires prior authentication).","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Use "},{"type":"codeVoice","code":"Authenticatable.guardMiddleware(...)"},{"type":"text","text":" to create an instance."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Use this middleware in conjunction with other middleware such as "},{"code":"BearerAuthenticator","type":"codeVoice"},{"type":"text","text":" "},{"type":"text","text":"and "},{"code":"BasicAuthenticator","type":"codeVoice"},{"type":"text","text":" to do the actual authentication."}]}],"kind":"content"}],"kind":"symbol","variants":[{"paths":["\/documentation\/vapor\/authenticatable\/guardmiddleware(throwing:)"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"role":"symbol","roleHeading":"Type Method","title":"guardMiddleware(throwing:)","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"guardMiddleware","kind":"identifier"},{"text":"(","kind":"text"},{"text":"throwing","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Error","kind":"typeIdentifier","preciseIdentifier":"s:s5ErrorP"},{"text":") -> ","kind":"text"},{"text":"Middleware","kind":"typeIdentifier","preciseIdentifier":"s:5Vapor10MiddlewareP"}],"externalID":"s:5Vapor15AuthenticatablePAAE15guardMiddleware8throwingAA0D0_ps5Error_p_tFZ","extendedModule":"Vapor","modules":[{"name":"Vapor"}],"symbolKind":"method"},"references":{"doc://co.pointfree.VaporRouting/documentation/Vapor/Authenticatable/guardMiddleware(throwing:)":{"title":"guardMiddleware(throwing:)","role":"symbol","url":"\/documentation\/vapor\/authenticatable\/guardmiddleware(throwing:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"guardMiddleware"},{"kind":"text","text":"("},{"kind":"externalParam","text":"throwing"},{"kind":"text","text":": "},{"preciseIdentifier":"s:s5ErrorP","kind":"typeIdentifier","text":"Error"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:5Vapor10MiddlewareP","kind":"typeIdentifier","text":"Middleware"}],"type":"topic","kind":"symbol","abstract":[{"text":"This middleware ensures that an ","type":"text"},{"code":"Authenticatable","type":"codeVoice"},{"text":" type ","type":"text"},{"type":"codeVoice","code":"A"},{"text":" has been authenticated","type":"text"},{"text":" ","type":"text"},{"text":"by a previous ","type":"text"},{"type":"codeVoice","code":"Middleware"},{"text":" or throws an ","type":"text"},{"type":"codeVoice","code":"Error"},{"text":". The middlewares that actually perform","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"authentication will "},{"type":"emphasis","inlineContent":[{"type":"text","text":"not"}]},{"type":"text","text":" throw errors if they fail to authenticate the user (except in"},{"type":"text","text":" "},{"type":"text","text":"some exceptional cases like malformed data). This allows the middlewares to be composed"},{"type":"text","text":" "},{"type":"text","text":"together to create chains of authentication for multiple user types."}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Vapor\/Authenticatable\/guardMiddleware(throwing:)"},"doc://co.pointfree.VaporRouting/documentation/Vapor":{"title":"Vapor","abstract":[],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Vapor","kind":"symbol","url":"\/documentation\/vapor","type":"topic","role":"collection"},"doc://co.pointfree.VaporRouting/documentation/Vapor/Middleware":{"abstract":[{"type":"codeVoice","code":"Middleware"},{"text":" is placed between the server and your router. It is capable of","type":"text"},{"text":" ","type":"text"},{"text":"mutating both incoming requests and outgoing responses. ","type":"text"},{"code":"Middleware","type":"codeVoice"},{"type":"text","text":" can choose"},{"type":"text","text":" "},{"type":"text","text":"to pass requests on to the next "},{"code":"Middleware","type":"codeVoice"},{"type":"text","text":" in a chain, or they can short circuit and"},{"type":"text","text":" "},{"type":"text","text":"return a custom "},{"type":"codeVoice","code":"Response"},{"type":"text","text":" if desired."}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Middleware"}],"navigatorTitle":[{"kind":"identifier","text":"Middleware"}],"role":"symbol","url":"\/documentation\/vapor\/middleware","kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Vapor\/Middleware","title":"Middleware","type":"topic"},"doc://co.pointfree.VaporRouting/documentation/Vapor/Authenticatable":{"abstract":[{"type":"text","text":"Capable of being authenticated."}],"type":"topic","title":"Authenticatable","navigatorTitle":[{"text":"Authenticatable","kind":"identifier"}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"Authenticatable","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Vapor\/Authenticatable","url":"\/documentation\/vapor\/authenticatable","kind":"symbol","role":"symbol"}}}