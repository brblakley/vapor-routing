{"primaryContentSections":[{"declarations":[{"platforms":["Linux"],"tokens":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AnyResponse","kind":"identifier"}],"languages":["swift"]}],"kind":"declarations"},{"kind":"content","content":[{"type":"heading","text":"Overview","level":2,"anchor":"overview"},{"type":"codeListing","syntax":null,"code":["router.get(\"foo\") { req -> AnyResponse in","    if \/* something *\/ {","        return AnyResponse(42)","    } else {","        return AnyResponse(\"string\")","    }","}"]},{"type":"paragraph","inlineContent":[{"text":"This can also be done using a ","type":"text"},{"code":"ResponseEncodable","type":"codeVoice"},{"text":" enum.","type":"text"}]},{"type":"codeListing","syntax":null,"code":["enum IntOrString: ResponseEncodable {","    case int(Int)","    case string(String)","","    func encode(for req: Request) throws -> EventLoopFuture<Response> {","        switch self {","        case .int(let i): return try i.encode(for: req)","        case .string(let s): return try s.encode(for: req)","        }","    }","}","","router.get(\"foo\") { req -> IntOrString in","    if \/* something *\/ {","        return .int(42)","    } else {","        return .string(\"string\")","    }","}"]}]}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/Vapor"]]},"abstract":[{"type":"text","text":"A type erased response useful for routes that can return more than one type."}],"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Vapor\/AnyResponse","interfaceLanguage":"swift"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/vapor\/anyresponse"]}],"sections":[],"schemaVersion":{"minor":3,"patch":0,"major":0},"relationshipsSections":[{"type":"conformsTo","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/Vapor\/ResponseEncodable"],"title":"Conforms To","kind":"relationships"}],"kind":"symbol","topicSections":[{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/Vapor\/AnyResponse\/init(_:)"],"title":"Initializers"},{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/Vapor\/AnyResponse\/encodeResponse(for:)"],"title":"Instance Methods"},{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/Vapor\/AnyResponse\/ResponseEncodable-Implementations"],"title":"Default Implementations","generated":true}],"metadata":{"symbolKind":"struct","modules":[{"name":"Vapor"}],"title":"AnyResponse","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AnyResponse","kind":"identifier"}],"navigatorTitle":[{"text":"AnyResponse","kind":"identifier"}],"roleHeading":"Structure","externalID":"s:5Vapor11AnyResponseV"},"references":{"doc://co.pointfree.VaporRouting/documentation/Vapor/ResponseEncodable":{"role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ResponseEncodable"}],"url":"\/documentation\/vapor\/responseencodable","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Vapor\/ResponseEncodable","navigatorTitle":[{"kind":"identifier","text":"ResponseEncodable"}],"kind":"symbol","title":"ResponseEncodable","abstract":[{"type":"text","text":"Can convert "},{"type":"codeVoice","code":"self"},{"type":"text","text":" to a "},{"type":"codeVoice","code":"Response"},{"type":"text","text":"."}]},"doc://co.pointfree.VaporRouting/documentation/Vapor/AnyResponse/init(_:)":{"fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"typeIdentifier","preciseIdentifier":"s:5Vapor17ResponseEncodableP","text":"ResponseEncodable"},{"kind":"text","text":")"}],"url":"\/documentation\/vapor\/anyresponse\/init(_:)","abstract":[{"type":"text","text":"Creates a new "},{"code":"AnyResponse","type":"codeVoice"},{"type":"text","text":"."}],"type":"topic","kind":"symbol","role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Vapor\/AnyResponse\/init(_:)","title":"init(_:)"},"doc://co.pointfree.VaporRouting/documentation/Vapor/AnyResponse/encodeResponse(for:)":{"abstract":[{"text":"Encodes an instance of ","type":"text"},{"type":"codeVoice","code":"Self"},{"text":" to a ","type":"text"},{"type":"codeVoice","code":"Response"},{"text":".","type":"text"}],"kind":"symbol","title":"encodeResponse(for:)","url":"\/documentation\/vapor\/anyresponse\/encoderesponse(for:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"encodeResponse","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"for"},{"kind":"text","text":": "},{"text":"Request","preciseIdentifier":"s:5Vapor7RequestC","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:5Vapor8ResponseC","text":"Response"},{"kind":"text","text":">"}],"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Vapor\/AnyResponse\/encodeResponse(for:)","role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/Vapor/AnyResponse":{"url":"\/documentation\/vapor\/anyresponse","role":"symbol","title":"AnyResponse","navigatorTitle":[{"text":"AnyResponse","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Vapor\/AnyResponse","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AnyResponse","kind":"identifier"}],"abstract":[{"type":"text","text":"A type erased response useful for routes that can return more than one type."}],"type":"topic"},"doc://co.pointfree.VaporRouting/documentation/Vapor":{"title":"Vapor","abstract":[],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Vapor","kind":"symbol","url":"\/documentation\/vapor","type":"topic","role":"collection"},"doc://co.pointfree.VaporRouting/documentation/Vapor/AnyResponse/ResponseEncodable-Implementations":{"type":"topic","kind":"article","abstract":[],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Vapor\/AnyResponse\/ResponseEncodable-Implementations","role":"collectionGroup","title":"ResponseEncodable Implementations","url":"\/documentation\/vapor\/anyresponse\/responseencodable-implementations"}}}