{"primaryContentSections":[{"declarations":[{"tokens":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Content","kind":"identifier"},{"text":" : ","kind":"text"},{"text":"Decodable","preciseIdentifier":"s:Se","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Encodable","preciseIdentifier":"s:SE","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"AsyncRequestDecodable","preciseIdentifier":"s:5Vapor21AsyncRequestDecodableP","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Vapor\/AsyncRequestDecodable","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"AsyncResponseEncodable","preciseIdentifier":"s:5Vapor22AsyncResponseEncodableP","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Vapor\/AsyncResponseEncodable","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"RequestDecodable","preciseIdentifier":"s:5Vapor16RequestDecodableP","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Vapor\/RequestDecodable","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"ResponseEncodable","preciseIdentifier":"s:5Vapor17ResponseEncodableP","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Vapor\/ResponseEncodable","kind":"typeIdentifier"}],"languages":["swift"],"platforms":["Linux"]}],"kind":"declarations"},{"kind":"content","content":[{"anchor":"overview","level":2,"type":"heading","text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Conformance to this protocol consists of:"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"Codable"}]}]},{"content":[{"inlineContent":[{"code":"RequestDecodable","type":"codeVoice"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"codeVoice","code":"ResponseEncodable"}],"type":"paragraph"}]}]},{"type":"paragraph","inlineContent":[{"text":"If adding conformance in an extension, you must ensure the type already conforms to ","type":"text"},{"code":"Codable","type":"codeVoice"},{"text":".","type":"text"}]},{"type":"codeListing","code":["struct Hello: Content {","    let message = \"Hello!\"","}","","router.get(\"greeting\") { req in","    return Hello() \/\/ {\"message\":\"Hello!\"}","}"],"syntax":null}]}],"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Vapor\/Content","interfaceLanguage":"swift"},"topicSections":[{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/Vapor\/Content\/afterDecode()-65hw5","doc:\/\/co.pointfree.VaporRouting\/documentation\/Vapor\/Content\/beforeEncode()-61cyv"],"title":"Instance Methods"},{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/Vapor\/Content\/defaultContentType-3ommu"],"title":"Type Properties"}],"sections":[],"metadata":{"modules":[{"name":"Vapor"}],"navigatorTitle":[{"kind":"identifier","text":"Content"}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Content"}],"title":"Content","role":"symbol","externalID":"s:5Vapor7ContentP","roleHeading":"Protocol","symbolKind":"protocol"},"kind":"symbol","schemaVersion":{"major":0,"patch":0,"minor":3},"relationshipsSections":[{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/Vapor\/AsyncRequestDecodable","doc:\/\/co.pointfree.VaporRouting\/documentation\/Vapor\/AsyncResponseEncodable","doc:\/\/co.pointfree.VaporRouting\/documentation\/Vapor\/RequestDecodable","doc:\/\/co.pointfree.VaporRouting\/documentation\/Vapor\/ResponseEncodable","doc:\/\/co.pointfree.VaporRouting\/Se","doc:\/\/co.pointfree.VaporRouting\/SE"],"title":"Inherits From","kind":"relationships","type":"inheritsFrom"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/vapor\/content"]}],"abstract":[{"text":"Convertible to \/ from content in an HTTP message.","type":"text"}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/Vapor"]]},"references":{"doc://co.pointfree.VaporRouting/documentation/Vapor/RequestDecodable":{"role":"symbol","title":"RequestDecodable","url":"\/documentation\/vapor\/requestdecodable","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Vapor\/RequestDecodable","type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"RequestDecodable"}],"abstract":[{"type":"text","text":"Can convert "},{"type":"codeVoice","code":"Request"},{"type":"text","text":" to a "},{"type":"codeVoice","code":"Self"},{"type":"text","text":"."}],"navigatorTitle":[{"kind":"identifier","text":"RequestDecodable"}],"kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/Vapor/AsyncRequestDecodable":{"title":"AsyncRequestDecodable","url":"\/documentation\/vapor\/asyncrequestdecodable","role":"symbol","abstract":[{"type":"text","text":"Can convert "},{"type":"codeVoice","code":"Request"},{"type":"text","text":" to a "},{"type":"codeVoice","code":"Self"},{"text":".","type":"text"}],"navigatorTitle":[{"text":"AsyncRequestDecodable","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Vapor\/AsyncRequestDecodable","type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AsyncRequestDecodable","kind":"identifier"}],"kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/Vapor/Content":{"url":"\/documentation\/vapor\/content","type":"topic","title":"Content","kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Vapor\/Content","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Content"}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Content"}],"abstract":[{"type":"text","text":"Convertible to \/ from content in an HTTP message."}]},"doc://co.pointfree.VaporRouting/documentation/Vapor/AsyncResponseEncodable":{"title":"AsyncResponseEncodable","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Vapor\/AsyncResponseEncodable","url":"\/documentation\/vapor\/asyncresponseencodable","type":"topic","abstract":[{"type":"text","text":"Can convert "},{"type":"codeVoice","code":"self"},{"type":"text","text":" to a "},{"code":"Response","type":"codeVoice"},{"text":".","type":"text"}],"kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"AsyncResponseEncodable"}],"navigatorTitle":[{"kind":"identifier","text":"AsyncResponseEncodable"}],"role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/Vapor/Content/defaultContentType-3ommu":{"fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"defaultContentType"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"HTTPMediaType","preciseIdentifier":"s:5Vapor13HTTPMediaTypeV"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Vapor\/Content\/defaultContentType-3ommu","abstract":[{"text":"The default ","type":"text"},{"code":"MediaType","type":"codeVoice"},{"text":" to use when ","type":"text"},{"inlineContent":[{"type":"text","text":"encoding"}],"type":"emphasis"},{"text":" content. This can always be overridden at the encode call.","type":"text"}],"kind":"symbol","type":"topic","required":true,"role":"symbol","title":"defaultContentType","defaultImplementations":1,"url":"\/documentation\/vapor\/content\/defaultcontenttype-3ommu"},"doc://co.pointfree.VaporRouting/documentation/Vapor/Content/afterDecode()-65hw5":{"defaultImplementations":1,"required":true,"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Vapor\/Content\/afterDecode()-65hw5","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"afterDecode"},{"kind":"text","text":"() "},{"kind":"keyword","text":"throws"}],"url":"\/documentation\/vapor\/content\/afterdecode()-65hw5","kind":"symbol","abstract":[{"text":"Called after this ","type":"text"},{"code":"Content","type":"codeVoice"},{"text":" is decoded, generally from a ","type":"text"},{"code":"Request","type":"codeVoice"},{"text":" object.","type":"text"}],"role":"symbol","type":"topic","title":"afterDecode()"},"doc://co.pointfree.VaporRouting/documentation/Vapor":{"title":"Vapor","abstract":[],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Vapor","kind":"symbol","url":"\/documentation\/vapor","type":"topic","role":"collection"},"doc://co.pointfree.VaporRouting/documentation/Vapor/ResponseEncodable":{"role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ResponseEncodable"}],"url":"\/documentation\/vapor\/responseencodable","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Vapor\/ResponseEncodable","navigatorTitle":[{"kind":"identifier","text":"ResponseEncodable"}],"kind":"symbol","title":"ResponseEncodable","abstract":[{"type":"text","text":"Can convert "},{"type":"codeVoice","code":"self"},{"type":"text","text":" to a "},{"type":"codeVoice","code":"Response"},{"type":"text","text":"."}]},"doc://co.pointfree.VaporRouting/SE":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/SE","type":"unresolvable","title":"Swift.Encodable"},"doc://co.pointfree.VaporRouting/documentation/Vapor/Content/beforeEncode()-61cyv":{"kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"beforeEncode","kind":"identifier"},{"text":"() ","kind":"text"},{"text":"throws","kind":"keyword"}],"defaultImplementations":1,"abstract":[{"text":"Called before this ","type":"text"},{"code":"Content","type":"codeVoice"},{"text":" is encoded, generally for a ","type":"text"},{"code":"Response","type":"codeVoice"},{"text":" object.","type":"text"}],"required":true,"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Vapor\/Content\/beforeEncode()-61cyv","role":"symbol","title":"beforeEncode()","url":"\/documentation\/vapor\/content\/beforeencode()-61cyv"},"doc://co.pointfree.VaporRouting/Se":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/Se","type":"unresolvable","title":"Swift.Decodable"}}}