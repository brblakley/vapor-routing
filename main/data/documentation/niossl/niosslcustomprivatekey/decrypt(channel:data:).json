{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOSSL\/NIOSSLCustomPrivateKey\/decrypt(channel:data:)"},"metadata":{"required":true,"roleHeading":"Instance Method","modules":[{"name":"NIOSSL"}],"externalID":"s:6NIOSSL22NIOSSLCustomPrivateKeyP7decrypt7channel4data7NIOCore15EventLoopFutureCyAG10ByteBufferVGAG7Channel_p_AKtF","symbolKind":"method","role":"symbol","title":"decrypt(channel:data:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"decrypt"},{"kind":"text","text":"("},{"kind":"externalParam","text":"channel"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Channel","preciseIdentifier":"s:7NIOCore7ChannelP"},{"kind":"text","text":", "},{"kind":"externalParam","text":"data"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ByteBuffer","preciseIdentifier":"s:7NIOCore10ByteBufferV"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"EventLoopFuture","preciseIdentifier":"s:7NIOCore15EventLoopFutureC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"ByteBuffer","preciseIdentifier":"s:7NIOCore10ByteBufferV"},{"kind":"text","text":">"}]},"kind":"symbol","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/niossl\/niosslcustomprivatekey\/decrypt(channel:data:)"]}],"schemaVersion":{"minor":3,"patch":0,"major":0},"sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["Linux"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"decrypt","kind":"identifier"},{"text":"(","kind":"text"},{"text":"channel","kind":"externalParam"},{"text":": ","kind":"text"},{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/Channel","preciseIdentifier":"s:7NIOCore7ChannelP","text":"Channel","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"data","kind":"externalParam"},{"text":": ","kind":"text"},{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ByteBuffer","preciseIdentifier":"s:7NIOCore10ByteBufferV","text":"ByteBuffer","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ByteBuffer","preciseIdentifier":"s:7NIOCore10ByteBufferV","text":"ByteBuffer","kind":"typeIdentifier"},{"text":">","kind":"text"}]}]},{"parameters":[{"name":"channel","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"code":"Channel","type":"codeVoice"},{"type":"text","text":" representing the connection for which we are performing the decryption operation."}]}]},{"name":"data","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The data to be decrypted."}]}]}],"kind":"parameters"},{"content":[{"text":"Return Value","type":"heading","anchor":"return-value","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"An "},{"type":"codeVoice","code":"EventLoopFuture"},{"type":"text","text":" that will be fulfilled with a "},{"type":"codeVoice","code":"ByteBuffer"},{"type":"text","text":" containing the decrypted bytes, if"},{"type":"text","text":" "},{"type":"text","text":"the decryption operation completes, or that will be failed with a relevant "},{"type":"codeVoice","code":"Error"},{"type":"text","text":" if the decrypted bytes"},{"type":"text","text":" "},{"type":"text","text":"could not be produced."}]}],"kind":"content"},{"content":[{"text":"Discussion","anchor":"discussion","level":2,"type":"heading"},{"inlineContent":[{"text":"The data being passed to the call should be decrypted using ","type":"text"},{"inlineContent":[{"type":"text","text":"raw"}],"type":"emphasis"},{"text":" RSA public key decryption, without padding.","type":"text"},{"text":" ","type":"text"},{"text":"This call will always execute on ","type":"text"},{"code":"channel.eventLoop","type":"codeVoice"},{"text":".","type":"text"}],"type":"paragraph"},{"inlineContent":[{"text":"This function should only be implemented for RSA keys, and then only if you support RSA key exchange. If you","type":"text"},{"text":" ","type":"text"},{"text":"are only using TLS 1.3 and later, this function is entirely unnecessary and it will never be called.","type":"text"}],"type":"paragraph"}],"kind":"content"}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOSSL","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOSSL\/NIOSSLCustomPrivateKey"]]},"abstract":[{"text":"Called to perform a decryption operation.","type":"text"}],"references":{"doc://co.pointfree.VaporRouting/documentation/NIOCore/ByteBuffer":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ByteBuffer"}],"url":"\/documentation\/niocore\/bytebuffer","title":"ByteBuffer","kind":"symbol","type":"topic","abstract":[{"type":"codeVoice","code":"ByteBuffer"},{"type":"text","text":" stores contiguously allocated raw bytes. It is a random and sequential accessible sequence of zero or"},{"type":"text","text":" "},{"type":"text","text":"more bytes (octets)."}],"navigatorTitle":[{"kind":"identifier","text":"ByteBuffer"}],"role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ByteBuffer"},"doc://co.pointfree.VaporRouting/documentation/NIOSSL/NIOSSLCustomPrivateKey":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOSSL\/NIOSSLCustomPrivateKey","type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"NIOSSLCustomPrivateKey","kind":"identifier"}],"navigatorTitle":[{"text":"NIOSSLCustomPrivateKey","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/niossl\/niosslcustomprivatekey","abstract":[{"type":"reference","isActive":true,"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOSSL\/NIOSSLCustomPrivateKey"},{"text":" defines the interface of a custom, non-BoringSSL private key.","type":"text"}],"title":"NIOSSLCustomPrivateKey","role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOSSL":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOSSL","type":"topic","kind":"symbol","url":"\/documentation\/niossl","abstract":[],"title":"NIOSSL","role":"collection"},"doc://co.pointfree.VaporRouting/documentation/NIOSSL/NIOSSLCustomPrivateKey/decrypt(channel:data:)":{"url":"\/documentation\/niossl\/niosslcustomprivatekey\/decrypt(channel:data:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOSSL\/NIOSSLCustomPrivateKey\/decrypt(channel:data:)","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"decrypt","kind":"identifier"},{"text":"(","kind":"text"},{"text":"channel","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7NIOCore7ChannelP","text":"Channel","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"data","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7NIOCore10ByteBufferV","text":"ByteBuffer","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:7NIOCore10ByteBufferV","text":"ByteBuffer","kind":"typeIdentifier"},{"text":">","kind":"text"}],"required":true,"title":"decrypt(channel:data:)","role":"symbol","type":"topic","abstract":[{"text":"Called to perform a decryption operation.","type":"text"}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/Channel":{"url":"\/documentation\/niocore\/channel","navigatorTitle":[{"kind":"identifier","text":"Channel"}],"title":"Channel","role":"symbol","abstract":[{"type":"text","text":"A "},{"code":"Channel","type":"codeVoice"},{"type":"text","text":" is easiest thought of as a network socket. But it can be anything that is capable of I\/O operations such"},{"type":"text","text":" "},{"type":"text","text":"as read, write, connect, and bind."}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/Channel","kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Channel"}],"type":"topic"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoopFuture":{"navigatorTitle":[{"kind":"identifier","text":"EventLoopFuture"}],"abstract":[{"text":"Holder for a result that will be provided later.","type":"text"}],"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"EventLoopFuture"}],"kind":"symbol","url":"\/documentation\/niocore\/eventloopfuture","role":"symbol","title":"EventLoopFuture","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture","type":"topic"}}}