{"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOSSL","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOSSL\/NIOSSLPublicKey"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOSSL\/NIOSSLPublicKey\/toSPKIBytes()"},"metadata":{"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"toSPKIBytes","kind":"identifier"},{"text":"() ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> [","kind":"text"},{"text":"UInt8","kind":"typeIdentifier","preciseIdentifier":"s:s5UInt8V"},{"text":"]","kind":"text"}],"roleHeading":"Instance Method","symbolKind":"method","role":"symbol","extendedModule":"NIOSSL","modules":[{"name":"NIOSSL"}],"title":"toSPKIBytes()","externalID":"s:6NIOSSL15NIOSSLPublicKeyC11toSPKIBytesSays5UInt8VGyKF"},"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"toSPKIBytes"},{"kind":"text","text":"() "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> ["},{"preciseIdentifier":"s:s5UInt8V","kind":"typeIdentifier","text":"UInt8"},{"kind":"text","text":"]"}],"platforms":["Linux"]}],"kind":"declarations"},{"content":[{"anchor":"return-value","level":2,"type":"heading","text":"Return Value"},{"inlineContent":[{"type":"text","text":"The DER-encoded SubjectPublicKeyInfo bytes for this public key."}],"type":"paragraph"}],"kind":"content"},{"content":[{"type":"heading","text":"Discussion","level":2,"anchor":"discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The SubjectPublicKeyInfo format is defined in RFC 5280. In addition to the raw key bytes, it also"},{"type":"text","text":" "},{"type":"text","text":"provides an identifier of the algorithm, ensuring that the key can be unambiguously decoded."}]},{"style":"note","type":"aside","content":[{"inlineContent":[{"type":"text","text":"If an error occurred while serializing the key."}],"type":"paragraph"}],"name":"Throws"}],"kind":"content"}],"kind":"symbol","abstract":[{"type":"text","text":"Extracts the bytes of this public key in the SubjectPublicKeyInfo format."}],"sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/niossl\/niosslpublickey\/tospkibytes()"]}],"schemaVersion":{"minor":3,"major":0,"patch":0},"references":{"doc://co.pointfree.VaporRouting/documentation/NIOSSL":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOSSL","type":"topic","kind":"symbol","url":"\/documentation\/niossl","abstract":[],"title":"NIOSSL","role":"collection"},"doc://co.pointfree.VaporRouting/documentation/NIOSSL/NIOSSLPublicKey":{"url":"\/documentation\/niossl\/niosslpublickey","type":"topic","title":"NIOSSLPublicKey","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"NIOSSLPublicKey"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOSSL\/NIOSSLPublicKey","role":"symbol","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"NIOSSLPublicKey"}],"abstract":[{"type":"text","text":"A "},{"isActive":true,"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOSSL\/NIOSSLPublicKey","type":"reference"},{"type":"text","text":" is an abstract handle to a public key owned by BoringSSL."}]},"doc://co.pointfree.VaporRouting/documentation/NIOSSL/NIOSSLPublicKey/toSPKIBytes()":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOSSL\/NIOSSLPublicKey\/toSPKIBytes()","role":"symbol","kind":"symbol","title":"toSPKIBytes()","abstract":[{"type":"text","text":"Extracts the bytes of this public key in the SubjectPublicKeyInfo format."}],"url":"\/documentation\/niossl\/niosslpublickey\/tospkibytes()","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"toSPKIBytes","kind":"identifier"},{"text":"() ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> [","kind":"text"},{"text":"UInt8","kind":"typeIdentifier","preciseIdentifier":"s:s5UInt8V"},{"text":"]","kind":"text"}]}}}