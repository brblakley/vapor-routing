{"abstract":[{"type":"text","text":"A "},{"type":"codeVoice","code":"HTTPClientProtocolUpgrader"},{"type":"text","text":" that knows how to do the WebSocket upgrade dance."}],"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/NIOWebSocketClientUpgrader","interfaceLanguage":"swift"},"schemaVersion":{"patch":0,"minor":3,"major":0},"sections":[],"metadata":{"modules":[{"name":"NIOWebSocket"}],"title":"NIOWebSocketClientUpgrader","symbolKind":"class","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"NIOWebSocketClientUpgrader"}],"externalID":"s:12NIOWebSocket0aB14ClientUpgraderC","roleHeading":"Class","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"NIOWebSocketClientUpgrader"}]},"kind":"symbol","topicSections":[{"title":"Initializers","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/NIOWebSocketClientUpgrader\/init(requestKey:maxFrameSize:automaticErrorHandling:upgradePipelineHandler:)"]},{"title":"Instance Properties","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/NIOWebSocketClientUpgrader\/requiredUpgradeHeaders","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/NIOWebSocketClientUpgrader\/supportedProtocol"]},{"title":"Instance Methods","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/NIOWebSocketClientUpgrader\/addCustom(upgradeRequestHeaders:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/NIOWebSocketClientUpgrader\/shouldAllowUpgrade(upgradeResponse:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/NIOWebSocketClientUpgrader\/upgrade(context:upgradeResponse:)"]},{"title":"Type Methods","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/NIOWebSocketClientUpgrader\/randomRequestKey()","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/NIOWebSocketClientUpgrader\/randomRequestKey(using:)"]}],"relationshipsSections":[{"title":"Conforms To","kind":"relationships","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/NIOHTTPClientProtocolUpgrader"],"type":"conformsTo"}],"primaryContentSections":[{"declarations":[{"tokens":[{"text":"final","kind":"keyword"},{"text":" ","kind":"text"},{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"NIOWebSocketClientUpgrader","kind":"identifier"}],"languages":["swift"],"platforms":["Linux"]}],"kind":"declarations"},{"content":[{"type":"heading","anchor":"overview","level":2,"text":"Overview"},{"type":"paragraph","inlineContent":[{"text":"This upgrader assumes that the ","type":"text"},{"code":"HTTPClientUpgradeHandler","type":"codeVoice"},{"text":" will create and send the upgrade request.","type":"text"},{"text":" ","type":"text"},{"text":"This upgrader also assumes that the ","type":"text"},{"code":"HTTPClientUpgradeHandler","type":"codeVoice"},{"text":" will appropriately mutate the","type":"text"},{"text":" ","type":"text"},{"text":"pipeline to remove the HTTP ","type":"text"},{"code":"ChannelHandler","type":"codeVoice"},{"text":"s.","type":"text"}]}],"kind":"content"}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket"]]},"variants":[{"paths":["\/documentation\/niowebsocket\/niowebsocketclientupgrader"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://co.pointfree.VaporRouting/documentation/NIOWebSocket/NIOWebSocketClientUpgrader/shouldAllowUpgrade(upgradeResponse:)":{"abstract":[{"text":"Allow or deny the upgrade based on the upgrade HTTP response","type":"text"},{"type":"text","text":" "},{"type":"text","text":"headers containing the correct accept key."}],"type":"topic","url":"\/documentation\/niowebsocket\/niowebsocketclientupgrader\/shouldallowupgrade(upgraderesponse:)","title":"shouldAllowUpgrade(upgradeResponse:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/NIOWebSocketClientUpgrader\/shouldAllowUpgrade(upgradeResponse:)","role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"shouldAllowUpgrade"},{"kind":"text","text":"("},{"kind":"externalParam","text":"upgradeResponse"},{"kind":"text","text":": "},{"preciseIdentifier":"s:8NIOHTTP116HTTPResponseHeadV","kind":"typeIdentifier","text":"HTTPResponseHead"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"}]},"doc://co.pointfree.VaporRouting/documentation/NIOWebSocket/NIOWebSocketClientUpgrader":{"navigatorTitle":[{"text":"NIOWebSocketClientUpgrader","kind":"identifier"}],"title":"NIOWebSocketClientUpgrader","abstract":[{"type":"text","text":"A "},{"code":"HTTPClientProtocolUpgrader","type":"codeVoice"},{"type":"text","text":" that knows how to do the WebSocket upgrade dance."}],"url":"\/documentation\/niowebsocket\/niowebsocketclientupgrader","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/NIOWebSocketClientUpgrader","role":"symbol","type":"topic","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"NIOWebSocketClientUpgrader","kind":"identifier"}],"kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOWebSocket/NIOWebSocketClientUpgrader/init(requestKey:maxFrameSize:automaticErrorHandling:upgradePipelineHandler:)":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/NIOWebSocketClientUpgrader\/init(requestKey:maxFrameSize:automaticErrorHandling:upgradePipelineHandler:)","kind":"symbol","abstract":[],"type":"topic","role":"symbol","title":"init(requestKey:maxFrameSize:automaticErrorHandling:upgradePipelineHandler:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"requestKey"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"kind":"text","text":", "},{"kind":"externalParam","text":"maxFrameSize"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"},{"kind":"text","text":", "},{"kind":"externalParam","text":"automaticErrorHandling"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"text":", ","kind":"text"},{"text":"upgradePipelineHandler","kind":"externalParam"},{"text":": (","kind":"text"},{"preciseIdentifier":"s:7NIOCore7ChannelP","text":"Channel","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"preciseIdentifier":"s:8NIOHTTP116HTTPResponseHeadV","text":"HTTPResponseHead","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"},{"text":">)","kind":"text"}],"url":"\/documentation\/niowebsocket\/niowebsocketclientupgrader\/init(requestkey:maxframesize:automaticerrorhandling:upgradepipelinehandler:)"},"doc://co.pointfree.VaporRouting/documentation/NIOWebSocket":{"url":"\/documentation\/niowebsocket","type":"topic","role":"collection","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket","title":"NIOWebSocket","abstract":[],"kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOWebSocket/NIOWebSocketClientUpgrader/requiredUpgradeHeaders":{"kind":"symbol","type":"topic","url":"\/documentation\/niowebsocket\/niowebsocketclientupgrader\/requiredupgradeheaders","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/NIOWebSocketClientUpgrader\/requiredUpgradeHeaders","abstract":[{"text":"None of the websocket headers are actually defined as ‘required’.","type":"text"}],"fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"requiredUpgradeHeaders"},{"kind":"text","text":": ["},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":"]"}],"role":"symbol","title":"requiredUpgradeHeaders"},"doc://co.pointfree.VaporRouting/documentation/NIOWebSocket/NIOWebSocketClientUpgrader/randomRequestKey(using:)":{"type":"topic","kind":"symbol","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"randomRequestKey","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Generator","kind":"genericParameter"},{"kind":"text","text":">("},{"kind":"externalParam","text":"using"},{"kind":"text","text":": "},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Generator"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"}],"title":"randomRequestKey(using:)","url":"\/documentation\/niowebsocket\/niowebsocketclientupgrader\/randomrequestkey(using:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/NIOWebSocketClientUpgrader\/randomRequestKey(using:)","role":"symbol","abstract":[{"type":"text","text":"Generates a random WebSocket Request Key by generating 16 bytes randomly and encoding them as a base64 string as defined in RFC6455 https:\/\/tools.ietf.org\/html\/rfc6455#section-4.1"}]},"doc://co.pointfree.VaporRouting/documentation/NIOWebSocket/NIOWebSocketClientUpgrader/upgrade(context:upgradeResponse:)":{"abstract":[{"type":"text","text":"Called when the upgrade response has been flushed and it is safe to mutate the channel"},{"type":"text","text":" "},{"type":"text","text":"pipeline. Adds channel handlers for websocket frame encoding, decoding and errors."}],"url":"\/documentation\/niowebsocket\/niowebsocketclientupgrader\/upgrade(context:upgraderesponse:)","role":"symbol","title":"upgrade(context:upgradeResponse:)","type":"topic","kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/NIOWebSocketClientUpgrader\/upgrade(context:upgradeResponse:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"upgrade","kind":"identifier"},{"text":"(","kind":"text"},{"text":"context","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC","text":"ChannelHandlerContext"},{"kind":"text","text":", "},{"kind":"externalParam","text":"upgradeResponse"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:8NIOHTTP116HTTPResponseHeadV","text":"HTTPResponseHead"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"kind":"text","text":">"}]},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP1/NIOHTTPClientProtocolUpgrader":{"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"NIOHTTPClientProtocolUpgrader","kind":"identifier"}],"role":"symbol","url":"\/documentation\/niohttp1\/niohttpclientprotocolupgrader","abstract":[{"text":"An object that implements ","type":"text"},{"type":"codeVoice","code":"NIOHTTPClientProtocolUpgrader"},{"text":" knows how to handle HTTP upgrade to","type":"text"},{"text":" ","type":"text"},{"text":"a protocol on a client-side channel.","type":"text"},{"text":" ","type":"text"},{"text":"It has the option of denying this upgrade based upon the server response.","type":"text"}],"kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/NIOHTTPClientProtocolUpgrader","navigatorTitle":[{"text":"NIOHTTPClientProtocolUpgrader","kind":"identifier"}],"title":"NIOHTTPClientProtocolUpgrader","type":"topic"},"doc://co.pointfree.VaporRouting/documentation/NIOWebSocket/NIOWebSocketClientUpgrader/supportedProtocol":{"type":"topic","url":"\/documentation\/niowebsocket\/niowebsocketclientupgrader\/supportedprotocol","abstract":[{"type":"text","text":"RFC 6455 specs this as the required entry in the Upgrade header."}],"role":"symbol","title":"supportedProtocol","kind":"symbol","fragments":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"supportedProtocol","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/NIOWebSocketClientUpgrader\/supportedProtocol"},"doc://co.pointfree.VaporRouting/documentation/NIOWebSocket/NIOWebSocketClientUpgrader/addCustom(upgradeRequestHeaders:)":{"type":"topic","url":"\/documentation\/niowebsocket\/niowebsocketclientupgrader\/addcustom(upgraderequestheaders:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/NIOWebSocketClientUpgrader\/addCustom(upgradeRequestHeaders:)","title":"addCustom(upgradeRequestHeaders:)","abstract":[{"type":"text","text":"Add additional headers that are needed for a WebSocket upgrade request."}],"kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"addCustom"},{"kind":"text","text":"("},{"kind":"externalParam","text":"upgradeRequestHeaders"},{"kind":"text","text":": "},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"preciseIdentifier":"s:8NIOHTTP111HTTPHeadersV","kind":"typeIdentifier","text":"HTTPHeaders"},{"kind":"text","text":")"}],"role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOWebSocket/NIOWebSocketClientUpgrader/randomRequestKey()":{"abstract":[{"type":"text","text":"Generates a random WebSocket Request Key by generating 16 bytes randomly using the "},{"code":"SystemRandomNumberGenerator","type":"codeVoice"},{"type":"text","text":" and encoding them as a base64 string as defined in RFC6455 https:\/\/tools.ietf.org\/html\/rfc6455#section-4.1."}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/NIOWebSocketClientUpgrader\/randomRequestKey()","role":"symbol","kind":"symbol","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"randomRequestKey","kind":"identifier"},{"text":"() -> ","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"}],"title":"randomRequestKey()","type":"topic","url":"\/documentation\/niowebsocket\/niowebsocketclientupgrader\/randomrequestkey()"}}}