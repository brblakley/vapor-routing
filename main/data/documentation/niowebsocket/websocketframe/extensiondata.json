{"sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/niowebsocket\/websocketframe\/extensiondata"]}],"primaryContentSections":[{"declarations":[{"tokens":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"extensionData","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7NIOCore10ByteBufferV","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ByteBuffer","text":"ByteBuffer","kind":"typeIdentifier"},{"text":"? { ","kind":"text"},{"text":"get","kind":"keyword"},{"text":" ","kind":"text"},{"text":"set","kind":"keyword"},{"text":" }","kind":"text"}],"languages":["swift"],"platforms":["Linux"]}],"kind":"declarations"},{"content":[{"text":"Discussion","level":2,"type":"heading","anchor":"discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"On frames received from the network, this data is not necessarily unmasked. This is to provide as much"},{"type":"text","text":" "},{"type":"text","text":"information as possible. If unmasked data is desired, either use the computed "},{"type":"codeVoice","code":"unmaskedExtensionData"},{"type":"text","text":" property to"},{"type":"text","text":" "},{"type":"text","text":"obtain it, or transform this data directly by calling "},{"type":"codeVoice","code":"extensionData.unmask(maskKey)"},{"type":"text","text":"."}]}],"kind":"content"}],"schemaVersion":{"major":0,"minor":3,"patch":0},"metadata":{"role":"symbol","symbolKind":"property","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"extensionData","kind":"identifier"},{"text":": ","kind":"text"},{"text":"ByteBuffer","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore10ByteBufferV"},{"text":"?","kind":"text"}],"roleHeading":"Instance Property","title":"extensionData","modules":[{"name":"NIOWebSocket"}],"externalID":"s:12NIOWebSocket03WebB5FrameV13extensionData7NIOCore10ByteBufferVSgvp"},"kind":"symbol","identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/WebSocketFrame\/extensionData","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/WebSocketFrame"]]},"abstract":[{"text":"The extension data, if any.","type":"text"}],"references":{"doc://co.pointfree.VaporRouting/documentation/NIOWebSocket":{"url":"\/documentation\/niowebsocket","type":"topic","role":"collection","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket","title":"NIOWebSocket","abstract":[],"kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOWebSocket/WebSocketFrame":{"role":"symbol","type":"topic","title":"WebSocketFrame","kind":"symbol","navigatorTitle":[{"text":"WebSocketFrame","kind":"identifier"}],"url":"\/documentation\/niowebsocket\/websocketframe","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/WebSocketFrame","abstract":[{"text":"A structured representation of a single WebSocket frame.","type":"text"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"WebSocketFrame","kind":"identifier"}]},"doc://co.pointfree.VaporRouting/documentation/NIOWebSocket/WebSocketFrame/extensionData":{"role":"symbol","type":"topic","title":"extensionData","kind":"symbol","url":"\/documentation\/niowebsocket\/websocketframe\/extensiondata","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/WebSocketFrame\/extensionData","abstract":[{"text":"The extension data, if any.","type":"text"}],"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"extensionData","kind":"identifier"},{"text":": ","kind":"text"},{"text":"ByteBuffer","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore10ByteBufferV"},{"text":"?","kind":"text"}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ByteBuffer":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ByteBuffer"}],"url":"\/documentation\/niocore\/bytebuffer","title":"ByteBuffer","kind":"symbol","type":"topic","abstract":[{"type":"codeVoice","code":"ByteBuffer"},{"type":"text","text":" stores contiguously allocated raw bytes. It is a random and sequential accessible sequence of zero or"},{"type":"text","text":" "},{"type":"text","text":"more bytes (octets)."}],"navigatorTitle":[{"kind":"identifier","text":"ByteBuffer"}],"role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ByteBuffer"}}}