{"sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"unmaskedData"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ByteBuffer","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ByteBuffer","preciseIdentifier":"s:7NIOCore10ByteBufferV"},{"kind":"text","text":" { "},{"kind":"keyword","text":"get"},{"kind":"text","text":" }"}],"platforms":["Linux"],"languages":["swift"]}]},{"kind":"content","content":[{"type":"heading","anchor":"discussion","level":2,"text":"Discussion"},{"inlineContent":[{"text":"If a masking key is present on the frame, this property will automatically unmask the underlying data","type":"text"},{"text":" ","type":"text"},{"text":"and return the unmasked data to the user. This is a convenience method that should only be used when","type":"text"},{"text":" ","type":"text"},{"text":"persisting the underlying masked data is worthwhile: otherwise, performance will often be better to","type":"text"},{"text":" ","type":"text"},{"text":"manually unmask the data with ","type":"text"},{"type":"codeVoice","code":"data.unmask(maskKey)"},{"text":".","type":"text"}],"type":"paragraph"}]}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/WebSocketFrame"]]},"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/WebSocketFrame\/unmaskedData","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"The unmasked application data."}],"schemaVersion":{"major":0,"minor":3,"patch":0},"kind":"symbol","variants":[{"paths":["\/documentation\/niowebsocket\/websocketframe\/unmaskeddata"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"unmaskedData"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7NIOCore10ByteBufferV","kind":"typeIdentifier","text":"ByteBuffer"}],"roleHeading":"Instance Property","modules":[{"name":"NIOWebSocket"}],"title":"unmaskedData","externalID":"s:12NIOWebSocket03WebB5FrameV12unmaskedData7NIOCore10ByteBufferVvp","symbolKind":"property"},"references":{"doc://co.pointfree.VaporRouting/documentation/NIOWebSocket/WebSocketFrame/unmaskedData":{"abstract":[{"type":"text","text":"The unmasked application data."}],"kind":"symbol","url":"\/documentation\/niowebsocket\/websocketframe\/unmaskeddata","title":"unmaskedData","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/WebSocketFrame\/unmaskedData","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"unmaskedData","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7NIOCore10ByteBufferV","text":"ByteBuffer","kind":"typeIdentifier"}],"role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOWebSocket/WebSocketFrame":{"role":"symbol","type":"topic","title":"WebSocketFrame","kind":"symbol","navigatorTitle":[{"text":"WebSocketFrame","kind":"identifier"}],"url":"\/documentation\/niowebsocket\/websocketframe","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/WebSocketFrame","abstract":[{"text":"A structured representation of a single WebSocket frame.","type":"text"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"WebSocketFrame","kind":"identifier"}]},"doc://co.pointfree.VaporRouting/documentation/NIOWebSocket":{"url":"\/documentation\/niowebsocket","type":"topic","role":"collection","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket","title":"NIOWebSocket","abstract":[],"kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ByteBuffer":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ByteBuffer"}],"url":"\/documentation\/niocore\/bytebuffer","title":"ByteBuffer","kind":"symbol","type":"topic","abstract":[{"type":"codeVoice","code":"ByteBuffer"},{"type":"text","text":" stores contiguously allocated raw bytes. It is a random and sequential accessible sequence of zero or"},{"type":"text","text":" "},{"type":"text","text":"more bytes (octets)."}],"navigatorTitle":[{"kind":"identifier","text":"ByteBuffer"}],"role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ByteBuffer"}}}