{"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/niowebsocket\/niowebsocketframeaggregator"]}],"abstract":[{"code":"NIOWebSocketFrameAggregator","type":"codeVoice"},{"text":" buffers inbound fragmented ","type":"text"},{"code":"WebSocketFrame","type":"codeVoice"},{"text":"â€™s and aggregates them into a single ","type":"text"},{"code":"WebSocketFrame","type":"codeVoice"},{"text":".","type":"text"},{"text":" ","type":"text"},{"text":"It guarantees that a ","type":"text"},{"code":"WebSocketFrame","type":"codeVoice"},{"text":" with an ","type":"text"},{"code":"opcode","type":"codeVoice"},{"text":" of ","type":"text"},{"code":".continuation","type":"codeVoice"},{"text":" is never forwarded.","type":"text"},{"text":" ","type":"text"},{"text":"Frames which are not fragmented are just forwarded without any processing.","type":"text"},{"text":" ","type":"text"},{"text":"Fragmented frames are unmasked, concatenated and forwarded as a new ","type":"text"},{"code":"WebSocketFrame","type":"codeVoice"},{"text":" which is either a ","type":"text"},{"code":".binary","type":"codeVoice"},{"text":" or ","type":"text"},{"code":".text","type":"codeVoice"},{"text":" frame.","type":"text"},{"text":" ","type":"text"},{"code":"extensionData","type":"codeVoice"},{"text":", ","type":"text"},{"code":"rsv1","type":"codeVoice"},{"text":", ","type":"text"},{"code":"rsv2","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"rsv3","type":"codeVoice"},{"text":" are lost if a frame is fragmented because they cannot be concatenated.","type":"text"}],"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/NIOWebSocketFrameAggregator\/init(minNonFinalFragmentSize:maxAccumulatedFrameCount:maxAccumulatedFrameSize:)"]},{"title":"Instance Methods","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/NIOWebSocketFrameAggregator\/channelRead(context:data:)"]},{"title":"Type Aliases","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/NIOWebSocketFrameAggregator\/InboundIn","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/NIOWebSocketFrameAggregator\/InboundOut"]},{"title":"Enumerations","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/NIOWebSocketFrameAggregator\/Error"]},{"title":"Default Implementations","generated":true,"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/NIOWebSocketFrameAggregator\/ChannelHandler-Implementations","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/NIOWebSocketFrameAggregator\/ChannelInboundHandler-Implementations"]}],"relationshipsSections":[{"title":"Conforms To","kind":"relationships","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelHandler","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelInboundHandler"],"type":"conformsTo"}],"schemaVersion":{"major":0,"minor":3,"patch":0},"metadata":{"navigatorTitle":[{"kind":"identifier","text":"NIOWebSocketFrameAggregator"}],"symbolKind":"class","modules":[{"name":"NIOWebSocket"}],"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"NIOWebSocketFrameAggregator"}],"externalID":"s:12NIOWebSocket0aB15FrameAggregatorC","roleHeading":"Class","title":"NIOWebSocketFrameAggregator","role":"symbol"},"sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"text":"final","kind":"keyword"},{"text":" ","kind":"text"},{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"NIOWebSocketFrameAggregator","kind":"identifier"}],"platforms":["Linux"]}]},{"content":[{"level":2,"type":"heading","anchor":"overview","text":"Overview"},{"type":"aside","style":"note","content":[{"inlineContent":[{"text":"","type":"text"},{"code":".ping","type":"codeVoice"},{"text":", ","type":"text"},{"code":".pong","type":"codeVoice"},{"text":", ","type":"text"},{"code":".closeConnection","type":"codeVoice"},{"text":" frames are forwarded during frame aggregation","type":"text"}],"type":"paragraph"}],"name":"Note"}],"kind":"content"}],"kind":"symbol","identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/NIOWebSocketFrameAggregator","interfaceLanguage":"swift"},"references":{"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelHandler":{"title":"ChannelHandler","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ChannelHandler"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelHandler","kind":"symbol","abstract":[{"type":"text","text":"You should "},{"inlineContent":[{"text":"never","type":"text"}],"type":"emphasis"},{"type":"text","text":" implement this protocol directly. Please implement one of its sub-protocols."}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"ChannelHandler"}],"url":"\/documentation\/niocore\/channelhandler","type":"topic"},"doc://co.pointfree.VaporRouting/documentation/NIOWebSocket/NIOWebSocketFrameAggregator/InboundIn":{"navigatorTitle":[{"kind":"identifier","text":"InboundIn"}],"type":"topic","abstract":[{"type":"text","text":"The type of the inbound data which is wrapped in "},{"type":"codeVoice","code":"NIOAny"},{"type":"text","text":"."}],"url":"\/documentation\/niowebsocket\/niowebsocketframeaggregator\/inboundin","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"InboundIn"}],"title":"NIOWebSocketFrameAggregator.InboundIn","role":"symbol","kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/NIOWebSocketFrameAggregator\/InboundIn"},"doc://co.pointfree.VaporRouting/documentation/NIOWebSocket/NIOWebSocketFrameAggregator/Error":{"url":"\/documentation\/niowebsocket\/niowebsocketframeaggregator\/error","title":"NIOWebSocketFrameAggregator.Error","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/NIOWebSocketFrameAggregator\/Error","abstract":[],"type":"topic","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"Error"}],"role":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"Error"}]},"doc://co.pointfree.VaporRouting/documentation/NIOWebSocket/NIOWebSocketFrameAggregator/init(minNonFinalFragmentSize:maxAccumulatedFrameCount:maxAccumulatedFrameSize:)":{"type":"topic","abstract":[{"type":"text","text":"Configures a "},{"type":"codeVoice","code":"NIOWebSocketFrameAggregator"},{"type":"text","text":"."}],"url":"\/documentation\/niowebsocket\/niowebsocketframeaggregator\/init(minnonfinalfragmentsize:maxaccumulatedframecount:maxaccumulatedframesize:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"minNonFinalFragmentSize"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"},{"kind":"text","text":", "},{"kind":"externalParam","text":"maxAccumulatedFrameCount"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":", "},{"kind":"externalParam","text":"maxAccumulatedFrameSize"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":")"}],"title":"init(minNonFinalFragmentSize:maxAccumulatedFrameCount:maxAccumulatedFrameSize:)","role":"symbol","kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/NIOWebSocketFrameAggregator\/init(minNonFinalFragmentSize:maxAccumulatedFrameCount:maxAccumulatedFrameSize:)"},"doc://co.pointfree.VaporRouting/documentation/NIOWebSocket/NIOWebSocketFrameAggregator/ChannelInboundHandler-Implementations":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/NIOWebSocketFrameAggregator\/ChannelInboundHandler-Implementations","title":"ChannelInboundHandler Implementations","abstract":[],"url":"\/documentation\/niowebsocket\/niowebsocketframeaggregator\/channelinboundhandler-implementations","role":"collectionGroup","kind":"article","type":"topic"},"doc://co.pointfree.VaporRouting/documentation/NIOWebSocket/NIOWebSocketFrameAggregator/channelRead(context:data:)":{"url":"\/documentation\/niowebsocket\/niowebsocketframeaggregator\/channelread(context:data:)","kind":"symbol","title":"channelRead(context:data:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/NIOWebSocketFrameAggregator\/channelRead(context:data:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"channelRead"},{"kind":"text","text":"("},{"kind":"externalParam","text":"context"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC","text":"ChannelHandlerContext"},{"kind":"text","text":", "},{"kind":"externalParam","text":"data"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore6NIOAnyV","text":"NIOAny"},{"kind":"text","text":")"}],"type":"topic","abstract":[{"type":"text","text":"Called when some data has been read from the remote peer."}],"role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOWebSocket":{"url":"\/documentation\/niowebsocket","type":"topic","role":"collection","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket","title":"NIOWebSocket","abstract":[],"kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOWebSocket/NIOWebSocketFrameAggregator/InboundOut":{"role":"symbol","abstract":[{"type":"text","text":"The type of the inbound data which will be forwarded to the next "},{"type":"codeVoice","code":"ChannelInboundHandler"},{"type":"text","text":" in the "},{"type":"codeVoice","code":"ChannelPipeline"},{"type":"text","text":"."}],"url":"\/documentation\/niowebsocket\/niowebsocketframeaggregator\/inboundout","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/NIOWebSocketFrameAggregator\/InboundOut","type":"topic","navigatorTitle":[{"kind":"identifier","text":"InboundOut"}],"fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"InboundOut"}],"kind":"symbol","title":"NIOWebSocketFrameAggregator.InboundOut"},"doc://co.pointfree.VaporRouting/documentation/NIOWebSocket/NIOWebSocketFrameAggregator/ChannelHandler-Implementations":{"title":"ChannelHandler Implementations","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/NIOWebSocketFrameAggregator\/ChannelHandler-Implementations","kind":"article","abstract":[],"role":"collectionGroup","url":"\/documentation\/niowebsocket\/niowebsocketframeaggregator\/channelhandler-implementations","type":"topic"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelInboundHandler":{"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ChannelInboundHandler"}],"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelInboundHandler","title":"ChannelInboundHandler","url":"\/documentation\/niocore\/channelinboundhandler","role":"symbol","kind":"symbol","abstract":[{"code":"ChannelHandler","type":"codeVoice"},{"type":"text","text":" which handles inbound I\/O events for a "},{"code":"Channel","type":"codeVoice"},{"type":"text","text":"."}],"navigatorTitle":[{"kind":"identifier","text":"ChannelInboundHandler"}]},"doc://co.pointfree.VaporRouting/documentation/NIOWebSocket/NIOWebSocketFrameAggregator":{"title":"NIOWebSocketFrameAggregator","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"NIOWebSocketFrameAggregator"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/NIOWebSocketFrameAggregator","kind":"symbol","abstract":[{"type":"codeVoice","code":"NIOWebSocketFrameAggregator"},{"type":"text","text":" buffers inbound fragmented "},{"type":"codeVoice","code":"WebSocketFrame"},{"type":"text","text":"â€™s and aggregates them into a single "},{"type":"codeVoice","code":"WebSocketFrame"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"It guarantees that a "},{"type":"codeVoice","code":"WebSocketFrame"},{"type":"text","text":" with an "},{"code":"opcode","type":"codeVoice"},{"type":"text","text":" of "},{"code":".continuation","type":"codeVoice"},{"type":"text","text":" is never forwarded."},{"type":"text","text":" "},{"type":"text","text":"Frames which are not fragmented are just forwarded without any processing."},{"type":"text","text":" "},{"type":"text","text":"Fragmented frames are unmasked, concatenated and forwarded as a new "},{"code":"WebSocketFrame","type":"codeVoice"},{"type":"text","text":" which is either a "},{"code":".binary","type":"codeVoice"},{"type":"text","text":" or "},{"code":".text","type":"codeVoice"},{"type":"text","text":" frame."},{"type":"text","text":" "},{"code":"extensionData","type":"codeVoice"},{"type":"text","text":", "},{"code":"rsv1","type":"codeVoice"},{"type":"text","text":", "},{"code":"rsv2","type":"codeVoice"},{"type":"text","text":" and "},{"code":"rsv3","type":"codeVoice"},{"type":"text","text":" are lost if a frame is fragmented because they cannot be concatenated."}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"NIOWebSocketFrameAggregator"}],"url":"\/documentation\/niowebsocket\/niowebsocketframeaggregator","type":"topic"}}}