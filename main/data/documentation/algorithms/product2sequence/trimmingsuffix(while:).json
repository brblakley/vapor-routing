{"kind":"symbol","sections":[],"abstract":[{"type":"text","text":"Returns a "},{"type":"codeVoice","code":"SubSequence"},{"type":"text","text":" formed by discarding all elements at the end of"},{"type":"text","text":" "},{"type":"text","text":"the collection which satisfy the given predicate."}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/algorithms\/product2sequence\/trimmingsuffix(while:)"]}],"schemaVersion":{"minor":3,"patch":0,"major":0},"metadata":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"trimmingSuffix","kind":"identifier"},{"text":"(","kind":"text"},{"text":"while","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"text":") ","kind":"text"},{"text":"rethrows","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"SubSequence","kind":"typeIdentifier"}],"extendedModule":"Swift","externalID":"s:SK10AlgorithmsE14trimmingSuffix5while11SubSequenceQzSb7ElementQzKXE_tKF::SYNTHESIZED::s:10Algorithms16Product2SequenceV","title":"trimmingSuffix(while:)","role":"symbol","roleHeading":"Instance Method","modules":[{"name":"Algorithms"}],"symbolKind":"method"},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["Linux"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"trimmingSuffix"},{"kind":"text","text":"("},{"kind":"externalParam","text":"while"},{"kind":"text","text":" "},{"kind":"internalParam","text":"predicate"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"kind":"text","text":") "},{"kind":"keyword","text":"rethrows"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"SubSequence"}]}]},{"kind":"parameters","parameters":[{"name":"predicate","content":[{"inlineContent":[{"text":"A closure which determines if the element should be","type":"text"},{"text":" ","type":"text"},{"text":"omitted from the resulting slice.","type":"text"}],"type":"paragraph"}]}]},{"kind":"content","content":[{"level":2,"type":"heading","anchor":"discussion","text":"Discussion"},{"type":"paragraph","inlineContent":[{"text":"This example uses ","type":"text"},{"type":"codeVoice","code":"trimmingSuffix(while:)"},{"text":" to get a substring without the","type":"text"},{"text":" ","type":"text"},{"text":"white space at the end of the string:","type":"text"}]},{"syntax":null,"type":"codeListing","code":["let myString = \"  hello, world  \"","print(myString.trimmingSuffix(while: \\.isWhitespace)) \/\/ \"  hello, world\""]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"O("},{"inlineContent":[{"text":"n","type":"text"}],"type":"emphasis"},{"type":"text","text":"), where "},{"inlineContent":[{"type":"text","text":"n"}],"type":"emphasis"},{"type":"text","text":" is the length of this collection."}]}],"type":"aside","style":"note","name":"Complexity"}]}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms","doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/Product2Sequence","doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/Product2Sequence\/BidirectionalCollection-Implementations"]]},"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/Product2Sequence\/trimmingSuffix(while:)","interfaceLanguage":"swift"},"references":{"doc://co.pointfree.VaporRouting/documentation/Algorithms/Product2Sequence/BidirectionalCollection-Implementations":{"title":"BidirectionalCollection Implementations","url":"\/documentation\/algorithms\/product2sequence\/bidirectionalcollection-implementations","abstract":[],"kind":"article","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/Product2Sequence\/BidirectionalCollection-Implementations","role":"collectionGroup"},"doc://co.pointfree.VaporRouting/documentation/Algorithms":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms","role":"collection","kind":"symbol","type":"topic","abstract":[],"title":"Algorithms","url":"\/documentation\/algorithms"},"doc://co.pointfree.VaporRouting/documentation/Algorithms/Product2Sequence/trimmingSuffix(while:)":{"title":"trimmingSuffix(while:)","url":"\/documentation\/algorithms\/product2sequence\/trimmingsuffix(while:)","abstract":[{"text":"Returns a ","type":"text"},{"type":"codeVoice","code":"SubSequence"},{"text":" formed by discarding all elements at the end of","type":"text"},{"text":" ","type":"text"},{"text":"the collection which satisfy the given predicate.","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"trimmingSuffix","kind":"identifier"},{"text":"(","kind":"text"},{"text":"while","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"rethrows","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"SubSequence","kind":"typeIdentifier"}],"kind":"symbol","role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/Product2Sequence\/trimmingSuffix(while:)","type":"topic"},"doc://co.pointfree.VaporRouting/documentation/Algorithms/Product2Sequence":{"type":"topic","url":"\/documentation\/algorithms\/product2sequence","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Product2Sequence","kind":"identifier"}],"kind":"symbol","role":"symbol","navigatorTitle":[{"text":"Product2Sequence","kind":"identifier"}],"title":"Product2Sequence","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/Product2Sequence","abstract":[{"text":"A sequence that represents the product of two sequencesâ€™ elements.","type":"text"}]}}}