{"sections":[],"abstract":[{"text":"Returns both the minimum and maximum elements in the sequence, using the","type":"text"},{"text":" ","type":"text"},{"text":"given predicate as the comparison between elements.","type":"text"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/IndexedCollection\/minAndMax(by:)"},"metadata":{"role":"symbol","symbolKind":"method","extendedModule":"Swift","title":"minAndMax(by:)","modules":[{"name":"Algorithms"}],"externalID":"s:ST10AlgorithmsE9minAndMax2by7ElementQz0B0_AE3maxtSgSbAE_AEtKXE_tKF::SYNTHESIZED::s:10Algorithms17IndexedCollectionV","roleHeading":"Instance Method","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"minAndMax","kind":"identifier"},{"text":"(","kind":"text"},{"text":"by","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"kind":"text","text":") "},{"kind":"keyword","text":"rethrows"},{"kind":"text","text":" -> (min"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":", max"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":")?"}]},"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms","doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/IndexedCollection","doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/IndexedCollection\/Sequence-Implementations"]]},"variants":[{"paths":["\/documentation\/algorithms\/indexedcollection\/minandmax(by:)"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","primaryContentSections":[{"declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"minAndMax","kind":"identifier"},{"text":"(","kind":"text"},{"text":"by","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"areInIncreasingOrder","kind":"internalParam"},{"text":": (","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"text":") ","kind":"text"},{"text":"rethrows","kind":"keyword"},{"text":" -> (min","kind":"text"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":", max","kind":"text"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":")?","kind":"text"}],"languages":["swift"],"platforms":["Linux"]}],"kind":"declarations"},{"parameters":[{"name":"areInIncreasingOrder","content":[{"inlineContent":[{"type":"text","text":"A predicate that returns "},{"type":"codeVoice","code":"true"},{"type":"text","text":" if its"},{"type":"text","text":" "},{"type":"text","text":"first argument should be ordered before its second argument; otherwise,"},{"type":"text","text":" "},{"type":"codeVoice","code":"false"},{"type":"text","text":"."}],"type":"paragraph"}]}],"kind":"parameters"},{"content":[{"level":2,"text":"Return Value","type":"heading","anchor":"return-value"},{"type":"paragraph","inlineContent":[{"type":"text","text":"A tuple with the sequenceâ€™s minimum element, followed by its"},{"type":"text","text":" "},{"type":"text","text":"maximum element. If the sequence provides multiple qualifying minimum"},{"type":"text","text":" "},{"type":"text","text":"elements, the first equivalent element is returned; of multiple maximum"},{"type":"text","text":" "},{"type":"text","text":"elements, the last is returned. If the sequence has no elements, the"},{"type":"text","text":" "},{"type":"text","text":"method returns "},{"type":"codeVoice","code":"nil"},{"type":"text","text":"."}]}],"kind":"content"},{"content":[{"anchor":"discussion","level":2,"type":"heading","text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The predicate must be a "},{"inlineContent":[{"text":"strict weak ordering","type":"text"}],"type":"emphasis"},{"type":"text","text":" over the elements. That is,"},{"type":"text","text":" "},{"type":"text","text":"for any elements "},{"type":"codeVoice","code":"a"},{"type":"text","text":", "},{"type":"codeVoice","code":"b"},{"type":"text","text":", and "},{"type":"codeVoice","code":"c"},{"type":"text","text":", the following conditions must hold:"}]},{"items":[{"content":[{"inlineContent":[{"type":"codeVoice","code":"areInIncreasingOrder(a, a)"},{"text":" is always ","type":"text"},{"type":"codeVoice","code":"false"},{"text":". (Irreflexivity)","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"If "},{"type":"codeVoice","code":"areInIncreasingOrder(a, b)"},{"type":"text","text":" and "},{"type":"codeVoice","code":"areInIncreasingOrder(b, c)"},{"type":"text","text":" are"},{"type":"text","text":" "},{"type":"text","text":"both "},{"type":"codeVoice","code":"true"},{"type":"text","text":", then "},{"type":"codeVoice","code":"areInIncreasingOrder(a, c)"},{"type":"text","text":" is also"},{"type":"text","text":" "},{"type":"codeVoice","code":"true"},{"type":"text","text":". (Transitive comparability)"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Two elements are "},{"type":"emphasis","inlineContent":[{"text":"incomparable","type":"text"}]},{"type":"text","text":" if neither is ordered before the other"},{"type":"text","text":" "},{"type":"text","text":"according to the predicate. If "},{"type":"codeVoice","code":"a"},{"type":"text","text":" and "},{"type":"codeVoice","code":"b"},{"type":"text","text":" are incomparable, and "},{"type":"codeVoice","code":"b"},{"type":"text","text":" "},{"type":"text","text":"and "},{"type":"codeVoice","code":"c"},{"type":"text","text":" are incomparable, then "},{"type":"codeVoice","code":"a"},{"type":"text","text":" and "},{"type":"codeVoice","code":"c"},{"type":"text","text":" are also incomparable."},{"type":"text","text":" "},{"type":"text","text":"(Transitive incomparability)"}]}]}],"type":"unorderedList"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This example shows how to use the "},{"type":"codeVoice","code":"minAndMax(by:)"},{"type":"text","text":" method on a dictionary"},{"type":"text","text":" "},{"type":"text","text":"to find the key-value pair with the lowest value and the pair with the"},{"type":"text","text":" "},{"type":"text","text":"highest value."}]},{"syntax":null,"code":["let hues = [\"Heliotrope\": 296, \"Coral\": 16, \"Aquamarine\": 156]","if let extremeHues = hues.minAndMax(by: {$0.value < $1.value}) {","    print(extremeHues.min, extremeHues.max)","} else {","    print(\"There are no hues\")","}","\/\/ Prints: \"(key: \"Coral\", value: 16) (key: \"Heliotrope\", value: 296)\""],"type":"codeListing"},{"type":"aside","style":"note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The sequence is finite."}]}],"name":"Precondition"},{"type":"aside","style":"note","content":[{"inlineContent":[{"type":"text","text":"O("},{"type":"emphasis","inlineContent":[{"type":"text","text":"n"}]},{"type":"text","text":"), where "},{"type":"emphasis","inlineContent":[{"type":"text","text":"n"}]},{"type":"text","text":" is the length of the sequence."}],"type":"paragraph"}],"name":"Complexity"}],"kind":"content"}],"schemaVersion":{"patch":0,"minor":3,"major":0},"references":{"doc://co.pointfree.VaporRouting/documentation/Algorithms/IndexedCollection/Sequence-Implementations":{"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/IndexedCollection\/Sequence-Implementations","title":"Sequence Implementations","kind":"article","abstract":[],"role":"collectionGroup","url":"\/documentation\/algorithms\/indexedcollection\/sequence-implementations"},"doc://co.pointfree.VaporRouting/documentation/Algorithms/IndexedCollection":{"kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"IndexedCollection","kind":"identifier"}],"url":"\/documentation\/algorithms\/indexedcollection","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/IndexedCollection","title":"IndexedCollection","navigatorTitle":[{"text":"IndexedCollection","kind":"identifier"}],"type":"topic","abstract":[{"text":"A collection wrapper that iterates over the indices and elements of a","type":"text"},{"text":" ","type":"text"},{"text":"collection together.","type":"text"}],"role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/Algorithms/IndexedCollection/minAndMax(by:)":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/IndexedCollection\/minAndMax(by:)","role":"symbol","type":"topic","abstract":[{"text":"Returns both the minimum and maximum elements in the sequence, using the","type":"text"},{"text":" ","type":"text"},{"text":"given predicate as the comparison between elements.","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"minAndMax","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"by"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"text":") ","kind":"text"},{"text":"rethrows","kind":"keyword"},{"text":" -> (min","kind":"text"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":", max","kind":"text"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":")?","kind":"text"}],"url":"\/documentation\/algorithms\/indexedcollection\/minandmax(by:)","kind":"symbol","title":"minAndMax(by:)"},"doc://co.pointfree.VaporRouting/documentation/Algorithms":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms","role":"collection","kind":"symbol","type":"topic","abstract":[],"title":"Algorithms","url":"\/documentation\/algorithms"}}}