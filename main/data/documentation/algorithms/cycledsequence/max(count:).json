{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/CycledSequence\/max(count:)"},"sections":[],"kind":"symbol","abstract":[{"text":"Returns the largest elements of this sequence.","type":"text"}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms","doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/CycledSequence","doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/CycledSequence\/Sequence-Implementations"]]},"primaryContentSections":[{"declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"max","kind":"identifier"},{"text":"(","kind":"text"},{"text":"count","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"text":") -> [","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":"]","kind":"text"}],"platforms":["Linux"],"languages":["swift"]}],"kind":"declarations"},{"parameters":[{"content":[{"inlineContent":[{"text":"The number of elements to return. If ","type":"text"},{"code":"count","type":"codeVoice"},{"text":" is greater","type":"text"},{"text":" ","type":"text"},{"text":"than the number of elements in this sequence, all of the sequenceâ€™s","type":"text"},{"text":" ","type":"text"},{"text":"elements are returned.","type":"text"}],"type":"paragraph"}],"name":"count"}],"kind":"parameters"},{"content":[{"level":2,"text":"Return Value","anchor":"return-value","type":"heading"},{"inlineContent":[{"type":"text","text":"An array of the largest "},{"code":"count","type":"codeVoice"},{"type":"text","text":" elements of this sequence."}],"type":"paragraph"}],"kind":"content"},{"content":[{"text":"Discussion","anchor":"discussion","type":"heading","level":2},{"inlineContent":[{"type":"text","text":"This example partially sorts an array of integers to retrieve its three"},{"text":" ","type":"text"},{"text":"largest values:","type":"text"}],"type":"paragraph"},{"syntax":null,"type":"codeListing","code":["let numbers = [7, 1, 6, 2, 8, 3, 9]","let smallestThree = numbers.max(count: 3)","\/\/ [7, 8, 9]"]},{"inlineContent":[{"text":"If you need to sort a sequence but only need to access its largest","type":"text"},{"text":" ","type":"text"},{"text":"elements, using this method can give you a performance boost over sorting","type":"text"},{"text":" ","type":"text"},{"text":"the entire sequence. The order of equal elements is guaranteed to be","type":"text"},{"text":" ","type":"text"},{"text":"preserved.","type":"text"}],"type":"paragraph"},{"content":[{"type":"paragraph","inlineContent":[{"text":"O(","type":"text"},{"type":"emphasis","inlineContent":[{"type":"text","text":"k"}]},{"text":" log ","type":"text"},{"type":"emphasis","inlineContent":[{"type":"text","text":"k"}]},{"text":" + ","type":"text"},{"type":"emphasis","inlineContent":[{"text":"nk","type":"text"}]},{"text":"), where ","type":"text"},{"type":"emphasis","inlineContent":[{"text":"n","type":"text"}]},{"text":" is the length of the","type":"text"},{"text":" ","type":"text"},{"text":"sequence and ","type":"text"},{"type":"emphasis","inlineContent":[{"text":"k","type":"text"}]},{"text":" is ","type":"text"},{"code":"count","type":"codeVoice"},{"text":".","type":"text"}]}],"name":"Complexity","style":"note","type":"aside"}],"kind":"content"}],"metadata":{"externalID":"s:ST10AlgorithmsSL7ElementRpzrlE3max5countSayACGSi_tF::SYNTHESIZED::s:10Algorithms14CycledSequenceV","symbolKind":"method","role":"symbol","extendedModule":"Swift","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"max"},{"kind":"text","text":"("},{"kind":"externalParam","text":"count"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":") -> ["},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"text":"]","kind":"text"}],"conformance":{"constraints":[{"code":"Element","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Comparable","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"roleHeading":"Instance Method","modules":[{"name":"Algorithms"}],"title":"max(count:)"},"variants":[{"paths":["\/documentation\/algorithms\/cycledsequence\/max(count:)"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"patch":0,"major":0,"minor":3},"references":{"doc://co.pointfree.VaporRouting/documentation/Algorithms/CycledSequence/max(count:)":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"max"},{"kind":"text","text":"("},{"kind":"externalParam","text":"count"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":") -> ["},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"text":"]","kind":"text"}],"abstract":[{"type":"text","text":"Returns the largest elements of this sequence."}],"conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"Element"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Comparable"},{"type":"text","text":"."}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"url":"\/documentation\/algorithms\/cycledsequence\/max(count:)","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/CycledSequence\/max(count:)","title":"max(count:)","kind":"symbol","role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/Algorithms/CycledSequence/Sequence-Implementations":{"title":"Sequence Implementations","url":"\/documentation\/algorithms\/cycledsequence\/sequence-implementations","abstract":[],"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/CycledSequence\/Sequence-Implementations","role":"collectionGroup","kind":"article"},"doc://co.pointfree.VaporRouting/documentation/Algorithms/CycledSequence":{"title":"CycledSequence","navigatorTitle":[{"kind":"identifier","text":"CycledSequence"}],"url":"\/documentation\/algorithms\/cycledsequence","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"CycledSequence"}],"abstract":[{"text":"A collection wrapper that repeats the elements of a base collection.","type":"text"}],"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/CycledSequence","role":"symbol","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/Algorithms":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms","role":"collection","kind":"symbol","type":"topic","abstract":[],"title":"Algorithms","url":"\/documentation\/algorithms"}}}