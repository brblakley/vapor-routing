{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/algorithms\/interspersedsequence\/combinations(ofcount:)-8uxnx"]}],"sections":[],"abstract":[{"type":"text","text":"Returns a collection of combinations of this collection’s elements, with"},{"type":"text","text":" "},{"type":"text","text":"each combination having the specified number of elements."}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms","doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/InterspersedSequence","doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/InterspersedSequence\/Collection-Implementations"]]},"schemaVersion":{"minor":3,"patch":0,"major":0},"metadata":{"symbolKind":"method","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"combinations","kind":"identifier"},{"text":"<","kind":"text"},{"text":"R","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"ofCount","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"R","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"CombinationsSequence","kind":"typeIdentifier","preciseIdentifier":"s:10Algorithms20CombinationsSequenceV"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":">","kind":"text"}],"role":"symbol","extendedModule":"Swift","externalID":"s:Sl10AlgorithmsE12combinations7ofCountAA20CombinationsSequenceVyxGqd___tSXRd__Si5BoundRtd__lF::SYNTHESIZED::s:10Algorithms20InterspersedSequenceV","modules":[{"name":"Algorithms"}],"roleHeading":"Instance Method","title":"combinations(ofCount:)"},"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"combinations"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"R"},{"kind":"text","text":">("},{"kind":"externalParam","text":"ofCount"},{"kind":"text","text":" "},{"kind":"internalParam","text":"kRange"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"R"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:10Algorithms20CombinationsSequenceV","kind":"typeIdentifier","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/CombinationsSequence","text":"CombinationsSequence"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"> "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"R"},{"kind":"text","text":" : "},{"preciseIdentifier":"s:SX","kind":"typeIdentifier","text":"RangeExpression"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"R"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Bound"},{"kind":"text","text":" == "},{"preciseIdentifier":"s:Si","kind":"typeIdentifier","text":"Int"}],"languages":["swift"]}]},{"kind":"parameters","parameters":[{"content":[{"inlineContent":[{"text":"The range of numbers of elements to include in each","type":"text"},{"text":" ","type":"text"},{"text":"combination.","type":"text"}],"type":"paragraph"}],"name":"kRange"}]},{"kind":"content","content":[{"anchor":"discussion","text":"Discussion","level":2,"type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This example prints the different combinations of 1 and 2 from an array of"},{"type":"text","text":" "},{"type":"text","text":"four colors:"}]},{"code":["let colors = [\"fuchsia\", \"cyan\", \"mauve\", \"magenta\"]","for combo in colors.combinations(ofCount: 1...2) {","    print(combo.joined(separator: \", \"))","}","\/\/ fuchsia","\/\/ cyan","\/\/ mauve","\/\/ magenta","\/\/ fuchsia, cyan","\/\/ fuchsia, mauve","\/\/ fuchsia, magenta","\/\/ cyan, mauve","\/\/ cyan, magenta","\/\/ mauve, magenta"],"type":"codeListing","syntax":null},{"type":"paragraph","inlineContent":[{"text":"The returned collection presents combinations in a consistent order, where","type":"text"},{"text":" ","type":"text"},{"text":"the indices in each combination are in ascending lexicographical order.","type":"text"},{"text":" ","type":"text"},{"text":"That is, in the example above, the combinations in order are the elements","type":"text"},{"text":" ","type":"text"},{"text":"at ","type":"text"},{"code":"[0]","type":"codeVoice"},{"text":", ","type":"text"},{"code":"[1]","type":"codeVoice"},{"text":", ","type":"text"},{"code":"[2]","type":"codeVoice"},{"text":", ","type":"text"},{"code":"[3]","type":"codeVoice"},{"text":", ","type":"text"},{"code":"[0, 1]","type":"codeVoice"},{"text":", ","type":"text"},{"code":"[0, 2]","type":"codeVoice"},{"text":", ","type":"text"},{"code":"[0, 3]","type":"codeVoice"},{"text":", ","type":"text"},{"code":"[1, 2]","type":"codeVoice"},{"text":",","type":"text"},{"text":" ","type":"text"},{"code":"[1, 3]","type":"codeVoice"},{"text":", and finally ","type":"text"},{"code":"[2, 3]","type":"codeVoice"},{"text":".","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"This example prints ","type":"text"},{"type":"emphasis","inlineContent":[{"text":"all","type":"text"}]},{"text":" the combinations (including an empty array and","type":"text"},{"text":" ","type":"text"},{"text":"the original collection) from an array of numbers:","type":"text"}]},{"code":["let numbers = [10, 20, 30, 40]","for combo in numbers.combinations(ofCount: 0...) {","    print(combo)","}","\/\/ []","\/\/ [10]","\/\/ [20]","\/\/ [30]","\/\/ [40]","\/\/ [10, 20]","\/\/ [10, 30]","\/\/ [10, 40]","\/\/ [20, 30]","\/\/ [20, 40]","\/\/ [30, 40]","\/\/ [10, 20, 30]","\/\/ [10, 20, 40]","\/\/ [10, 30, 40]","\/\/ [20, 30, 40]","\/\/ [10, 20, 30, 40]"],"type":"codeListing","syntax":null},{"type":"paragraph","inlineContent":[{"text":"If ","type":"text"},{"code":"kRange","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"0...0","type":"codeVoice"},{"text":", the resulting sequence has exactly one element, an","type":"text"},{"text":" ","type":"text"},{"text":"empty array. The given range is limited to ","type":"text"},{"code":"0...base.count","type":"codeVoice"},{"text":". If the","type":"text"},{"text":" ","type":"text"},{"text":"limited range is empty, the resulting sequence has no elements.","type":"text"}]},{"style":"note","name":"Complexity","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"O(1) for random-access base collections. O("},{"inlineContent":[{"text":"n","type":"text"}],"type":"emphasis"},{"type":"text","text":") where "},{"inlineContent":[{"type":"text","text":"n"}],"type":"emphasis"},{"type":"text","text":" "},{"type":"text","text":"is the number of elements in the base collection, since"},{"type":"text","text":" "},{"code":"CombinationsSequence","type":"codeVoice"},{"type":"text","text":" accesses the "},{"code":"count","type":"codeVoice"},{"type":"text","text":" of the base collection."}]}],"type":"aside"}]}],"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/InterspersedSequence\/combinations(ofCount:)-8uxnx","interfaceLanguage":"swift"},"references":{"doc://co.pointfree.VaporRouting/documentation/Algorithms/InterspersedSequence/Collection-Implementations":{"type":"topic","title":"Collection Implementations","url":"\/documentation\/algorithms\/interspersedsequence\/collection-implementations","role":"collectionGroup","kind":"article","abstract":[],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/InterspersedSequence\/Collection-Implementations"},"doc://co.pointfree.VaporRouting/documentation/Algorithms/InterspersedSequence":{"title":"InterspersedSequence","navigatorTitle":[{"kind":"identifier","text":"InterspersedSequence"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/InterspersedSequence","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"InterspersedSequence"}],"type":"topic","kind":"symbol","url":"\/documentation\/algorithms\/interspersedsequence","abstract":[{"type":"text","text":"A sequence that presents the elements of a base sequence of elements with a"},{"type":"text","text":" "},{"type":"text","text":"separator between each of those elements."}],"role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/Algorithms":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms","role":"collection","kind":"symbol","type":"topic","abstract":[],"title":"Algorithms","url":"\/documentation\/algorithms"},"doc://co.pointfree.VaporRouting/documentation/Algorithms/InterspersedSequence/combinations(ofCount:)-8uxnx":{"role":"symbol","title":"combinations(ofCount:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"combinations","kind":"identifier"},{"text":"<","kind":"text"},{"text":"R","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"ofCount"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"R"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Algorithms20CombinationsSequenceV","text":"CombinationsSequence"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":">"}],"url":"\/documentation\/algorithms\/interspersedsequence\/combinations(ofcount:)-8uxnx","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/InterspersedSequence\/combinations(ofCount:)-8uxnx","type":"topic","kind":"symbol","abstract":[{"type":"text","text":"Returns a collection of combinations of this collection’s elements, with"},{"type":"text","text":" "},{"type":"text","text":"each combination having the specified number of elements."}]},"doc://co.pointfree.VaporRouting/documentation/Algorithms/CombinationsSequence":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"CombinationsSequence"}],"kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/CombinationsSequence","title":"CombinationsSequence","navigatorTitle":[{"kind":"identifier","text":"CombinationsSequence"}],"url":"\/documentation\/algorithms\/combinationssequence","type":"topic","abstract":[{"text":"A collection wrapper that generates combinations of a base collection.","type":"text"}],"role":"symbol"}}}