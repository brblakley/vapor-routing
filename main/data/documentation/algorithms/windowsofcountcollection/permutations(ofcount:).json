{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/algorithms\/windowsofcountcollection\/permutations(ofcount:)"]}],"metadata":{"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"permutations"},{"kind":"text","text":"("},{"kind":"externalParam","text":"ofCount"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"},{"kind":"text","text":"?) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Algorithms20PermutationsSequenceV","text":"PermutationsSequence"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":">"}],"symbolKind":"method","role":"symbol","externalID":"s:Sl10AlgorithmsE12permutations7ofCountAA20PermutationsSequenceVyxGSiSg_tF::SYNTHESIZED::s:10Algorithms24WindowsOfCountCollectionV","modules":[{"name":"Algorithms"}],"extendedModule":"Swift","roleHeading":"Instance Method","title":"permutations(ofCount:)"},"schemaVersion":{"minor":3,"major":0,"patch":0},"kind":"symbol","sections":[],"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"permutations"},{"kind":"text","text":"("},{"kind":"externalParam","text":"ofCount"},{"kind":"text","text":" "},{"kind":"internalParam","text":"k"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":"? = nil) -> "},{"kind":"typeIdentifier","text":"PermutationsSequence","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/PermutationsSequence","preciseIdentifier":"s:10Algorithms20PermutationsSequenceV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":">"}],"platforms":["Linux"],"languages":["swift"]}],"kind":"declarations"},{"parameters":[{"name":"k","content":[{"inlineContent":[{"type":"text","text":"The number of elements to include in each permutation."},{"type":"text","text":" "},{"type":"text","text":"If "},{"type":"codeVoice","code":"k"},{"type":"text","text":" is "},{"type":"codeVoice","code":"nil"},{"type":"text","text":", the resulting sequence represents permutations of this"},{"type":"text","text":" "},{"type":"text","text":"entire collection. If "},{"type":"codeVoice","code":"k"},{"type":"text","text":" is greater than the number of elements in"},{"type":"text","text":" "},{"type":"text","text":"this collection, the resulting sequence is empty."}],"type":"paragraph"}]}],"kind":"parameters"},{"content":[{"type":"heading","text":"Discussion","level":2,"anchor":"discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This example prints the different permutations of two elements from an"},{"type":"text","text":" "},{"type":"text","text":"array of three names:"}]},{"type":"codeListing","syntax":null,"code":["let names = [\"Alex\", \"Celeste\", \"Davide\"]","for perm in names.permutations(ofCount: 2) {","    print(perm.joined(separator: \", \"))","}","\/\/ Alex, Celeste","\/\/ Alex, Davide","\/\/ Celeste, Alex","\/\/ Celeste, Davide","\/\/ Davide, Alex","\/\/ Davide, Celeste"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The permutations present the elements in increasing lexicographic order"},{"type":"text","text":" "},{"type":"text","text":"of the collection’s original ordering (rather than the order of the"},{"type":"text","text":" "},{"type":"text","text":"elements themselves). The first permutation will always consist of"},{"type":"text","text":" "},{"type":"text","text":"elements in their original order, and the last will have the elements in"},{"type":"text","text":" "},{"type":"text","text":"the reverse of their original order."}]},{"type":"paragraph","inlineContent":[{"text":"Values that are repeated in the original collection are always treated as","type":"text"},{"text":" ","type":"text"},{"text":"separate values in the resulting permutations:","type":"text"}]},{"type":"codeListing","syntax":null,"code":["let numbers = [20, 10, 10]","for perm in numbers.permutations() {","    print(perm)","}","\/\/ [20, 10, 10]","\/\/ [20, 10, 10]","\/\/ [10, 20, 10]","\/\/ [10, 10, 20]","\/\/ [10, 20, 10]","\/\/ [10, 10, 20]"]},{"type":"paragraph","inlineContent":[{"text":"If ","type":"text"},{"type":"codeVoice","code":"k"},{"text":" is zero, the resulting sequence has exactly one element, an","type":"text"},{"text":" ","type":"text"},{"text":"empty array. If ","type":"text"},{"type":"codeVoice","code":"k"},{"text":" is greater than the number of elements in this","type":"text"},{"text":" ","type":"text"},{"text":"sequence, the resulting sequence has no elements.","type":"text"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"O(1) for random-access base collections. O(","type":"text"},{"inlineContent":[{"text":"n","type":"text"}],"type":"emphasis"},{"text":") where ","type":"text"},{"inlineContent":[{"type":"text","text":"n"}],"type":"emphasis"},{"text":" ","type":"text"},{"text":"is the number of elements in the base collection, since","type":"text"},{"text":" ","type":"text"},{"code":"PermutationsSequence","type":"codeVoice"},{"text":" accesses the ","type":"text"},{"code":"count","type":"codeVoice"},{"text":" of the base collection.","type":"text"}]}],"type":"aside","style":"note","name":"Complexity"}],"kind":"content"}],"abstract":[{"text":"Returns a collection of the permutations of this collection of the","type":"text"},{"text":" ","type":"text"},{"text":"specified length.","type":"text"}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms","doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/WindowsOfCountCollection","doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/WindowsOfCountCollection\/Collection-Implementations"]]},"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/WindowsOfCountCollection\/permutations(ofCount:)","interfaceLanguage":"swift"},"references":{"doc://co.pointfree.VaporRouting/documentation/Algorithms/WindowsOfCountCollection/permutations(ofCount:)":{"type":"topic","kind":"symbol","role":"symbol","abstract":[{"text":"Returns a collection of the permutations of this collection of the","type":"text"},{"text":" ","type":"text"},{"text":"specified length.","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"permutations"},{"kind":"text","text":"("},{"kind":"externalParam","text":"ofCount"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Si","kind":"typeIdentifier","text":"Int"},{"kind":"text","text":"?) -> "},{"preciseIdentifier":"s:10Algorithms20PermutationsSequenceV","kind":"typeIdentifier","text":"PermutationsSequence"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":">"}],"title":"permutations(ofCount:)","url":"\/documentation\/algorithms\/windowsofcountcollection\/permutations(ofcount:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/WindowsOfCountCollection\/permutations(ofCount:)"},"doc://co.pointfree.VaporRouting/documentation/Algorithms/WindowsOfCountCollection":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/WindowsOfCountCollection","role":"symbol","kind":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"WindowsOfCountCollection"}],"abstract":[{"type":"text","text":"A collection wrapper that presents a sliding window over the elements of"},{"type":"text","text":" "},{"type":"text","text":"a collection."}],"navigatorTitle":[{"kind":"identifier","text":"WindowsOfCountCollection"}],"title":"WindowsOfCountCollection","url":"\/documentation\/algorithms\/windowsofcountcollection"},"doc://co.pointfree.VaporRouting/documentation/Algorithms/WindowsOfCountCollection/Collection-Implementations":{"url":"\/documentation\/algorithms\/windowsofcountcollection\/collection-implementations","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/WindowsOfCountCollection\/Collection-Implementations","abstract":[],"type":"topic","title":"Collection Implementations","kind":"article","role":"collectionGroup"},"doc://co.pointfree.VaporRouting/documentation/Algorithms":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms","role":"collection","kind":"symbol","type":"topic","abstract":[],"title":"Algorithms","url":"\/documentation\/algorithms"},"doc://co.pointfree.VaporRouting/documentation/Algorithms/PermutationsSequence":{"abstract":[{"text":"A sequence of all the permutations of a collection’s elements.","type":"text"}],"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/PermutationsSequence","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"PermutationsSequence"}],"role":"symbol","title":"PermutationsSequence","navigatorTitle":[{"kind":"identifier","text":"PermutationsSequence"}],"url":"\/documentation\/algorithms\/permutationssequence","kind":"symbol"}}}