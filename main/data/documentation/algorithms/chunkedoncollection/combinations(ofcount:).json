{"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms","doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/ChunkedOnCollection","doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/ChunkedOnCollection\/Collection-Implementations"]]},"metadata":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"combinations","kind":"identifier"},{"text":"(","kind":"text"},{"text":"ofCount","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"text":") -> ","kind":"text"},{"text":"CombinationsSequence","preciseIdentifier":"s:10Algorithms20CombinationsSequenceV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":">","kind":"text"}],"role":"symbol","roleHeading":"Instance Method","symbolKind":"method","modules":[{"name":"Algorithms"}],"extendedModule":"Swift","title":"combinations(ofCount:)","externalID":"s:Sl10AlgorithmsE12combinations7ofCountAA20CombinationsSequenceVyxGSi_tF::SYNTHESIZED::s:10Algorithms19ChunkedOnCollectionV"},"variants":[{"paths":["\/documentation\/algorithms\/chunkedoncollection\/combinations(ofcount:)"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"major":0,"patch":0,"minor":3},"abstract":[{"type":"text","text":"Returns a collection of combinations of this collection’s elements, with"},{"type":"text","text":" "},{"type":"text","text":"each combination having the specified number of elements."}],"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/ChunkedOnCollection\/combinations(ofCount:)","interfaceLanguage":"swift"},"sections":[],"primaryContentSections":[{"declarations":[{"platforms":["Linux"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"combinations","kind":"identifier"},{"text":"(","kind":"text"},{"text":"ofCount","kind":"externalParam"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"k"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"},{"kind":"text","text":") -> "},{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/CombinationsSequence","kind":"typeIdentifier","preciseIdentifier":"s:10Algorithms20CombinationsSequenceV","text":"CombinationsSequence"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":">"}],"languages":["swift"]}],"kind":"declarations"},{"parameters":[{"name":"k","content":[{"type":"paragraph","inlineContent":[{"text":"The number of elements to include in each combination.","type":"text"}]}]}],"kind":"parameters"},{"content":[{"level":2,"type":"heading","anchor":"discussion","text":"Discussion"},{"inlineContent":[{"type":"text","text":"This example prints the different combinations of three from an array of"},{"type":"text","text":" "},{"type":"text","text":"four colors:"}],"type":"paragraph"},{"type":"codeListing","code":["let colors = [\"fuchsia\", \"cyan\", \"mauve\", \"magenta\"]","for combo in colors.combinations(ofCount: 3) {","    print(combo.joined(separator: \", \"))","}","\/\/ fuchsia, cyan, mauve","\/\/ fuchsia, cyan, magenta","\/\/ fuchsia, mauve, magenta","\/\/ cyan, mauve, magenta"],"syntax":null},{"inlineContent":[{"text":"The returned collection presents combinations in a consistent order, where","type":"text"},{"text":" ","type":"text"},{"text":"the indices in each combination are in ascending lexicographical order.","type":"text"},{"text":" ","type":"text"},{"text":"That is, in the example above, the combinations in order are the elements","type":"text"},{"text":" ","type":"text"},{"text":"at ","type":"text"},{"code":"[0, 1, 2]","type":"codeVoice"},{"text":", ","type":"text"},{"code":"[0, 1, 3]","type":"codeVoice"},{"text":", ","type":"text"},{"code":"[0, 2, 3]","type":"codeVoice"},{"text":", and finally ","type":"text"},{"code":"[1, 2, 3]","type":"codeVoice"},{"text":".","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"If "},{"type":"codeVoice","code":"k"},{"type":"text","text":" is zero, the resulting sequence has exactly one element, an empty"},{"type":"text","text":" "},{"type":"text","text":"array. If "},{"type":"codeVoice","code":"k"},{"type":"text","text":" is greater than the number of elements in this sequence,"},{"type":"text","text":" "},{"type":"text","text":"the resulting sequence has no elements."}],"type":"paragraph"},{"type":"aside","name":"Complexity","content":[{"type":"paragraph","inlineContent":[{"text":"O(1) for random-access base collections. O(","type":"text"},{"inlineContent":[{"text":"n","type":"text"}],"type":"emphasis"},{"text":") where ","type":"text"},{"inlineContent":[{"text":"n","type":"text"}],"type":"emphasis"},{"text":" ","type":"text"},{"text":"is the number of elements in the base collection, since","type":"text"},{"text":" ","type":"text"},{"code":"CombinationsSequence","type":"codeVoice"},{"text":" accesses the ","type":"text"},{"code":"count","type":"codeVoice"},{"text":" of the base collection.","type":"text"}]}],"style":"note"}],"kind":"content"}],"kind":"symbol","references":{"doc://co.pointfree.VaporRouting/documentation/Algorithms/ChunkedOnCollection":{"kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/ChunkedOnCollection","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ChunkedOnCollection"}],"abstract":[{"text":"A collection wrapper that breaks a collection into chunks based on a","type":"text"},{"text":" ","type":"text"},{"text":"predicate.","type":"text"}],"type":"topic","navigatorTitle":[{"kind":"identifier","text":"ChunkedOnCollection"}],"url":"\/documentation\/algorithms\/chunkedoncollection","title":"ChunkedOnCollection"},"doc://co.pointfree.VaporRouting/documentation/Algorithms/ChunkedOnCollection/combinations(ofCount:)":{"type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"combinations","kind":"identifier"},{"text":"(","kind":"text"},{"text":"ofCount","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"text":") -> ","kind":"text"},{"text":"CombinationsSequence","kind":"typeIdentifier","preciseIdentifier":"s:10Algorithms20CombinationsSequenceV"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":">","kind":"text"}],"url":"\/documentation\/algorithms\/chunkedoncollection\/combinations(ofcount:)","abstract":[{"type":"text","text":"Returns a collection of combinations of this collection’s elements, with"},{"text":" ","type":"text"},{"text":"each combination having the specified number of elements.","type":"text"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/ChunkedOnCollection\/combinations(ofCount:)","role":"symbol","kind":"symbol","title":"combinations(ofCount:)"},"doc://co.pointfree.VaporRouting/documentation/Algorithms/CombinationsSequence":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"CombinationsSequence"}],"kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/CombinationsSequence","title":"CombinationsSequence","navigatorTitle":[{"kind":"identifier","text":"CombinationsSequence"}],"url":"\/documentation\/algorithms\/combinationssequence","type":"topic","abstract":[{"text":"A collection wrapper that generates combinations of a base collection.","type":"text"}],"role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/Algorithms":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms","role":"collection","kind":"symbol","type":"topic","abstract":[],"title":"Algorithms","url":"\/documentation\/algorithms"},"doc://co.pointfree.VaporRouting/documentation/Algorithms/ChunkedOnCollection/Collection-Implementations":{"url":"\/documentation\/algorithms\/chunkedoncollection\/collection-implementations","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/ChunkedOnCollection\/Collection-Implementations","title":"Collection Implementations","role":"collectionGroup","kind":"article","abstract":[],"type":"topic"}}}