{"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/Chain2Sequence\/suffix(while:)","interfaceLanguage":"swift"},"kind":"symbol","hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms","doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/Chain2Sequence","doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/Chain2Sequence\/BidirectionalCollection-Implementations"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"suffix","kind":"identifier"},{"text":"(","kind":"text"},{"text":"while","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"predicate","kind":"internalParam"},{"text":": (","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"rethrows","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"SubSequence","kind":"typeIdentifier"}],"platforms":["Linux"]}]},{"kind":"parameters","parameters":[{"name":"predicate","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A closure that takes an element of the sequence as"},{"type":"text","text":" "},{"type":"text","text":"its argument and returns "},{"code":"true","type":"codeVoice"},{"type":"text","text":" if the element should be included or"},{"type":"text","text":" "},{"code":"false","type":"codeVoice"},{"type":"text","text":" if it should be excluded. Once the predicate returns "},{"code":"false","type":"codeVoice"},{"type":"text","text":" it"},{"type":"text","text":" "},{"type":"text","text":"will not be called again."}]}]}]},{"kind":"content","content":[{"type":"heading","level":2,"text":"Discussion","anchor":"discussion"},{"type":"aside","style":"note","name":"Complexity","content":[{"inlineContent":[{"type":"text","text":"O("},{"inlineContent":[{"text":"n","type":"text"}],"type":"emphasis"},{"type":"text","text":"), where "},{"inlineContent":[{"text":"n","type":"text"}],"type":"emphasis"},{"type":"text","text":" is the length of the collection."}],"type":"paragraph"}]}]}],"abstract":[{"text":"Returns a subsequence containing the elements from the end until","type":"text"},{"text":" ","type":"text"},{"code":"predicate","type":"codeVoice"},{"text":" returns ","type":"text"},{"code":"false","type":"codeVoice"},{"text":" and skipping the remaining elements.","type":"text"}],"schemaVersion":{"minor":3,"major":0,"patch":0},"sections":[],"metadata":{"symbolKind":"method","externalID":"s:SK10AlgorithmsE6suffix5while11SubSequenceQzSb7ElementQzKXE_tKF::SYNTHESIZED::s:10Algorithms14Chain2SequenceV","title":"suffix(while:)","modules":[{"name":"Algorithms"}],"roleHeading":"Instance Method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"suffix"},{"kind":"text","text":"("},{"kind":"externalParam","text":"while"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"kind":"text","text":") "},{"kind":"keyword","text":"rethrows"},{"text":" -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"SubSequence","kind":"typeIdentifier"}],"extendedModule":"Swift","role":"symbol"},"variants":[{"paths":["\/documentation\/algorithms\/chain2sequence\/suffix(while:)"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://co.pointfree.VaporRouting/documentation/Algorithms/Chain2Sequence/BidirectionalCollection-Implementations":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/Chain2Sequence\/BidirectionalCollection-Implementations","abstract":[],"type":"topic","url":"\/documentation\/algorithms\/chain2sequence\/bidirectionalcollection-implementations","kind":"article","title":"BidirectionalCollection Implementations","role":"collectionGroup"},"doc://co.pointfree.VaporRouting/documentation/Algorithms/Chain2Sequence/suffix(while:)":{"type":"topic","title":"suffix(while:)","abstract":[{"text":"Returns a subsequence containing the elements from the end until","type":"text"},{"text":" ","type":"text"},{"code":"predicate","type":"codeVoice"},{"text":" returns ","type":"text"},{"code":"false","type":"codeVoice"},{"text":" and skipping the remaining elements.","type":"text"}],"role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/Chain2Sequence\/suffix(while:)","url":"\/documentation\/algorithms\/chain2sequence\/suffix(while:)","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"suffix"},{"kind":"text","text":"("},{"kind":"externalParam","text":"while"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"kind":"text","text":") "},{"kind":"keyword","text":"rethrows"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"SubSequence"}]},"doc://co.pointfree.VaporRouting/documentation/Algorithms":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms","role":"collection","kind":"symbol","type":"topic","abstract":[],"title":"Algorithms","url":"\/documentation\/algorithms"},"doc://co.pointfree.VaporRouting/documentation/Algorithms/Chain2Sequence":{"navigatorTitle":[{"kind":"identifier","text":"Chain2Sequence"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/Chain2Sequence","url":"\/documentation\/algorithms\/chain2sequence","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Chain2Sequence"}],"type":"topic","kind":"symbol","role":"symbol","abstract":[{"text":"A concatenation of two sequences with the same element type.","type":"text"}],"title":"Chain2Sequence"}}}