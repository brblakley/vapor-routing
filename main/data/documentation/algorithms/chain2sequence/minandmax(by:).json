{"kind":"symbol","schemaVersion":{"minor":3,"major":0,"patch":0},"metadata":{"roleHeading":"Instance Method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"minAndMax"},{"kind":"text","text":"("},{"kind":"externalParam","text":"by"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":") "},{"kind":"keyword","text":"rethrows"},{"kind":"text","text":" -> (min"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":", max"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":")?"}],"extendedModule":"Swift","externalID":"s:ST10AlgorithmsE9minAndMax2by7ElementQz0B0_AE3maxtSgSbAE_AEtKXE_tKF::SYNTHESIZED::s:10Algorithms14Chain2SequenceV","modules":[{"name":"Algorithms"}],"title":"minAndMax(by:)","symbolKind":"method","role":"symbol"},"variants":[{"paths":["\/documentation\/algorithms\/chain2sequence\/minandmax(by:)"],"traits":[{"interfaceLanguage":"swift"}]}],"primaryContentSections":[{"declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"minAndMax","kind":"identifier"},{"text":"(","kind":"text"},{"text":"by","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"areInIncreasingOrder","kind":"internalParam"},{"text":": (","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"text":") ","kind":"text"},{"text":"rethrows","kind":"keyword"},{"text":" -> (min","kind":"text"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":", max","kind":"text"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":")?","kind":"text"}],"languages":["swift"],"platforms":["Linux"]}],"kind":"declarations"},{"parameters":[{"name":"areInIncreasingOrder","content":[{"type":"paragraph","inlineContent":[{"text":"A predicate that returns ","type":"text"},{"type":"codeVoice","code":"true"},{"text":" if its","type":"text"},{"text":" ","type":"text"},{"text":"first argument should be ordered before its second argument; otherwise,","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"false"},{"text":".","type":"text"}]}]}],"kind":"parameters"},{"content":[{"type":"heading","level":2,"anchor":"return-value","text":"Return Value"},{"type":"paragraph","inlineContent":[{"text":"A tuple with the sequenceâ€™s minimum element, followed by its","type":"text"},{"text":" ","type":"text"},{"text":"maximum element. If the sequence provides multiple qualifying minimum","type":"text"},{"text":" ","type":"text"},{"text":"elements, the first equivalent element is returned; of multiple maximum","type":"text"},{"text":" ","type":"text"},{"text":"elements, the last is returned. If the sequence has no elements, the","type":"text"},{"text":" ","type":"text"},{"text":"method returns ","type":"text"},{"code":"nil","type":"codeVoice"},{"text":".","type":"text"}]}],"kind":"content"},{"content":[{"text":"Discussion","type":"heading","anchor":"discussion","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"The predicate must be a "},{"type":"emphasis","inlineContent":[{"text":"strict weak ordering","type":"text"}]},{"type":"text","text":" over the elements. That is,"},{"type":"text","text":" "},{"type":"text","text":"for any elements "},{"type":"codeVoice","code":"a"},{"type":"text","text":", "},{"type":"codeVoice","code":"b"},{"type":"text","text":", and "},{"type":"codeVoice","code":"c"},{"type":"text","text":", the following conditions must hold:"}]},{"items":[{"content":[{"inlineContent":[{"code":"areInIncreasingOrder(a, a)","type":"codeVoice"},{"text":" is always ","type":"text"},{"code":"false","type":"codeVoice"},{"text":". (Irreflexivity)","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"If "},{"code":"areInIncreasingOrder(a, b)","type":"codeVoice"},{"type":"text","text":" and "},{"code":"areInIncreasingOrder(b, c)","type":"codeVoice"},{"type":"text","text":" are"},{"type":"text","text":" "},{"type":"text","text":"both "},{"code":"true","type":"codeVoice"},{"type":"text","text":", then "},{"code":"areInIncreasingOrder(a, c)","type":"codeVoice"},{"type":"text","text":" is also"},{"type":"text","text":" "},{"code":"true","type":"codeVoice"},{"type":"text","text":". (Transitive comparability)"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Two elements are ","type":"text"},{"type":"emphasis","inlineContent":[{"text":"incomparable","type":"text"}]},{"text":" if neither is ordered before the other","type":"text"},{"text":" ","type":"text"},{"text":"according to the predicate. If ","type":"text"},{"code":"a","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"b","type":"codeVoice"},{"text":" are incomparable, and ","type":"text"},{"code":"b","type":"codeVoice"},{"text":" ","type":"text"},{"text":"and ","type":"text"},{"code":"c","type":"codeVoice"},{"text":" are incomparable, then ","type":"text"},{"code":"a","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"c","type":"codeVoice"},{"text":" are also incomparable.","type":"text"},{"text":" ","type":"text"},{"text":"(Transitive incomparability)","type":"text"}]}]}],"type":"unorderedList"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This example shows how to use the "},{"type":"codeVoice","code":"minAndMax(by:)"},{"type":"text","text":" method on a dictionary"},{"type":"text","text":" "},{"type":"text","text":"to find the key-value pair with the lowest value and the pair with the"},{"type":"text","text":" "},{"type":"text","text":"highest value."}]},{"syntax":null,"type":"codeListing","code":["let hues = [\"Heliotrope\": 296, \"Coral\": 16, \"Aquamarine\": 156]","if let extremeHues = hues.minAndMax(by: {$0.value < $1.value}) {","    print(extremeHues.min, extremeHues.max)","} else {","    print(\"There are no hues\")","}","\/\/ Prints: \"(key: \"Coral\", value: 16) (key: \"Heliotrope\", value: 296)\""]},{"style":"note","name":"Precondition","type":"aside","content":[{"inlineContent":[{"type":"text","text":"The sequence is finite."}],"type":"paragraph"}]},{"style":"note","name":"Complexity","type":"aside","content":[{"inlineContent":[{"text":"O(","type":"text"},{"inlineContent":[{"type":"text","text":"n"}],"type":"emphasis"},{"text":"), where ","type":"text"},{"inlineContent":[{"text":"n","type":"text"}],"type":"emphasis"},{"text":" is the length of the sequence.","type":"text"}],"type":"paragraph"}]}],"kind":"content"}],"abstract":[{"text":"Returns both the minimum and maximum elements in the sequence, using the","type":"text"},{"text":" ","type":"text"},{"text":"given predicate as the comparison between elements.","type":"text"}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms","doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/Chain2Sequence","doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/Chain2Sequence\/Sequence-Implementations"]]},"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/Chain2Sequence\/minAndMax(by:)","interfaceLanguage":"swift"},"sections":[],"references":{"doc://co.pointfree.VaporRouting/documentation/Algorithms/Chain2Sequence":{"navigatorTitle":[{"kind":"identifier","text":"Chain2Sequence"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/Chain2Sequence","url":"\/documentation\/algorithms\/chain2sequence","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Chain2Sequence"}],"type":"topic","kind":"symbol","role":"symbol","abstract":[{"text":"A concatenation of two sequences with the same element type.","type":"text"}],"title":"Chain2Sequence"},"doc://co.pointfree.VaporRouting/documentation/Algorithms/Chain2Sequence/Sequence-Implementations":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/Chain2Sequence\/Sequence-Implementations","url":"\/documentation\/algorithms\/chain2sequence\/sequence-implementations","type":"topic","kind":"article","role":"collectionGroup","abstract":[],"title":"Sequence Implementations"},"doc://co.pointfree.VaporRouting/documentation/Algorithms":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms","role":"collection","kind":"symbol","type":"topic","abstract":[],"title":"Algorithms","url":"\/documentation\/algorithms"},"doc://co.pointfree.VaporRouting/documentation/Algorithms/Chain2Sequence/minAndMax(by:)":{"kind":"symbol","title":"minAndMax(by:)","url":"\/documentation\/algorithms\/chain2sequence\/minandmax(by:)","abstract":[{"text":"Returns both the minimum and maximum elements in the sequence, using the","type":"text"},{"text":" ","type":"text"},{"text":"given predicate as the comparison between elements.","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"minAndMax","kind":"identifier"},{"text":"(","kind":"text"},{"text":"by","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"},{"kind":"text","text":") "},{"kind":"keyword","text":"rethrows"},{"kind":"text","text":" -> (min"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":", max"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":")?"}],"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/Chain2Sequence\/minAndMax(by:)","role":"symbol"}}}