{"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms","doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/SplitCollection","doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/SplitCollection\/Collection-Implementations"]]},"schemaVersion":{"major":0,"minor":3,"patch":0},"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/SplitCollection\/cycled()","interfaceLanguage":"swift"},"metadata":{"role":"symbol","modules":[{"name":"Algorithms"}],"externalID":"s:Sl10AlgorithmsE6cycledAA14CycledSequenceVyxGyF::SYNTHESIZED::s:10Algorithms15SplitCollectionV","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cycled","kind":"identifier"},{"text":"() -> ","kind":"text"},{"preciseIdentifier":"s:10Algorithms14CycledSequenceV","text":"CycledSequence","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":">"}],"roleHeading":"Instance Method","extendedModule":"Swift","title":"cycled()","symbolKind":"method"},"sections":[],"variants":[{"paths":["\/documentation\/algorithms\/splitcollection\/cycled()"],"traits":[{"interfaceLanguage":"swift"}]}],"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"cycled"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Algorithms14CycledSequenceV","text":"CycledSequence","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/CycledSequence"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":">"}],"platforms":["Linux"]}],"kind":"declarations"},{"content":[{"level":2,"text":"Return Value","anchor":"return-value","type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"A sequence that repeats the elements of this collection"},{"type":"text","text":" "},{"type":"text","text":"forever."}]}],"kind":"content"},{"content":[{"anchor":"discussion","type":"heading","level":2,"text":"Discussion"},{"inlineContent":[{"text":"Use the ","type":"text"},{"code":"cycled()","type":"codeVoice"},{"text":" method to repeat the elements of a sequence or","type":"text"},{"text":" ","type":"text"},{"text":"collection forever. You can combine ","type":"text"},{"type":"codeVoice","code":"cycled()"},{"text":" with another, finite","type":"text"},{"text":" ","type":"text"},{"text":"sequence to iterate over the two together.","type":"text"}],"type":"paragraph"},{"code":["for (evenOrOdd, number) in zip([\"even\", \"odd\"].cycled(), 0..<10) {","    print(\"\\(number) is \\(evenOrOdd)\")","}","\/\/ 0 is even","\/\/ 1 is odd","\/\/ 2 is even","\/\/ 3 is odd","\/\/ ...","\/\/ 9 is odd"],"syntax":null,"type":"codeListing"},{"name":"Important","type":"aside","style":"important","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"When called on a non-empty collection, the resulting sequence"},{"type":"text","text":" "},{"type":"text","text":"is infinite. Do not directly call methods that require a finite"},{"type":"text","text":" "},{"type":"text","text":"sequence, like "},{"type":"codeVoice","code":"map"},{"type":"text","text":" or "},{"type":"codeVoice","code":"filter"},{"type":"text","text":", without first constraining the length"},{"type":"text","text":" "},{"type":"text","text":"of the cycling sequence."}]}]},{"name":"Complexity","type":"aside","style":"note","content":[{"inlineContent":[{"text":"O(1)","type":"text"}],"type":"paragraph"}]}],"kind":"content"}],"kind":"symbol","abstract":[{"type":"text","text":"Returns a sequence that repeats the elements of this collection forever."}],"references":{"doc://co.pointfree.VaporRouting/documentation/Algorithms/SplitCollection/cycled()":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cycled","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"CycledSequence","kind":"typeIdentifier","preciseIdentifier":"s:10Algorithms14CycledSequenceV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":">"}],"kind":"symbol","type":"topic","title":"cycled()","url":"\/documentation\/algorithms\/splitcollection\/cycled()","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/SplitCollection\/cycled()","abstract":[{"text":"Returns a sequence that repeats the elements of this collection forever.","type":"text"}],"role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/Algorithms/SplitCollection/Collection-Implementations":{"title":"Collection Implementations","url":"\/documentation\/algorithms\/splitcollection\/collection-implementations","abstract":[],"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/SplitCollection\/Collection-Implementations","role":"collectionGroup","kind":"article"},"doc://co.pointfree.VaporRouting/documentation/Algorithms/CycledSequence":{"title":"CycledSequence","navigatorTitle":[{"kind":"identifier","text":"CycledSequence"}],"url":"\/documentation\/algorithms\/cycledsequence","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"CycledSequence"}],"abstract":[{"text":"A collection wrapper that repeats the elements of a base collection.","type":"text"}],"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/CycledSequence","role":"symbol","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/Algorithms":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms","role":"collection","kind":"symbol","type":"topic","abstract":[],"title":"Algorithms","url":"\/documentation\/algorithms"},"doc://co.pointfree.VaporRouting/documentation/Algorithms/SplitCollection":{"title":"SplitCollection","navigatorTitle":[{"kind":"identifier","text":"SplitCollection"}],"url":"\/documentation\/algorithms\/splitcollection","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"SplitCollection"}],"abstract":[{"text":"A collection that lazily splits a base collection into subsequences","type":"text"},{"text":" ","type":"text"},{"text":"separated by elements that satisfy the given ","type":"text"},{"code":"whereSeparator","type":"codeVoice"},{"text":" predicate.","type":"text"}],"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/SplitCollection","role":"symbol","kind":"symbol"}}}