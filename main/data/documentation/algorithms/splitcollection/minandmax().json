{"abstract":[{"text":"Returns both the minimum and maximum elements in the sequence.","type":"text"}],"metadata":{"title":"minAndMax()","modules":[{"name":"Algorithms"}],"symbolKind":"method","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"code":"Element","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Comparable","type":"codeVoice"},{"text":".","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"roleHeading":"Instance Method","role":"symbol","externalID":"s:ST10AlgorithmsSL7ElementRpzrlE9minAndMaxAC0C0_AC3maxtSgyF::SYNTHESIZED::s:10Algorithms15SplitCollectionV","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"minAndMax"},{"kind":"text","text":"() -> (min"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":", max"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":")?"}],"extendedModule":"Swift"},"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/SplitCollection\/minAndMax()","interfaceLanguage":"swift"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/algorithms\/splitcollection\/minandmax()"]}],"primaryContentSections":[{"declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"minAndMax","kind":"identifier"},{"text":"() -> (min","kind":"text"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":", max","kind":"text"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":")?","kind":"text"}],"platforms":["Linux"],"languages":["swift"]}],"kind":"declarations"},{"kind":"content","content":[{"type":"heading","text":"Return Value","level":2,"anchor":"return-value"},{"inlineContent":[{"text":"A tuple with the sequenceâ€™s minimum element, followed by its","type":"text"},{"text":" ","type":"text"},{"text":"maximum element. If the sequence provides multiple qualifying minimum","type":"text"},{"text":" ","type":"text"},{"text":"elements, the first equivalent element is returned; of multiple maximum","type":"text"},{"text":" ","type":"text"},{"text":"elements, the last is returned. If the sequence has no elements, the","type":"text"},{"text":" ","type":"text"},{"text":"method returns ","type":"text"},{"type":"codeVoice","code":"nil"},{"text":".","type":"text"}],"type":"paragraph"}]},{"kind":"content","content":[{"level":2,"type":"heading","text":"Discussion","anchor":"discussion"},{"inlineContent":[{"type":"text","text":"This example finds the smallest and largest values in an array of height"},{"type":"text","text":" "},{"type":"text","text":"measurements."}],"type":"paragraph"},{"code":["let heights = [67.5, 65.7, 64.3, 61.1, 58.5, 60.3, 64.9]","if let (lowestHeight, greatestHeight) = heights.minAndMax() {","    print(lowestHeight, greatestHeight)","} else {","    print(\"The list of heights is empty\")","}","\/\/ Prints: \"58.5 67.5\""],"syntax":null,"type":"codeListing"},{"style":"note","content":[{"inlineContent":[{"type":"text","text":"The sequence is finite."}],"type":"paragraph"}],"type":"aside","name":"Precondition"},{"style":"note","content":[{"inlineContent":[{"type":"text","text":"O("},{"inlineContent":[{"text":"n","type":"text"}],"type":"emphasis"},{"type":"text","text":"), where "},{"inlineContent":[{"type":"text","text":"n"}],"type":"emphasis"},{"type":"text","text":" is the length of the sequence."}],"type":"paragraph"}],"type":"aside","name":"Complexity"}]}],"schemaVersion":{"patch":0,"minor":3,"major":0},"kind":"symbol","hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms","doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/SplitCollection","doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/SplitCollection\/Sequence-Implementations"]]},"sections":[],"references":{"doc://co.pointfree.VaporRouting/documentation/Algorithms":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms","role":"collection","kind":"symbol","type":"topic","abstract":[],"title":"Algorithms","url":"\/documentation\/algorithms"},"doc://co.pointfree.VaporRouting/documentation/Algorithms/SplitCollection/Sequence-Implementations":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/SplitCollection\/Sequence-Implementations","url":"\/documentation\/algorithms\/splitcollection\/sequence-implementations","title":"Sequence Implementations","abstract":[],"kind":"article","role":"collectionGroup","type":"topic"},"doc://co.pointfree.VaporRouting/documentation/Algorithms/SplitCollection":{"title":"SplitCollection","navigatorTitle":[{"kind":"identifier","text":"SplitCollection"}],"url":"\/documentation\/algorithms\/splitcollection","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"SplitCollection"}],"abstract":[{"text":"A collection that lazily splits a base collection into subsequences","type":"text"},{"text":" ","type":"text"},{"text":"separated by elements that satisfy the given ","type":"text"},{"code":"whereSeparator","type":"codeVoice"},{"text":" predicate.","type":"text"}],"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/SplitCollection","role":"symbol","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/Algorithms/SplitCollection/minAndMax()":{"role":"symbol","abstract":[{"text":"Returns both the minimum and maximum elements in the sequence.","type":"text"}],"url":"\/documentation\/algorithms\/splitcollection\/minandmax()","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Element"},{"text":" conforms to ","type":"text"},{"code":"Comparable","type":"codeVoice"},{"text":".","type":"text"}]},"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/SplitCollection\/minAndMax()","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"minAndMax"},{"kind":"text","text":"() -> (min"},{"kind":"text","text":": "},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":", max","kind":"text"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":")?","kind":"text"}],"kind":"symbol","title":"minAndMax()"}}}