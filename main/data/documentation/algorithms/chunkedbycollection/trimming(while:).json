{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/algorithms\/chunkedbycollection\/trimming(while:)"]}],"schemaVersion":{"minor":3,"major":0,"patch":0},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/ChunkedByCollection\/trimming(while:)"},"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms","doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/ChunkedByCollection","doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/ChunkedByCollection\/BidirectionalCollection-Implementations"]]},"primaryContentSections":[{"declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"trimming"},{"kind":"text","text":"("},{"kind":"externalParam","text":"while"},{"kind":"text","text":" "},{"kind":"internalParam","text":"predicate"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"kind":"text","text":") "},{"kind":"keyword","text":"rethrows"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"SubSequence"}]}],"kind":"declarations"},{"parameters":[{"content":[{"type":"paragraph","inlineContent":[{"text":"A closure which determines if the element should be","type":"text"},{"text":" ","type":"text"},{"text":"omitted from the resulting slice.","type":"text"}]}],"name":"predicate"}],"kind":"parameters"},{"content":[{"level":2,"type":"heading","anchor":"discussion","text":"Discussion"},{"type":"paragraph","inlineContent":[{"text":"This example uses ","type":"text"},{"type":"codeVoice","code":"trimming(while:)"},{"text":" to get a substring without the white","type":"text"},{"text":" ","type":"text"},{"text":"space at the beginning and end of the string:","type":"text"}]},{"syntax":null,"type":"codeListing","code":["let myString = \"  hello, world  \"","print(myString.trimming(while: \\.isWhitespace)) \/\/ \"hello, world\""]},{"type":"aside","name":"Complexity","style":"note","content":[{"inlineContent":[{"text":"O(","type":"text"},{"inlineContent":[{"type":"text","text":"n"}],"type":"emphasis"},{"text":"), where ","type":"text"},{"inlineContent":[{"text":"n","type":"text"}],"type":"emphasis"},{"text":" is the length of this collection.","type":"text"}],"type":"paragraph"}]}],"kind":"content"}],"sections":[],"kind":"symbol","abstract":[{"text":"Returns a ","type":"text"},{"code":"SubSequence","type":"codeVoice"},{"text":" formed by discarding all elements at the start and","type":"text"},{"text":" ","type":"text"},{"text":"end of the collection which satisfy the given predicate.","type":"text"}],"metadata":{"extendedModule":"Swift","roleHeading":"Instance Method","symbolKind":"method","title":"trimming(while:)","externalID":"s:SK10AlgorithmsE8trimming5while11SubSequenceQzSb7ElementQzKXE_tKF::SYNTHESIZED::s:10Algorithms19ChunkedByCollectionV","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"trimming","kind":"identifier"},{"text":"(","kind":"text"},{"text":"while","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"text":") ","kind":"text"},{"text":"rethrows","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"SubSequence","kind":"typeIdentifier"}],"modules":[{"name":"Algorithms"}],"role":"symbol"},"references":{"doc://co.pointfree.VaporRouting/documentation/Algorithms":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms","role":"collection","kind":"symbol","type":"topic","abstract":[],"title":"Algorithms","url":"\/documentation\/algorithms"},"doc://co.pointfree.VaporRouting/documentation/Algorithms/ChunkedByCollection":{"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/ChunkedByCollection","kind":"symbol","title":"ChunkedByCollection","url":"\/documentation\/algorithms\/chunkedbycollection","abstract":[{"type":"text","text":"A collection wrapper that breaks a collection into chunks based on a"},{"type":"text","text":" "},{"type":"text","text":"predicate."}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"ChunkedByCollection"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ChunkedByCollection"}]},"doc://co.pointfree.VaporRouting/documentation/Algorithms/ChunkedByCollection/BidirectionalCollection-Implementations":{"title":"BidirectionalCollection Implementations","type":"topic","abstract":[],"kind":"article","role":"collectionGroup","url":"\/documentation\/algorithms\/chunkedbycollection\/bidirectionalcollection-implementations","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/ChunkedByCollection\/BidirectionalCollection-Implementations"},"doc://co.pointfree.VaporRouting/documentation/Algorithms/ChunkedByCollection/trimming(while:)":{"kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/ChunkedByCollection\/trimming(while:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"trimming"},{"kind":"text","text":"("},{"kind":"externalParam","text":"while"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"},{"kind":"text","text":") "},{"kind":"keyword","text":"rethrows"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"SubSequence"}],"url":"\/documentation\/algorithms\/chunkedbycollection\/trimming(while:)","role":"symbol","title":"trimming(while:)","type":"topic","abstract":[{"type":"text","text":"Returns a "},{"code":"SubSequence","type":"codeVoice"},{"type":"text","text":" formed by discarding all elements at the start and"},{"type":"text","text":" "},{"type":"text","text":"end of the collection which satisfy the given predicate."}]}}}