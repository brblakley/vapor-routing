{"schemaVersion":{"patch":0,"major":0,"minor":3},"abstract":[{"text":"Returns the first non-","type":"text"},{"code":"nil","type":"codeVoice"},{"text":" result obtained from applying the given","type":"text"},{"text":" ","type":"text"},{"text":"transformation to the elements of the sequence.","type":"text"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"firstNonNil"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Result"},{"kind":"text","text":">("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"transform"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Result"},{"kind":"text","text":"?) "},{"kind":"keyword","text":"rethrows"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Result"},{"kind":"text","text":"?"}],"languages":["swift"]}]},{"kind":"parameters","parameters":[{"name":"transform","content":[{"inlineContent":[{"type":"text","text":"A closure that takes an element of the sequence as"},{"type":"text","text":" "},{"type":"text","text":"its argument and returns an optional transformed value."}],"type":"paragraph"}]}]},{"kind":"content","content":[{"type":"heading","anchor":"return-value","level":2,"text":"Return Value"},{"type":"paragraph","inlineContent":[{"text":"The first non-","type":"text"},{"code":"nil","type":"codeVoice"},{"text":" return value of the transformation, or","type":"text"},{"text":" ","type":"text"},{"code":"nil","type":"codeVoice"},{"text":" if no transformation is successful.","type":"text"}]}]},{"kind":"content","content":[{"text":"Discussion","type":"heading","anchor":"discussion","level":2},{"type":"codeListing","syntax":null,"code":["let strings = [\"three\", \"3.14\", \"-5\", \"2\"]","if let firstInt = strings.firstNonNil({ Int($0) }) {","    print(firstInt)","    \/\/ -5","}"]},{"content":[{"inlineContent":[{"type":"text","text":"O("},{"type":"emphasis","inlineContent":[{"text":"n","type":"text"}]},{"type":"text","text":"), where "},{"type":"emphasis","inlineContent":[{"text":"n","type":"text"}]},{"type":"text","text":" is the number of elements at the start of"},{"type":"text","text":" "},{"type":"text","text":"the sequence that result in "},{"type":"codeVoice","code":"nil"},{"type":"text","text":" when applying the transformation."}],"type":"paragraph"}],"type":"aside","style":"note","name":"Complexity"}]}],"sections":[],"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms","doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/ChunkedByCollection","doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/ChunkedByCollection\/Sequence-Implementations"]]},"kind":"symbol","metadata":{"title":"firstNonNil(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"firstNonNil"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Result"},{"kind":"text","text":">(("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Result"},{"kind":"text","text":"?) "},{"kind":"keyword","text":"rethrows"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Result"},{"kind":"text","text":"?"}],"modules":[{"name":"Algorithms"}],"extendedModule":"Swift","role":"symbol","externalID":"s:ST10AlgorithmsE11firstNonNilyqd__SgAC7ElementQzKXEKlF::SYNTHESIZED::s:10Algorithms19ChunkedByCollectionV","roleHeading":"Instance Method","symbolKind":"method"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/algorithms\/chunkedbycollection\/firstnonnil(_:)"]}],"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/ChunkedByCollection\/firstNonNil(_:)","interfaceLanguage":"swift"},"references":{"doc://co.pointfree.VaporRouting/documentation/Algorithms/ChunkedByCollection/firstNonNil(_:)":{"abstract":[{"text":"Returns the first non-","type":"text"},{"type":"codeVoice","code":"nil"},{"text":" result obtained from applying the given","type":"text"},{"text":" ","type":"text"},{"text":"transformation to the elements of the sequence.","type":"text"}],"type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"firstNonNil"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Result"},{"text":">((","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Result"},{"kind":"text","text":"?) "},{"kind":"keyword","text":"rethrows"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Result"},{"kind":"text","text":"?"}],"title":"firstNonNil(_:)","kind":"symbol","role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/ChunkedByCollection\/firstNonNil(_:)","url":"\/documentation\/algorithms\/chunkedbycollection\/firstnonnil(_:)"},"doc://co.pointfree.VaporRouting/documentation/Algorithms/ChunkedByCollection/Sequence-Implementations":{"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/ChunkedByCollection\/Sequence-Implementations","kind":"article","title":"Sequence Implementations","url":"\/documentation\/algorithms\/chunkedbycollection\/sequence-implementations","abstract":[],"role":"collectionGroup"},"doc://co.pointfree.VaporRouting/documentation/Algorithms":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms","role":"collection","kind":"symbol","type":"topic","abstract":[],"title":"Algorithms","url":"\/documentation\/algorithms"},"doc://co.pointfree.VaporRouting/documentation/Algorithms/ChunkedByCollection":{"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/ChunkedByCollection","kind":"symbol","title":"ChunkedByCollection","url":"\/documentation\/algorithms\/chunkedbycollection","abstract":[{"type":"text","text":"A collection wrapper that breaks a collection into chunks based on a"},{"type":"text","text":" "},{"type":"text","text":"predicate."}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"ChunkedByCollection"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ChunkedByCollection"}]}}}