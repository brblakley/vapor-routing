{"sections":[],"abstract":[{"text":"Returns a collection of combinations of this collection’s elements, with","type":"text"},{"text":" ","type":"text"},{"text":"each combination having the specified number of elements.","type":"text"}],"metadata":{"extendedModule":"Swift","externalID":"s:Sl10AlgorithmsE12combinations7ofCountAA20CombinationsSequenceVyxGSi_tF::SYNTHESIZED::s:10Algorithms23AdjacentPairsCollectionV","role":"symbol","modules":[{"name":"Algorithms"}],"roleHeading":"Instance Method","title":"combinations(ofCount:)","symbolKind":"method","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"combinations","kind":"identifier"},{"text":"(","kind":"text"},{"text":"ofCount","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"text":") -> ","kind":"text"},{"text":"CombinationsSequence","kind":"typeIdentifier","preciseIdentifier":"s:10Algorithms20CombinationsSequenceV"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":">","kind":"text"}]},"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/AdjacentPairsCollection\/combinations(ofCount:)","interfaceLanguage":"swift"},"schemaVersion":{"patch":0,"major":0,"minor":3},"kind":"symbol","primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"combinations"},{"kind":"text","text":"("},{"kind":"externalParam","text":"ofCount"},{"kind":"text","text":" "},{"kind":"internalParam","text":"k"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/CombinationsSequence","text":"CombinationsSequence","preciseIdentifier":"s:10Algorithms20CombinationsSequenceV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":">"}],"platforms":["Linux"]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"name":"k","content":[{"inlineContent":[{"text":"The number of elements to include in each combination.","type":"text"}],"type":"paragraph"}]}]},{"content":[{"type":"heading","text":"Discussion","anchor":"discussion","level":2},{"type":"paragraph","inlineContent":[{"text":"This example prints the different combinations of three from an array of","type":"text"},{"text":" ","type":"text"},{"text":"four colors:","type":"text"}]},{"code":["let colors = [\"fuchsia\", \"cyan\", \"mauve\", \"magenta\"]","for combo in colors.combinations(ofCount: 3) {","    print(combo.joined(separator: \", \"))","}","\/\/ fuchsia, cyan, mauve","\/\/ fuchsia, cyan, magenta","\/\/ fuchsia, mauve, magenta","\/\/ cyan, mauve, magenta"],"type":"codeListing","syntax":null},{"type":"paragraph","inlineContent":[{"type":"text","text":"The returned collection presents combinations in a consistent order, where"},{"type":"text","text":" "},{"type":"text","text":"the indices in each combination are in ascending lexicographical order."},{"type":"text","text":" "},{"type":"text","text":"That is, in the example above, the combinations in order are the elements"},{"type":"text","text":" "},{"type":"text","text":"at "},{"type":"codeVoice","code":"[0, 1, 2]"},{"type":"text","text":", "},{"type":"codeVoice","code":"[0, 1, 3]"},{"type":"text","text":", "},{"type":"codeVoice","code":"[0, 2, 3]"},{"type":"text","text":", and finally "},{"type":"codeVoice","code":"[1, 2, 3]"},{"type":"text","text":"."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"If "},{"code":"k","type":"codeVoice"},{"type":"text","text":" is zero, the resulting sequence has exactly one element, an empty"},{"type":"text","text":" "},{"type":"text","text":"array. If "},{"code":"k","type":"codeVoice"},{"type":"text","text":" is greater than the number of elements in this sequence,"},{"type":"text","text":" "},{"type":"text","text":"the resulting sequence has no elements."}]},{"type":"aside","style":"note","name":"Complexity","content":[{"type":"paragraph","inlineContent":[{"text":"O(1) for random-access base collections. O(","type":"text"},{"inlineContent":[{"text":"n","type":"text"}],"type":"emphasis"},{"text":") where ","type":"text"},{"inlineContent":[{"type":"text","text":"n"}],"type":"emphasis"},{"text":" ","type":"text"},{"text":"is the number of elements in the base collection, since","type":"text"},{"text":" ","type":"text"},{"code":"CombinationsSequence","type":"codeVoice"},{"text":" accesses the ","type":"text"},{"code":"count","type":"codeVoice"},{"text":" of the base collection.","type":"text"}]}]}],"kind":"content"}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms","doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/AdjacentPairsCollection","doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/AdjacentPairsCollection\/Collection-Implementations"]]},"variants":[{"paths":["\/documentation\/algorithms\/adjacentpairscollection\/combinations(ofcount:)"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://co.pointfree.VaporRouting/documentation/Algorithms/AdjacentPairsCollection/combinations(ofCount:)":{"abstract":[{"text":"Returns a collection of combinations of this collection’s elements, with","type":"text"},{"text":" ","type":"text"},{"text":"each combination having the specified number of elements.","type":"text"}],"role":"symbol","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/AdjacentPairsCollection\/combinations(ofCount:)","title":"combinations(ofCount:)","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"combinations","kind":"identifier"},{"text":"(","kind":"text"},{"text":"ofCount","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"text":") -> ","kind":"text"},{"text":"CombinationsSequence","kind":"typeIdentifier","preciseIdentifier":"s:10Algorithms20CombinationsSequenceV"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":">","kind":"text"}],"url":"\/documentation\/algorithms\/adjacentpairscollection\/combinations(ofcount:)"},"doc://co.pointfree.VaporRouting/documentation/Algorithms":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms","role":"collection","kind":"symbol","type":"topic","abstract":[],"title":"Algorithms","url":"\/documentation\/algorithms"},"doc://co.pointfree.VaporRouting/documentation/Algorithms/CombinationsSequence":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"CombinationsSequence"}],"kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/CombinationsSequence","title":"CombinationsSequence","navigatorTitle":[{"kind":"identifier","text":"CombinationsSequence"}],"url":"\/documentation\/algorithms\/combinationssequence","type":"topic","abstract":[{"text":"A collection wrapper that generates combinations of a base collection.","type":"text"}],"role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/Algorithms/AdjacentPairsCollection/Collection-Implementations":{"kind":"article","title":"Collection Implementations","role":"collectionGroup","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/AdjacentPairsCollection\/Collection-Implementations","abstract":[],"type":"topic","url":"\/documentation\/algorithms\/adjacentpairscollection\/collection-implementations"},"doc://co.pointfree.VaporRouting/documentation/Algorithms/AdjacentPairsCollection":{"kind":"symbol","title":"AdjacentPairsCollection","role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/AdjacentPairsCollection","abstract":[{"text":"A collection of adjacent pairs of elements built from an underlying","type":"text"},{"text":" ","type":"text"},{"text":"collection.","type":"text"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AdjacentPairsCollection","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"AdjacentPairsCollection"}],"type":"topic","url":"\/documentation\/algorithms\/adjacentpairscollection"}}}