{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/algorithms\/cycledtimescollection\/min(count:sortedby:)"]}],"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["Linux"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"min"},{"kind":"text","text":"("},{"kind":"externalParam","text":"count"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":", "},{"kind":"externalParam","text":"sortedBy"},{"kind":"text","text":" "},{"kind":"internalParam","text":"areInIncreasingOrder"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":") "},{"kind":"keyword","text":"rethrows"},{"kind":"text","text":" -> ["},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":"]"}]}],"kind":"declarations"},{"parameters":[{"content":[{"inlineContent":[{"text":"The number of elements to return. If ","type":"text"},{"code":"count","type":"codeVoice"},{"text":" is greater than","type":"text"},{"text":" ","type":"text"},{"text":"the number of elements in this collection, all of the collectionâ€™s","type":"text"},{"text":" ","type":"text"},{"text":"elements are returned.","type":"text"}],"type":"paragraph"}],"name":"count"},{"content":[{"inlineContent":[{"type":"text","text":"A predicate that returns "},{"type":"codeVoice","code":"true"},{"type":"text","text":" if its"},{"type":"text","text":" "},{"type":"text","text":"first argument should be ordered before its second argument;"},{"type":"text","text":" "},{"type":"text","text":"otherwise, "},{"type":"codeVoice","code":"false"},{"type":"text","text":"."}],"type":"paragraph"}],"name":"areInIncreasingOrder"}],"kind":"parameters"},{"content":[{"anchor":"return-value","type":"heading","text":"Return Value","level":2},{"inlineContent":[{"text":"An array of the smallest ","type":"text"},{"code":"count","type":"codeVoice"},{"text":" elements of this collection,","type":"text"},{"text":" ","type":"text"},{"text":"sorted according to ","type":"text"},{"code":"areInIncreasingOrder","type":"codeVoice"},{"text":".","type":"text"}],"type":"paragraph"}],"kind":"content"},{"content":[{"type":"heading","level":2,"anchor":"discussion","text":"Discussion"},{"type":"paragraph","inlineContent":[{"text":"This example partially sorts an array of integers to retrieve its three","type":"text"},{"text":" ","type":"text"},{"text":"smallest values:","type":"text"}]},{"type":"codeListing","syntax":null,"code":["let numbers = [7, 1, 6, 2, 8, 3, 9]","let smallestThree = numbers.min(count: 3, sortedBy: <)","\/\/ [1, 2, 3]"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"If you need to sort a collection but only need to access its smallest"},{"type":"text","text":" "},{"type":"text","text":"elements, using this method can give you a performance boost over sorting"},{"type":"text","text":" "},{"type":"text","text":"the entire collection. The order of equal elements is guaranteed to be"},{"type":"text","text":" "},{"type":"text","text":"preserved."}]},{"type":"aside","name":"Complexity","content":[{"inlineContent":[{"text":"O(","type":"text"},{"type":"emphasis","inlineContent":[{"text":"k","type":"text"}]},{"text":" log ","type":"text"},{"type":"emphasis","inlineContent":[{"type":"text","text":"k"}]},{"text":" + ","type":"text"},{"type":"emphasis","inlineContent":[{"type":"text","text":"nk"}]},{"text":"), where ","type":"text"},{"type":"emphasis","inlineContent":[{"text":"n","type":"text"}]},{"text":" is the length of the","type":"text"},{"text":" ","type":"text"},{"text":"collection and ","type":"text"},{"type":"emphasis","inlineContent":[{"text":"k","type":"text"}]},{"text":" is ","type":"text"},{"code":"count","type":"codeVoice"},{"text":".","type":"text"}],"type":"paragraph"}],"style":"note"}],"kind":"content"}],"sections":[],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms","doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/CycledTimesCollection","doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/CycledTimesCollection\/Collection-Implementations"]]},"schemaVersion":{"major":0,"patch":0,"minor":3},"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/CycledTimesCollection\/min(count:sortedBy:)","interfaceLanguage":"swift"},"metadata":{"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"min","kind":"identifier"},{"text":"(","kind":"text"},{"text":"count","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"text":", ","kind":"text"},{"text":"sortedBy","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"text":") ","kind":"text"},{"text":"rethrows","kind":"keyword"},{"text":" -> [","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":"]","kind":"text"}],"externalID":"s:Sl10AlgorithmsE3min5count8sortedBySay7ElementQzGSi_SbAF_AFtKXEtKF::SYNTHESIZED::s:10Algorithms21CycledTimesCollectionV","roleHeading":"Instance Method","symbolKind":"method","title":"min(count:sortedBy:)","modules":[{"name":"Algorithms"}],"extendedModule":"Swift"},"abstract":[{"text":"Returns the smallest elements of this collection, as sorted by the given","type":"text"},{"text":" ","type":"text"},{"text":"predicate.","type":"text"}],"references":{"doc://co.pointfree.VaporRouting/documentation/Algorithms":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms","role":"collection","kind":"symbol","type":"topic","abstract":[],"title":"Algorithms","url":"\/documentation\/algorithms"},"doc://co.pointfree.VaporRouting/documentation/Algorithms/CycledTimesCollection/min(count:sortedBy:)":{"abstract":[{"type":"text","text":"Returns the smallest elements of this collection, as sorted by the given"},{"type":"text","text":" "},{"type":"text","text":"predicate."}],"kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"min","kind":"identifier"},{"text":"(","kind":"text"},{"text":"count","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"text":", ","kind":"text"},{"text":"sortedBy","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"text":") ","kind":"text"},{"text":"rethrows","kind":"keyword"},{"text":" -> [","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":"]","kind":"text"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/CycledTimesCollection\/min(count:sortedBy:)","url":"\/documentation\/algorithms\/cycledtimescollection\/min(count:sortedby:)","type":"topic","title":"min(count:sortedBy:)","role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/Algorithms/CycledTimesCollection":{"kind":"symbol","abstract":[{"type":"text","text":"A collection wrapper that repeats the elements of a base collection for a"},{"type":"text","text":" "},{"type":"text","text":"finite number of times."}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/CycledTimesCollection","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"CycledTimesCollection"}],"type":"topic","url":"\/documentation\/algorithms\/cycledtimescollection","navigatorTitle":[{"kind":"identifier","text":"CycledTimesCollection"}],"title":"CycledTimesCollection"},"doc://co.pointfree.VaporRouting/documentation/Algorithms/CycledTimesCollection/Collection-Implementations":{"type":"topic","title":"Collection Implementations","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/CycledTimesCollection\/Collection-Implementations","url":"\/documentation\/algorithms\/cycledtimescollection\/collection-implementations","abstract":[],"kind":"article","role":"collectionGroup"}}}