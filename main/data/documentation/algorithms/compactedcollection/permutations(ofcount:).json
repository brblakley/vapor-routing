{"abstract":[{"text":"Returns a collection of the permutations of this collection of the","type":"text"},{"text":" ","type":"text"},{"text":"specified length.","type":"text"}],"sections":[],"schemaVersion":{"major":0,"minor":3,"patch":0},"metadata":{"role":"symbol","externalID":"s:Sl10AlgorithmsE12permutations7ofCountAA20PermutationsSequenceVyxGSiSg_tF::SYNTHESIZED::s:10Algorithms19CompactedCollectionV","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"permutations","kind":"identifier"},{"text":"(","kind":"text"},{"text":"ofCount","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"text":"?) -> ","kind":"text"},{"text":"PermutationsSequence","kind":"typeIdentifier","preciseIdentifier":"s:10Algorithms20PermutationsSequenceV"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":">","kind":"text"}],"roleHeading":"Instance Method","title":"permutations(ofCount:)","extendedModule":"Swift","modules":[{"name":"Algorithms"}],"symbolKind":"method"},"kind":"symbol","hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms","doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/CompactedCollection","doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/CompactedCollection\/Collection-Implementations"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"permutations"},{"kind":"text","text":"("},{"kind":"externalParam","text":"ofCount"},{"kind":"text","text":" "},{"kind":"internalParam","text":"k"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Si","kind":"typeIdentifier","text":"Int"},{"kind":"text","text":"? = nil) -> "},{"preciseIdentifier":"s:10Algorithms20PermutationsSequenceV","kind":"typeIdentifier","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/PermutationsSequence","text":"PermutationsSequence"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":">"}],"languages":["swift"]}]},{"kind":"parameters","parameters":[{"name":"k","content":[{"inlineContent":[{"text":"The number of elements to include in each permutation.","type":"text"},{"text":" ","type":"text"},{"text":"If ","type":"text"},{"code":"k","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"nil","type":"codeVoice"},{"text":", the resulting sequence represents permutations of this","type":"text"},{"text":" ","type":"text"},{"text":"entire collection. If ","type":"text"},{"code":"k","type":"codeVoice"},{"text":" is greater than the number of elements in","type":"text"},{"text":" ","type":"text"},{"text":"this collection, the resulting sequence is empty.","type":"text"}],"type":"paragraph"}]}]},{"kind":"content","content":[{"level":2,"anchor":"discussion","type":"heading","text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This example prints the different permutations of two elements from an"},{"type":"text","text":" "},{"type":"text","text":"array of three names:"}]},{"type":"codeListing","code":["let names = [\"Alex\", \"Celeste\", \"Davide\"]","for perm in names.permutations(ofCount: 2) {","    print(perm.joined(separator: \", \"))","}","\/\/ Alex, Celeste","\/\/ Alex, Davide","\/\/ Celeste, Alex","\/\/ Celeste, Davide","\/\/ Davide, Alex","\/\/ Davide, Celeste"],"syntax":null},{"type":"paragraph","inlineContent":[{"text":"The permutations present the elements in increasing lexicographic order","type":"text"},{"text":" ","type":"text"},{"text":"of the collection’s original ordering (rather than the order of the","type":"text"},{"text":" ","type":"text"},{"text":"elements themselves). The first permutation will always consist of","type":"text"},{"text":" ","type":"text"},{"text":"elements in their original order, and the last will have the elements in","type":"text"},{"text":" ","type":"text"},{"text":"the reverse of their original order.","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Values that are repeated in the original collection are always treated as"},{"type":"text","text":" "},{"type":"text","text":"separate values in the resulting permutations:"}]},{"type":"codeListing","code":["let numbers = [20, 10, 10]","for perm in numbers.permutations() {","    print(perm)","}","\/\/ [20, 10, 10]","\/\/ [20, 10, 10]","\/\/ [10, 20, 10]","\/\/ [10, 10, 20]","\/\/ [10, 20, 10]","\/\/ [10, 10, 20]"],"syntax":null},{"type":"paragraph","inlineContent":[{"text":"If ","type":"text"},{"type":"codeVoice","code":"k"},{"text":" is zero, the resulting sequence has exactly one element, an","type":"text"},{"text":" ","type":"text"},{"text":"empty array. If ","type":"text"},{"type":"codeVoice","code":"k"},{"text":" is greater than the number of elements in this","type":"text"},{"text":" ","type":"text"},{"text":"sequence, the resulting sequence has no elements.","type":"text"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"O(1) for random-access base collections. O(","type":"text"},{"inlineContent":[{"type":"text","text":"n"}],"type":"emphasis"},{"text":") where ","type":"text"},{"inlineContent":[{"text":"n","type":"text"}],"type":"emphasis"},{"text":" ","type":"text"},{"text":"is the number of elements in the base collection, since","type":"text"},{"text":" ","type":"text"},{"code":"PermutationsSequence","type":"codeVoice"},{"text":" accesses the ","type":"text"},{"code":"count","type":"codeVoice"},{"text":" of the base collection.","type":"text"}]}],"type":"aside","name":"Complexity","style":"note"}]}],"variants":[{"paths":["\/documentation\/algorithms\/compactedcollection\/permutations(ofcount:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/CompactedCollection\/permutations(ofCount:)"},"references":{"doc://co.pointfree.VaporRouting/documentation/Algorithms":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms","role":"collection","kind":"symbol","type":"topic","abstract":[],"title":"Algorithms","url":"\/documentation\/algorithms"},"doc://co.pointfree.VaporRouting/documentation/Algorithms/CompactedCollection/permutations(ofCount:)":{"abstract":[{"text":"Returns a collection of the permutations of this collection of the","type":"text"},{"text":" ","type":"text"},{"text":"specified length.","type":"text"}],"role":"symbol","title":"permutations(ofCount:)","url":"\/documentation\/algorithms\/compactedcollection\/permutations(ofcount:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"permutations","kind":"identifier"},{"text":"(","kind":"text"},{"text":"ofCount","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Int","preciseIdentifier":"s:Si","kind":"typeIdentifier"},{"kind":"text","text":"?) -> "},{"preciseIdentifier":"s:10Algorithms20PermutationsSequenceV","kind":"typeIdentifier","text":"PermutationsSequence"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":">"}],"kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/CompactedCollection\/permutations(ofCount:)","type":"topic"},"doc://co.pointfree.VaporRouting/documentation/Algorithms/CompactedCollection":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"CompactedCollection"}],"url":"\/documentation\/algorithms\/compactedcollection","title":"CompactedCollection","kind":"symbol","type":"topic","abstract":[{"type":"text","text":"A "},{"type":"codeVoice","code":"Collection"},{"type":"text","text":" that iterates over every non-nil element from the original"},{"type":"text","text":" "},{"type":"codeVoice","code":"Collection"},{"type":"text","text":"."}],"navigatorTitle":[{"kind":"identifier","text":"CompactedCollection"}],"role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/CompactedCollection"},"doc://co.pointfree.VaporRouting/documentation/Algorithms/CompactedCollection/Collection-Implementations":{"kind":"article","role":"collectionGroup","abstract":[],"url":"\/documentation\/algorithms\/compactedcollection\/collection-implementations","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/CompactedCollection\/Collection-Implementations","title":"Collection Implementations"},"doc://co.pointfree.VaporRouting/documentation/Algorithms/PermutationsSequence":{"abstract":[{"text":"A sequence of all the permutations of a collection’s elements.","type":"text"}],"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/PermutationsSequence","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"PermutationsSequence"}],"role":"symbol","title":"PermutationsSequence","navigatorTitle":[{"kind":"identifier","text":"PermutationsSequence"}],"url":"\/documentation\/algorithms\/permutationssequence","kind":"symbol"}}}