{"sections":[],"metadata":{"modules":[{"name":"Algorithms"}],"conformance":{"constraints":[{"code":"Element","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Comparable","type":"codeVoice"},{"text":".","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"minAndMax","kind":"identifier"},{"text":"() -> (min","kind":"text"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":", max","kind":"text"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":")?","kind":"text"}],"role":"symbol","externalID":"s:ST10AlgorithmsSL7ElementRpzrlE9minAndMaxAC0C0_AC3maxtSgyF::SYNTHESIZED::s:10Algorithms19CompactedCollectionV","symbolKind":"method","roleHeading":"Instance Method","title":"minAndMax()","extendedModule":"Swift"},"kind":"symbol","variants":[{"paths":["\/documentation\/algorithms\/compactedcollection\/minandmax()"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"minor":3,"patch":0,"major":0},"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms","doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/CompactedCollection","doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/CompactedCollection\/Sequence-Implementations"]]},"abstract":[{"text":"Returns both the minimum and maximum elements in the sequence.","type":"text"}],"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/CompactedCollection\/minAndMax()","interfaceLanguage":"swift"},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"minAndMax","kind":"identifier"},{"text":"() -> (min","kind":"text"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":", max","kind":"text"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":")?","kind":"text"}],"platforms":["Linux"],"languages":["swift"]}]},{"content":[{"type":"heading","text":"Return Value","level":2,"anchor":"return-value"},{"type":"paragraph","inlineContent":[{"text":"A tuple with the sequenceâ€™s minimum element, followed by its","type":"text"},{"text":" ","type":"text"},{"text":"maximum element. If the sequence provides multiple qualifying minimum","type":"text"},{"text":" ","type":"text"},{"text":"elements, the first equivalent element is returned; of multiple maximum","type":"text"},{"text":" ","type":"text"},{"text":"elements, the last is returned. If the sequence has no elements, the","type":"text"},{"text":" ","type":"text"},{"text":"method returns ","type":"text"},{"type":"codeVoice","code":"nil"},{"text":".","type":"text"}]}],"kind":"content"},{"content":[{"type":"heading","anchor":"discussion","level":2,"text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This example finds the smallest and largest values in an array of height"},{"type":"text","text":" "},{"type":"text","text":"measurements."}]},{"type":"codeListing","code":["let heights = [67.5, 65.7, 64.3, 61.1, 58.5, 60.3, 64.9]","if let (lowestHeight, greatestHeight) = heights.minAndMax() {","    print(lowestHeight, greatestHeight)","} else {","    print(\"The list of heights is empty\")","}","\/\/ Prints: \"58.5 67.5\""],"syntax":null},{"type":"aside","content":[{"type":"paragraph","inlineContent":[{"text":"The sequence is finite.","type":"text"}]}],"name":"Precondition","style":"note"},{"type":"aside","content":[{"inlineContent":[{"text":"O(","type":"text"},{"inlineContent":[{"type":"text","text":"n"}],"type":"emphasis"},{"text":"), where ","type":"text"},{"inlineContent":[{"text":"n","type":"text"}],"type":"emphasis"},{"text":" is the length of the sequence.","type":"text"}],"type":"paragraph"}],"name":"Complexity","style":"note"}],"kind":"content"}],"references":{"doc://co.pointfree.VaporRouting/documentation/Algorithms":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms","role":"collection","kind":"symbol","type":"topic","abstract":[],"title":"Algorithms","url":"\/documentation\/algorithms"},"doc://co.pointfree.VaporRouting/documentation/Algorithms/CompactedCollection/minAndMax()":{"url":"\/documentation\/algorithms\/compactedcollection\/minandmax()","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"minAndMax","kind":"identifier"},{"text":"() -> (min","kind":"text"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":", max","kind":"text"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":")?","kind":"text"}],"conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"Element","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Comparable","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"role":"symbol","title":"minAndMax()","abstract":[{"text":"Returns both the minimum and maximum elements in the sequence.","type":"text"}],"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/CompactedCollection\/minAndMax()"},"doc://co.pointfree.VaporRouting/documentation/Algorithms/CompactedCollection/Sequence-Implementations":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/CompactedCollection\/Sequence-Implementations","role":"collectionGroup","kind":"article","type":"topic","abstract":[],"title":"Sequence Implementations","url":"\/documentation\/algorithms\/compactedcollection\/sequence-implementations"},"doc://co.pointfree.VaporRouting/documentation/Algorithms/CompactedCollection":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"CompactedCollection"}],"url":"\/documentation\/algorithms\/compactedcollection","title":"CompactedCollection","kind":"symbol","type":"topic","abstract":[{"type":"text","text":"A "},{"type":"codeVoice","code":"Collection"},{"type":"text","text":" that iterates over every non-nil element from the original"},{"type":"text","text":" "},{"type":"codeVoice","code":"Collection"},{"type":"text","text":"."}],"navigatorTitle":[{"kind":"identifier","text":"CompactedCollection"}],"role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/CompactedCollection"}}}