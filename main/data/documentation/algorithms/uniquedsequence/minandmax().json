{"kind":"symbol","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/algorithms\/uniquedsequence\/minandmax()"]}],"schemaVersion":{"minor":3,"major":0,"patch":0},"sections":[],"metadata":{"role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"minAndMax"},{"kind":"text","text":"() -> (min"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":", max"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":")?"}],"extendedModule":"Swift","roleHeading":"Instance Method","title":"minAndMax()","conformance":{"constraints":[{"code":"Element","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"Comparable","type":"codeVoice"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"externalID":"s:ST10AlgorithmsSL7ElementRpzrlE9minAndMaxAC0C0_AC3maxtSgyF::SYNTHESIZED::s:10Algorithms15UniquedSequenceV","modules":[{"name":"Algorithms"}],"symbolKind":"method"},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"minAndMax","kind":"identifier"},{"text":"() -> (min","kind":"text"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":", max","kind":"text"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":")?","kind":"text"}],"platforms":["Linux"]}]},{"content":[{"type":"heading","anchor":"return-value","text":"Return Value","level":2},{"type":"paragraph","inlineContent":[{"text":"A tuple with the sequenceâ€™s minimum element, followed by its","type":"text"},{"text":" ","type":"text"},{"text":"maximum element. If the sequence provides multiple qualifying minimum","type":"text"},{"text":" ","type":"text"},{"text":"elements, the first equivalent element is returned; of multiple maximum","type":"text"},{"text":" ","type":"text"},{"text":"elements, the last is returned. If the sequence has no elements, the","type":"text"},{"text":" ","type":"text"},{"text":"method returns ","type":"text"},{"code":"nil","type":"codeVoice"},{"text":".","type":"text"}]}],"kind":"content"},{"content":[{"text":"Discussion","anchor":"discussion","level":2,"type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This example finds the smallest and largest values in an array of height"},{"type":"text","text":" "},{"type":"text","text":"measurements."}]},{"syntax":null,"code":["let heights = [67.5, 65.7, 64.3, 61.1, 58.5, 60.3, 64.9]","if let (lowestHeight, greatestHeight) = heights.minAndMax() {","    print(lowestHeight, greatestHeight)","} else {","    print(\"The list of heights is empty\")","}","\/\/ Prints: \"58.5 67.5\""],"type":"codeListing"},{"content":[{"type":"paragraph","inlineContent":[{"text":"The sequence is finite.","type":"text"}]}],"style":"note","name":"Precondition","type":"aside"},{"content":[{"inlineContent":[{"text":"O(","type":"text"},{"inlineContent":[{"type":"text","text":"n"}],"type":"emphasis"},{"text":"), where ","type":"text"},{"inlineContent":[{"text":"n","type":"text"}],"type":"emphasis"},{"text":" is the length of the sequence.","type":"text"}],"type":"paragraph"}],"style":"note","name":"Complexity","type":"aside"}],"kind":"content"}],"abstract":[{"type":"text","text":"Returns both the minimum and maximum elements in the sequence."}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms","doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/UniquedSequence","doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/UniquedSequence\/Sequence-Implementations"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/UniquedSequence\/minAndMax()"},"references":{"doc://co.pointfree.VaporRouting/documentation/Algorithms/UniquedSequence":{"type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"UniquedSequence","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/UniquedSequence","role":"symbol","navigatorTitle":[{"text":"UniquedSequence","kind":"identifier"}],"abstract":[{"type":"text","text":"A sequence wrapper that leaves out duplicate elements of a base sequence."}],"title":"UniquedSequence","url":"\/documentation\/algorithms\/uniquedsequence"},"doc://co.pointfree.VaporRouting/documentation/Algorithms/UniquedSequence/Sequence-Implementations":{"type":"topic","kind":"article","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/UniquedSequence\/Sequence-Implementations","role":"collectionGroup","abstract":[],"title":"Sequence Implementations","url":"\/documentation\/algorithms\/uniquedsequence\/sequence-implementations"},"doc://co.pointfree.VaporRouting/documentation/Algorithms":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms","role":"collection","kind":"symbol","type":"topic","abstract":[],"title":"Algorithms","url":"\/documentation\/algorithms"},"doc://co.pointfree.VaporRouting/documentation/Algorithms/UniquedSequence/minAndMax()":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/UniquedSequence\/minAndMax()","url":"\/documentation\/algorithms\/uniquedsequence\/minandmax()","title":"minAndMax()","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"minAndMax","kind":"identifier"},{"text":"() -> (min","kind":"text"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":", max","kind":"text"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":")?"}],"abstract":[{"text":"Returns both the minimum and maximum elements in the sequence.","type":"text"}],"conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Element"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Comparable"},{"text":".","type":"text"}]},"type":"topic","role":"symbol"}}}