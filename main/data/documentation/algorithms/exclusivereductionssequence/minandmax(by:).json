{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"minAndMax"},{"kind":"text","text":"("},{"kind":"externalParam","text":"by"},{"kind":"text","text":" "},{"kind":"internalParam","text":"areInIncreasingOrder"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"},{"kind":"text","text":") "},{"kind":"keyword","text":"rethrows"},{"kind":"text","text":" -> (min"},{"kind":"text","text":": "},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":", max","kind":"text"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":")?","kind":"text"}],"languages":["swift"],"platforms":["Linux"]}]},{"parameters":[{"content":[{"inlineContent":[{"text":"A predicate that returns ","type":"text"},{"code":"true","type":"codeVoice"},{"text":" if its","type":"text"},{"text":" ","type":"text"},{"text":"first argument should be ordered before its second argument; otherwise,","type":"text"},{"text":" ","type":"text"},{"code":"false","type":"codeVoice"},{"text":".","type":"text"}],"type":"paragraph"}],"name":"areInIncreasingOrder"}],"kind":"parameters"},{"content":[{"type":"heading","level":2,"text":"Return Value","anchor":"return-value"},{"type":"paragraph","inlineContent":[{"text":"A tuple with the sequenceâ€™s minimum element, followed by its","type":"text"},{"text":" ","type":"text"},{"text":"maximum element. If the sequence provides multiple qualifying minimum","type":"text"},{"text":" ","type":"text"},{"text":"elements, the first equivalent element is returned; of multiple maximum","type":"text"},{"text":" ","type":"text"},{"text":"elements, the last is returned. If the sequence has no elements, the","type":"text"},{"text":" ","type":"text"},{"text":"method returns ","type":"text"},{"type":"codeVoice","code":"nil"},{"text":".","type":"text"}]}],"kind":"content"},{"content":[{"type":"heading","text":"Discussion","level":2,"anchor":"discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The predicate must be a "},{"type":"emphasis","inlineContent":[{"text":"strict weak ordering","type":"text"}]},{"type":"text","text":" over the elements. That is,"},{"type":"text","text":" "},{"type":"text","text":"for any elements "},{"code":"a","type":"codeVoice"},{"type":"text","text":", "},{"code":"b","type":"codeVoice"},{"type":"text","text":", and "},{"code":"c","type":"codeVoice"},{"type":"text","text":", the following conditions must hold:"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"areInIncreasingOrder(a, a)"},{"type":"text","text":" is always "},{"type":"codeVoice","code":"false"},{"type":"text","text":". (Irreflexivity)"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"If ","type":"text"},{"code":"areInIncreasingOrder(a, b)","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"areInIncreasingOrder(b, c)","type":"codeVoice"},{"text":" are","type":"text"},{"text":" ","type":"text"},{"text":"both ","type":"text"},{"code":"true","type":"codeVoice"},{"text":", then ","type":"text"},{"code":"areInIncreasingOrder(a, c)","type":"codeVoice"},{"text":" is also","type":"text"},{"text":" ","type":"text"},{"code":"true","type":"codeVoice"},{"text":". (Transitive comparability)","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Two elements are ","type":"text"},{"inlineContent":[{"text":"incomparable","type":"text"}],"type":"emphasis"},{"text":" if neither is ordered before the other","type":"text"},{"text":" ","type":"text"},{"text":"according to the predicate. If ","type":"text"},{"code":"a","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"b","type":"codeVoice"},{"text":" are incomparable, and ","type":"text"},{"code":"b","type":"codeVoice"},{"text":" ","type":"text"},{"text":"and ","type":"text"},{"code":"c","type":"codeVoice"},{"text":" are incomparable, then ","type":"text"},{"code":"a","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"c","type":"codeVoice"},{"text":" are also incomparable.","type":"text"},{"text":" ","type":"text"},{"text":"(Transitive incomparability)","type":"text"}]}]}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"This example shows how to use the "},{"code":"minAndMax(by:)","type":"codeVoice"},{"type":"text","text":" method on a dictionary"},{"type":"text","text":" "},{"type":"text","text":"to find the key-value pair with the lowest value and the pair with the"},{"type":"text","text":" "},{"type":"text","text":"highest value."}]},{"code":["let hues = [\"Heliotrope\": 296, \"Coral\": 16, \"Aquamarine\": 156]","if let extremeHues = hues.minAndMax(by: {$0.value < $1.value}) {","    print(extremeHues.min, extremeHues.max)","} else {","    print(\"There are no hues\")","}","\/\/ Prints: \"(key: \"Coral\", value: 16) (key: \"Heliotrope\", value: 296)\""],"type":"codeListing","syntax":null},{"type":"aside","style":"note","name":"Precondition","content":[{"type":"paragraph","inlineContent":[{"text":"The sequence is finite.","type":"text"}]}]},{"type":"aside","style":"note","name":"Complexity","content":[{"inlineContent":[{"type":"text","text":"O("},{"type":"emphasis","inlineContent":[{"type":"text","text":"n"}]},{"type":"text","text":"), where "},{"type":"emphasis","inlineContent":[{"text":"n","type":"text"}]},{"type":"text","text":" is the length of the sequence."}],"type":"paragraph"}]}],"kind":"content"}],"variants":[{"paths":["\/documentation\/algorithms\/exclusivereductionssequence\/minandmax(by:)"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms","doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/ExclusiveReductionsSequence","doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/ExclusiveReductionsSequence\/Sequence-Implementations"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/ExclusiveReductionsSequence\/minAndMax(by:)"},"abstract":[{"type":"text","text":"Returns both the minimum and maximum elements in the sequence, using the"},{"type":"text","text":" "},{"type":"text","text":"given predicate as the comparison between elements."}],"kind":"symbol","metadata":{"symbolKind":"method","extendedModule":"Swift","roleHeading":"Instance Method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"minAndMax"},{"kind":"text","text":"("},{"kind":"externalParam","text":"by"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":", "},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"rethrows","kind":"keyword"},{"text":" -> (min","kind":"text"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":", max","kind":"text"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":")?","kind":"text"}],"role":"symbol","title":"minAndMax(by:)","externalID":"s:ST10AlgorithmsE9minAndMax2by7ElementQz0B0_AE3maxtSgSbAE_AEtKXE_tKF::SYNTHESIZED::s:10Algorithms27ExclusiveReductionsSequenceV","modules":[{"name":"Algorithms"}]},"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"references":{"doc://co.pointfree.VaporRouting/documentation/Algorithms":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms","role":"collection","kind":"symbol","type":"topic","abstract":[],"title":"Algorithms","url":"\/documentation\/algorithms"},"doc://co.pointfree.VaporRouting/documentation/Algorithms/ExclusiveReductionsSequence/Sequence-Implementations":{"abstract":[],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/ExclusiveReductionsSequence\/Sequence-Implementations","title":"Sequence Implementations","url":"\/documentation\/algorithms\/exclusivereductionssequence\/sequence-implementations","role":"collectionGroup","type":"topic","kind":"article"},"doc://co.pointfree.VaporRouting/documentation/Algorithms/ExclusiveReductionsSequence":{"kind":"symbol","title":"ExclusiveReductionsSequence","role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/ExclusiveReductionsSequence","url":"\/documentation\/algorithms\/exclusivereductionssequence","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ExclusiveReductionsSequence","kind":"identifier"}],"abstract":[{"text":"A sequence of applying a transform to the element of a sequence and the","type":"text"},{"text":" ","type":"text"},{"text":"previously transformed result.","type":"text"}],"navigatorTitle":[{"text":"ExclusiveReductionsSequence","kind":"identifier"}]},"doc://co.pointfree.VaporRouting/documentation/Algorithms/ExclusiveReductionsSequence/minAndMax(by:)":{"type":"topic","url":"\/documentation\/algorithms\/exclusivereductionssequence\/minandmax(by:)","role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/ExclusiveReductionsSequence\/minAndMax(by:)","title":"minAndMax(by:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"minAndMax"},{"kind":"text","text":"("},{"kind":"externalParam","text":"by"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"rethrows","kind":"keyword"},{"text":" -> (min","kind":"text"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":", max","kind":"text"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":")?","kind":"text"}],"abstract":[{"type":"text","text":"Returns both the minimum and maximum elements in the sequence, using the"},{"type":"text","text":" "},{"type":"text","text":"given predicate as the comparison between elements."}],"kind":"symbol"}}}