{"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms","doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/ExclusiveReductionsSequence","doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/ExclusiveReductionsSequence\/Collection-Implementations"]]},"abstract":[{"text":"Returns a collection of combinations of this collection’s elements, with","type":"text"},{"text":" ","type":"text"},{"text":"each combination having the specified number of elements.","type":"text"}],"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"combinations","kind":"identifier"},{"text":"<","kind":"text"},{"text":"R","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"ofCount","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"kRange","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"R","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"CombinationsSequence","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/CombinationsSequence","kind":"typeIdentifier","preciseIdentifier":"s:10Algorithms20CombinationsSequenceV"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":"> ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"R"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","text":"RangeExpression","preciseIdentifier":"s:SX"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"R"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Bound"},{"kind":"text","text":" == "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"}],"platforms":["Linux"]}],"kind":"declarations"},{"parameters":[{"name":"kRange","content":[{"type":"paragraph","inlineContent":[{"text":"The range of numbers of elements to include in each","type":"text"},{"text":" ","type":"text"},{"text":"combination.","type":"text"}]}]}],"kind":"parameters"},{"content":[{"level":2,"type":"heading","anchor":"discussion","text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This example prints the different combinations of 1 and 2 from an array of"},{"type":"text","text":" "},{"type":"text","text":"four colors:"}]},{"syntax":null,"type":"codeListing","code":["let colors = [\"fuchsia\", \"cyan\", \"mauve\", \"magenta\"]","for combo in colors.combinations(ofCount: 1...2) {","    print(combo.joined(separator: \", \"))","}","\/\/ fuchsia","\/\/ cyan","\/\/ mauve","\/\/ magenta","\/\/ fuchsia, cyan","\/\/ fuchsia, mauve","\/\/ fuchsia, magenta","\/\/ cyan, mauve","\/\/ cyan, magenta","\/\/ mauve, magenta"]},{"type":"paragraph","inlineContent":[{"text":"The returned collection presents combinations in a consistent order, where","type":"text"},{"text":" ","type":"text"},{"text":"the indices in each combination are in ascending lexicographical order.","type":"text"},{"text":" ","type":"text"},{"text":"That is, in the example above, the combinations in order are the elements","type":"text"},{"text":" ","type":"text"},{"text":"at ","type":"text"},{"code":"[0]","type":"codeVoice"},{"text":", ","type":"text"},{"code":"[1]","type":"codeVoice"},{"text":", ","type":"text"},{"code":"[2]","type":"codeVoice"},{"text":", ","type":"text"},{"code":"[3]","type":"codeVoice"},{"text":", ","type":"text"},{"code":"[0, 1]","type":"codeVoice"},{"text":", ","type":"text"},{"code":"[0, 2]","type":"codeVoice"},{"text":", ","type":"text"},{"code":"[0, 3]","type":"codeVoice"},{"text":", ","type":"text"},{"code":"[1, 2]","type":"codeVoice"},{"text":",","type":"text"},{"text":" ","type":"text"},{"code":"[1, 3]","type":"codeVoice"},{"text":", and finally ","type":"text"},{"code":"[2, 3]","type":"codeVoice"},{"text":".","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"This example prints ","type":"text"},{"inlineContent":[{"type":"text","text":"all"}],"type":"emphasis"},{"text":" the combinations (including an empty array and","type":"text"},{"text":" ","type":"text"},{"text":"the original collection) from an array of numbers:","type":"text"}]},{"syntax":null,"type":"codeListing","code":["let numbers = [10, 20, 30, 40]","for combo in numbers.combinations(ofCount: 0...) {","    print(combo)","}","\/\/ []","\/\/ [10]","\/\/ [20]","\/\/ [30]","\/\/ [40]","\/\/ [10, 20]","\/\/ [10, 30]","\/\/ [10, 40]","\/\/ [20, 30]","\/\/ [20, 40]","\/\/ [30, 40]","\/\/ [10, 20, 30]","\/\/ [10, 20, 40]","\/\/ [10, 30, 40]","\/\/ [20, 30, 40]","\/\/ [10, 20, 30, 40]"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"If "},{"type":"codeVoice","code":"kRange"},{"type":"text","text":" is "},{"type":"codeVoice","code":"0...0"},{"type":"text","text":", the resulting sequence has exactly one element, an"},{"type":"text","text":" "},{"type":"text","text":"empty array. The given range is limited to "},{"type":"codeVoice","code":"0...base.count"},{"type":"text","text":". If the"},{"type":"text","text":" "},{"type":"text","text":"limited range is empty, the resulting sequence has no elements."}]},{"name":"Complexity","content":[{"inlineContent":[{"type":"text","text":"O(1) for random-access base collections. O("},{"type":"emphasis","inlineContent":[{"type":"text","text":"n"}]},{"type":"text","text":") where "},{"type":"emphasis","inlineContent":[{"text":"n","type":"text"}]},{"type":"text","text":" "},{"type":"text","text":"is the number of elements in the base collection, since"},{"type":"text","text":" "},{"type":"codeVoice","code":"CombinationsSequence"},{"type":"text","text":" accesses the "},{"type":"codeVoice","code":"count"},{"type":"text","text":" of the base collection."}],"type":"paragraph"}],"type":"aside","style":"note"}],"kind":"content"}],"kind":"symbol","schemaVersion":{"patch":0,"minor":3,"major":0},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/ExclusiveReductionsSequence\/combinations(ofCount:)-4jfs0"},"sections":[],"metadata":{"title":"combinations(ofCount:)","externalID":"s:Sl10AlgorithmsE12combinations7ofCountAA20CombinationsSequenceVyxGqd___tSXRd__Si5BoundRtd__lF::SYNTHESIZED::s:10Algorithms27ExclusiveReductionsSequenceV","modules":[{"name":"Algorithms"}],"symbolKind":"method","role":"symbol","roleHeading":"Instance Method","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"combinations","kind":"identifier"},{"text":"<","kind":"text"},{"text":"R","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"ofCount","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"R","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"CombinationsSequence","kind":"typeIdentifier","preciseIdentifier":"s:10Algorithms20CombinationsSequenceV"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":">","kind":"text"}],"extendedModule":"Swift"},"variants":[{"paths":["\/documentation\/algorithms\/exclusivereductionssequence\/combinations(ofcount:)-4jfs0"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://co.pointfree.VaporRouting/documentation/Algorithms/CombinationsSequence":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"CombinationsSequence"}],"kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/CombinationsSequence","title":"CombinationsSequence","navigatorTitle":[{"kind":"identifier","text":"CombinationsSequence"}],"url":"\/documentation\/algorithms\/combinationssequence","type":"topic","abstract":[{"text":"A collection wrapper that generates combinations of a base collection.","type":"text"}],"role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/Algorithms/ExclusiveReductionsSequence/combinations(ofCount:)-4jfs0":{"abstract":[{"type":"text","text":"Returns a collection of combinations of this collection’s elements, with"},{"type":"text","text":" "},{"type":"text","text":"each combination having the specified number of elements."}],"title":"combinations(ofCount:)","role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/ExclusiveReductionsSequence\/combinations(ofCount:)-4jfs0","kind":"symbol","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"combinations","kind":"identifier"},{"text":"<","kind":"text"},{"text":"R","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"ofCount","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"R","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:10Algorithms20CombinationsSequenceV","text":"CombinationsSequence","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":">","kind":"text"}],"url":"\/documentation\/algorithms\/exclusivereductionssequence\/combinations(ofcount:)-4jfs0"},"doc://co.pointfree.VaporRouting/documentation/Algorithms":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms","role":"collection","kind":"symbol","type":"topic","abstract":[],"title":"Algorithms","url":"\/documentation\/algorithms"},"doc://co.pointfree.VaporRouting/documentation/Algorithms/ExclusiveReductionsSequence/Collection-Implementations":{"role":"collectionGroup","url":"\/documentation\/algorithms\/exclusivereductionssequence\/collection-implementations","type":"topic","kind":"article","abstract":[],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/ExclusiveReductionsSequence\/Collection-Implementations","title":"Collection Implementations"},"doc://co.pointfree.VaporRouting/documentation/Algorithms/ExclusiveReductionsSequence":{"kind":"symbol","title":"ExclusiveReductionsSequence","role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/ExclusiveReductionsSequence","url":"\/documentation\/algorithms\/exclusivereductionssequence","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ExclusiveReductionsSequence","kind":"identifier"}],"abstract":[{"text":"A sequence of applying a transform to the element of a sequence and the","type":"text"},{"text":" ","type":"text"},{"text":"previously transformed result.","type":"text"}],"navigatorTitle":[{"text":"ExclusiveReductionsSequence","kind":"identifier"}]}}}