{"kind":"symbol","identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/StridingCollection\/combinations(ofCount:)","interfaceLanguage":"swift"},"metadata":{"modules":[{"name":"Algorithms"}],"extendedModule":"Swift","role":"symbol","externalID":"s:Sl10AlgorithmsE12combinations7ofCountAA20CombinationsSequenceVyxGSi_tF::SYNTHESIZED::s:10Algorithms18StridingCollectionV","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"combinations"},{"kind":"text","text":"("},{"kind":"externalParam","text":"ofCount"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"CombinationsSequence","preciseIdentifier":"s:10Algorithms20CombinationsSequenceV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":">"}],"title":"combinations(ofCount:)","roleHeading":"Instance Method","symbolKind":"method"},"schemaVersion":{"major":0,"patch":0,"minor":3},"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms","doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/StridingCollection","doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/StridingCollection\/Collection-Implementations"]]},"abstract":[{"text":"Returns a collection of combinations of this collection’s elements, with","type":"text"},{"text":" ","type":"text"},{"text":"each combination having the specified number of elements.","type":"text"}],"sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/algorithms\/stridingcollection\/combinations(ofcount:)"]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["Linux"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"combinations","kind":"identifier"},{"text":"(","kind":"text"},{"text":"ofCount","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"k","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"Int","preciseIdentifier":"s:Si","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"CombinationsSequence","preciseIdentifier":"s:10Algorithms20CombinationsSequenceV","kind":"typeIdentifier","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/CombinationsSequence"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":">"}]}]},{"kind":"parameters","parameters":[{"name":"k","content":[{"type":"paragraph","inlineContent":[{"text":"The number of elements to include in each combination.","type":"text"}]}]}]},{"content":[{"level":2,"anchor":"discussion","text":"Discussion","type":"heading"},{"inlineContent":[{"type":"text","text":"This example prints the different combinations of three from an array of"},{"type":"text","text":" "},{"type":"text","text":"four colors:"}],"type":"paragraph"},{"code":["let colors = [\"fuchsia\", \"cyan\", \"mauve\", \"magenta\"]","for combo in colors.combinations(ofCount: 3) {","    print(combo.joined(separator: \", \"))","}","\/\/ fuchsia, cyan, mauve","\/\/ fuchsia, cyan, magenta","\/\/ fuchsia, mauve, magenta","\/\/ cyan, mauve, magenta"],"syntax":null,"type":"codeListing"},{"inlineContent":[{"text":"The returned collection presents combinations in a consistent order, where","type":"text"},{"text":" ","type":"text"},{"text":"the indices in each combination are in ascending lexicographical order.","type":"text"},{"text":" ","type":"text"},{"text":"That is, in the example above, the combinations in order are the elements","type":"text"},{"text":" ","type":"text"},{"text":"at ","type":"text"},{"code":"[0, 1, 2]","type":"codeVoice"},{"text":", ","type":"text"},{"code":"[0, 1, 3]","type":"codeVoice"},{"text":", ","type":"text"},{"code":"[0, 2, 3]","type":"codeVoice"},{"text":", and finally ","type":"text"},{"code":"[1, 2, 3]","type":"codeVoice"},{"text":".","type":"text"}],"type":"paragraph"},{"inlineContent":[{"text":"If ","type":"text"},{"type":"codeVoice","code":"k"},{"text":" is zero, the resulting sequence has exactly one element, an empty","type":"text"},{"text":" ","type":"text"},{"text":"array. If ","type":"text"},{"type":"codeVoice","code":"k"},{"text":" is greater than the number of elements in this sequence,","type":"text"},{"text":" ","type":"text"},{"text":"the resulting sequence has no elements.","type":"text"}],"type":"paragraph"},{"style":"note","type":"aside","name":"Complexity","content":[{"inlineContent":[{"type":"text","text":"O(1) for random-access base collections. O("},{"type":"emphasis","inlineContent":[{"text":"n","type":"text"}]},{"type":"text","text":") where "},{"type":"emphasis","inlineContent":[{"type":"text","text":"n"}]},{"type":"text","text":" "},{"type":"text","text":"is the number of elements in the base collection, since"},{"type":"text","text":" "},{"type":"codeVoice","code":"CombinationsSequence"},{"type":"text","text":" accesses the "},{"type":"codeVoice","code":"count"},{"type":"text","text":" of the base collection."}],"type":"paragraph"}]}],"kind":"content"}],"references":{"doc://co.pointfree.VaporRouting/documentation/Algorithms/StridingCollection/Collection-Implementations":{"kind":"article","title":"Collection Implementations","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/StridingCollection\/Collection-Implementations","abstract":[],"url":"\/documentation\/algorithms\/stridingcollection\/collection-implementations","role":"collectionGroup","type":"topic"},"doc://co.pointfree.VaporRouting/documentation/Algorithms":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms","role":"collection","kind":"symbol","type":"topic","abstract":[],"title":"Algorithms","url":"\/documentation\/algorithms"},"doc://co.pointfree.VaporRouting/documentation/Algorithms/StridingCollection/combinations(ofCount:)":{"abstract":[{"type":"text","text":"Returns a collection of combinations of this collection’s elements, with"},{"type":"text","text":" "},{"type":"text","text":"each combination having the specified number of elements."}],"type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"combinations"},{"kind":"text","text":"("},{"kind":"externalParam","text":"ofCount"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"CombinationsSequence","preciseIdentifier":"s:10Algorithms20CombinationsSequenceV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":">"}],"kind":"symbol","role":"symbol","title":"combinations(ofCount:)","url":"\/documentation\/algorithms\/stridingcollection\/combinations(ofcount:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/StridingCollection\/combinations(ofCount:)"},"doc://co.pointfree.VaporRouting/documentation/Algorithms/CombinationsSequence":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"CombinationsSequence"}],"kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/CombinationsSequence","title":"CombinationsSequence","navigatorTitle":[{"kind":"identifier","text":"CombinationsSequence"}],"url":"\/documentation\/algorithms\/combinationssequence","type":"topic","abstract":[{"text":"A collection wrapper that generates combinations of a base collection.","type":"text"}],"role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/Algorithms/StridingCollection":{"kind":"symbol","title":"StridingCollection","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/StridingCollection","abstract":[{"text":"A wrapper that strides over a base collection.","type":"text"}],"url":"\/documentation\/algorithms\/stridingcollection","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"StridingCollection","kind":"identifier"}],"type":"topic","navigatorTitle":[{"text":"StridingCollection","kind":"identifier"}]}}}