{"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms","doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/ChunksOfCountCollection","doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/ChunksOfCountCollection\/BidirectionalCollection-Implementations"]]},"abstract":[{"text":"Returns a ","type":"text"},{"type":"codeVoice","code":"SubSequence"},{"text":" formed by discarding all elements at the start and","type":"text"},{"text":" ","type":"text"},{"text":"end of the collection which satisfy the given predicate.","type":"text"}],"primaryContentSections":[{"declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"trimming"},{"kind":"text","text":"("},{"kind":"externalParam","text":"while"},{"kind":"text","text":" "},{"kind":"internalParam","text":"predicate"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"},{"kind":"text","text":") "},{"text":"rethrows","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"SubSequence","kind":"typeIdentifier"}]}],"kind":"declarations"},{"parameters":[{"name":"predicate","content":[{"inlineContent":[{"type":"text","text":"A closure which determines if the element should be"},{"type":"text","text":" "},{"type":"text","text":"omitted from the resulting slice."}],"type":"paragraph"}]}],"kind":"parameters"},{"content":[{"type":"heading","level":2,"text":"Discussion","anchor":"discussion"},{"type":"paragraph","inlineContent":[{"text":"This example uses ","type":"text"},{"type":"codeVoice","code":"trimming(while:)"},{"text":" to get a substring without the white","type":"text"},{"text":" ","type":"text"},{"text":"space at the beginning and end of the string:","type":"text"}]},{"type":"codeListing","syntax":null,"code":["let myString = \"  hello, world  \"","print(myString.trimming(while: \\.isWhitespace)) \/\/ \"hello, world\""]},{"type":"aside","name":"Complexity","content":[{"inlineContent":[{"type":"text","text":"O("},{"type":"emphasis","inlineContent":[{"type":"text","text":"n"}]},{"type":"text","text":"), where "},{"type":"emphasis","inlineContent":[{"type":"text","text":"n"}]},{"type":"text","text":" is the length of this collection."}],"type":"paragraph"}],"style":"note"}],"kind":"content"}],"schemaVersion":{"major":0,"minor":3,"patch":0},"metadata":{"externalID":"s:SK10AlgorithmsE8trimming5while11SubSequenceQzSb7ElementQzKXE_tKF::SYNTHESIZED::s:10Algorithms23ChunksOfCountCollectionV","modules":[{"name":"Algorithms"}],"roleHeading":"Instance Method","title":"trimming(while:)","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"trimming"},{"text":"(","kind":"text"},{"text":"while","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"text":") ","kind":"text"},{"text":"rethrows","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"SubSequence","kind":"typeIdentifier"}],"extendedModule":"Swift","symbolKind":"method"},"sections":[],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/ChunksOfCountCollection\/trimming(while:)"},"kind":"symbol","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/algorithms\/chunksofcountcollection\/trimming(while:)"]}],"references":{"doc://co.pointfree.VaporRouting/documentation/Algorithms/ChunksOfCountCollection":{"type":"topic","navigatorTitle":[{"text":"ChunksOfCountCollection","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/ChunksOfCountCollection","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ChunksOfCountCollection","kind":"identifier"}],"url":"\/documentation\/algorithms\/chunksofcountcollection","title":"ChunksOfCountCollection","abstract":[{"type":"text","text":"A collection that presents the elements of its base collection in"},{"type":"text","text":" "},{"type":"codeVoice","code":"SubSequence"},{"type":"text","text":" chunks of any given count."}],"kind":"symbol","role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/Algorithms/ChunksOfCountCollection/BidirectionalCollection-Implementations":{"abstract":[],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/ChunksOfCountCollection\/BidirectionalCollection-Implementations","role":"collectionGroup","title":"BidirectionalCollection Implementations","type":"topic","url":"\/documentation\/algorithms\/chunksofcountcollection\/bidirectionalcollection-implementations","kind":"article"},"doc://co.pointfree.VaporRouting/documentation/Algorithms":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms","role":"collection","kind":"symbol","type":"topic","abstract":[],"title":"Algorithms","url":"\/documentation\/algorithms"},"doc://co.pointfree.VaporRouting/documentation/Algorithms/ChunksOfCountCollection/trimming(while:)":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/ChunksOfCountCollection\/trimming(while:)","title":"trimming(while:)","kind":"symbol","role":"symbol","url":"\/documentation\/algorithms\/chunksofcountcollection\/trimming(while:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"trimming","kind":"identifier"},{"text":"(","kind":"text"},{"text":"while","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"text":") ","kind":"text"},{"text":"rethrows","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"SubSequence","kind":"typeIdentifier"}],"abstract":[{"text":"Returns a ","type":"text"},{"type":"codeVoice","code":"SubSequence"},{"text":" formed by discarding all elements at the start and","type":"text"},{"text":" ","type":"text"},{"text":"end of the collection which satisfy the given predicate.","type":"text"}],"type":"topic"}}}