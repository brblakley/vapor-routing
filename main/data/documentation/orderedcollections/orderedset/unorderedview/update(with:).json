{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"mutating","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"update","kind":"identifier"},{"text":"(","kind":"text"},{"text":"with","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"newMember","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"languages":["swift"],"platforms":["Linux"]}]},{"kind":"parameters","parameters":[{"name":"newMember","content":[{"inlineContent":[{"type":"text","text":"An element to insert into the set."}],"type":"paragraph"}]}]},{"kind":"content","content":[{"anchor":"return-value","type":"heading","level":2,"text":"Return Value"},{"inlineContent":[{"text":"The original member equal to ","type":"text"},{"type":"codeVoice","code":"newMember"},{"text":" if the set already","type":"text"},{"text":" ","type":"text"},{"text":"contained such a member; otherwise, ","type":"text"},{"type":"codeVoice","code":"nil"},{"text":". In some cases, the returned","type":"text"},{"text":" ","type":"text"},{"text":"element may be distinguishable from ","type":"text"},{"type":"codeVoice","code":"newMember"},{"text":" by identity comparison","type":"text"},{"text":" ","type":"text"},{"text":"or some other means.","type":"text"}],"type":"paragraph"}]},{"kind":"content","content":[{"anchor":"discussion","type":"heading","level":2,"text":"Discussion"},{"inlineContent":[{"text":"If an element equal to ","type":"text"},{"type":"codeVoice","code":"newMember"},{"text":" is already contained in the set,","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"newMember"},{"text":" replaces the existing element.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"text":"If ","type":"text"},{"code":"newMember","type":"codeVoice"},{"text":" was not already a member, it gets appended to the end of","type":"text"},{"text":" ","type":"text"},{"text":"the underlying ordered set value.","type":"text"}],"type":"paragraph"},{"name":"Complexity","type":"aside","content":[{"inlineContent":[{"text":"This operation is expected to perform O(1)","type":"text"},{"text":" ","type":"text"},{"text":"hashing\/comparison operations on average (over many insertions to the","type":"text"},{"text":" ","type":"text"},{"text":"same set), provided that ","type":"text"},{"code":"Element","type":"codeVoice"},{"text":" implements high-quality hashing.","type":"text"}],"type":"paragraph"}],"style":"note"}]}],"metadata":{"symbolKind":"method","role":"symbol","externalID":"s:18OrderedCollections0A3SetV13UnorderedViewV6update4withxSgxn_tF","conformance":{"constraints":[{"code":"Element","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Hashable"},{"type":"text","text":"."}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"modules":[{"name":"OrderedCollections"}],"title":"update(with:)","roleHeading":"Instance Method","extendedModule":"OrderedCollections","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"update"},{"kind":"text","text":"("},{"kind":"externalParam","text":"with"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":"?"}]},"sections":[],"variants":[{"paths":["\/documentation\/orderedcollections\/orderedset\/unorderedview\/update(with:)"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/OrderedCollections","doc:\/\/co.pointfree.VaporRouting\/documentation\/OrderedCollections\/OrderedSet","doc:\/\/co.pointfree.VaporRouting\/documentation\/OrderedCollections\/OrderedSet\/UnorderedView","doc:\/\/co.pointfree.VaporRouting\/documentation\/OrderedCollections\/OrderedSet\/UnorderedView\/SetAlgebra-Implementations"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/OrderedCollections\/OrderedSet\/UnorderedView\/update(with:)"},"abstract":[{"text":"Inserts the given element into the set unconditionally.","type":"text"}],"kind":"symbol","schemaVersion":{"major":0,"patch":0,"minor":3},"references":{"doc://co.pointfree.VaporRouting/documentation/OrderedCollections/OrderedSet":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"OrderedSet","kind":"identifier"}],"url":"\/documentation\/orderedcollections\/orderedset","type":"topic","role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/OrderedCollections\/OrderedSet","title":"OrderedSet","navigatorTitle":[{"text":"OrderedSet","kind":"identifier"}],"abstract":[{"text":"An ordered collection of unique elements.","type":"text"}],"kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/OrderedCollections/OrderedSet/UnorderedView/update(with:)":{"abstract":[{"type":"text","text":"Inserts the given element into the set unconditionally."}],"conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"Element","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"Hashable","type":"codeVoice"},{"type":"text","text":"."}]},"url":"\/documentation\/orderedcollections\/orderedset\/unorderedview\/update(with:)","type":"topic","title":"update(with:)","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"update"},{"kind":"text","text":"("},{"kind":"externalParam","text":"with"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":"?"}],"role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/OrderedCollections\/OrderedSet\/UnorderedView\/update(with:)"},"doc://co.pointfree.VaporRouting/documentation/OrderedCollections/OrderedSet/UnorderedView/SetAlgebra-Implementations":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/OrderedCollections\/OrderedSet\/UnorderedView\/SetAlgebra-Implementations","title":"SetAlgebra Implementations","kind":"article","role":"collectionGroup","abstract":[],"url":"\/documentation\/orderedcollections\/orderedset\/unorderedview\/setalgebra-implementations","type":"topic"},"doc://co.pointfree.VaporRouting/documentation/OrderedCollections/OrderedSet/UnorderedView":{"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"UnorderedView"}],"url":"\/documentation\/orderedcollections\/orderedset\/unorderedview","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/OrderedCollections\/OrderedSet\/UnorderedView","type":"topic","abstract":[{"text":"An unordered view into an ordered set, providing ","type":"text"},{"type":"codeVoice","code":"SetAlgebra"},{"type":"text","text":" "},{"type":"text","text":"conformance."}],"conformance":{"constraints":[{"code":"Element","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"Hashable","type":"codeVoice"},{"type":"text","text":"."}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"title":"OrderedSet.UnorderedView","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"UnorderedView"}],"kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/OrderedCollections":{"url":"\/documentation\/orderedcollections","type":"topic","role":"collection","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/OrderedCollections","title":"OrderedCollections","abstract":[],"kind":"symbol"}}}