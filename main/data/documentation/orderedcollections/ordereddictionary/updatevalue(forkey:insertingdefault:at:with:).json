{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/orderedcollections\/ordereddictionary\/updatevalue(forkey:insertingdefault:at:with:)"]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/OrderedCollections\/OrderedDictionary\/updateValue(forKey:insertingDefault:at:with:)"},"kind":"symbol","schemaVersion":{"patch":0,"minor":3,"major":0},"abstract":[{"type":"text","text":"Ensures that the specified key exists in the dictionary (by inserting one"},{"type":"text","text":" "},{"type":"text","text":"with the specified index and default value if necessary), then calls"},{"type":"text","text":" "},{"type":"codeVoice","code":"body"},{"type":"text","text":" to update it in place."}],"metadata":{"conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"Key","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"Hashable","type":"codeVoice"},{"type":"text","text":"."}]},"roleHeading":"Instance Method","extendedModule":"OrderedCollections","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"updateValue","kind":"identifier"},{"text":"<","kind":"text"},{"text":"R","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"forKey","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Key","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"insertingDefault","kind":"externalParam"},{"text":": () -> ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"at","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"text":", ","kind":"text"},{"text":"with","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"R","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"rethrows","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"R","kind":"typeIdentifier"}],"symbolKind":"method","modules":[{"name":"OrderedCollections"}],"role":"symbol","externalID":"s:18OrderedCollections0A10DictionaryV11updateValue6forKey16insertingDefault2at4withqd__x_q_yXKSiqd__q_zKXEtKlF","title":"updateValue(forKey:insertingDefault:at:with:)"},"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/OrderedCollections","doc:\/\/co.pointfree.VaporRouting\/documentation\/OrderedCollections\/OrderedDictionary"]]},"primaryContentSections":[{"declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"mutating"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"updateValue"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"R"},{"kind":"text","text":">("},{"kind":"externalParam","text":"forKey"},{"kind":"text","text":" "},{"kind":"internalParam","text":"key"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Key"},{"kind":"text","text":", "},{"kind":"externalParam","text":"insertingDefault"},{"kind":"text","text":" "},{"kind":"internalParam","text":"defaultValue"},{"kind":"text","text":": "},{"kind":"attribute","text":"@autoclosure "},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":", "},{"kind":"externalParam","text":"at"},{"kind":"text","text":" "},{"kind":"internalParam","text":"index"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":", "},{"kind":"externalParam","text":"with"},{"kind":"text","text":" "},{"kind":"internalParam","text":"body"},{"kind":"text","text":": ("},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"R"},{"kind":"text","text":") "},{"kind":"keyword","text":"rethrows"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"R"}]}],"kind":"declarations"},{"parameters":[{"content":[{"type":"paragraph","inlineContent":[{"text":"The key to look up (or append). If ","type":"text"},{"type":"codeVoice","code":"key"},{"text":" does not already exist","type":"text"},{"text":" ","type":"text"},{"text":"in the dictionary, it is appended with the supplied default value.","type":"text"}]}],"name":"key"},{"content":[{"inlineContent":[{"type":"text","text":"The default value to append if "},{"code":"key","type":"codeVoice"},{"type":"text","text":" doesnâ€™t exist in"},{"type":"text","text":" "},{"type":"text","text":"the dictionary."}],"type":"paragraph"}],"name":"defaultValue"},{"content":[{"inlineContent":[{"text":"A function that performs an in-place mutation on the dictionary","type":"text"},{"text":" ","type":"text"},{"text":"value.","type":"text"}],"type":"paragraph"}],"name":"body"}],"kind":"parameters"},{"kind":"content","content":[{"level":2,"anchor":"return-value","text":"Return Value","type":"heading"},{"inlineContent":[{"type":"text","text":"The return value of "},{"type":"codeVoice","code":"body"},{"type":"text","text":"."}],"type":"paragraph"}]},{"kind":"content","content":[{"level":2,"type":"heading","anchor":"discussion","text":"Discussion"},{"inlineContent":[{"text":"You can use this method to perform in-place operations on values in the","type":"text"},{"text":" ","type":"text"},{"text":"dictionary, whether or not ","type":"text"},{"code":"Value","type":"codeVoice"},{"text":" has value semantics. The following","type":"text"},{"text":" ","type":"text"},{"text":"example uses this method while counting the occurrences of each letter","type":"text"},{"text":" ","type":"text"},{"text":"in a string:","type":"text"}],"type":"paragraph"},{"type":"codeListing","code":["let message = \"Hello, Elle!\"","var letterCounts: [Character: Int] = [:]","for letter in message {","    letterCounts.updateValue(forKey: letter, default: 0) { count in","        count += 1","    }","}","\/\/ letterCounts == [\"H\": 1, \"e\": 2, \"l\": 4, \"o\": 1, ...]"],"syntax":null},{"type":"aside","content":[{"type":"paragraph","inlineContent":[{"text":"expected complexity is amortized O(1), if ","type":"text"},{"type":"codeVoice","code":"Key"},{"text":" implements","type":"text"},{"text":" ","type":"text"},{"text":"high-quality hashing. (Ignoring the complexity of calling ","type":"text"},{"type":"codeVoice","code":"body"},{"text":".)","type":"text"}]}],"style":"note","name":"Complexity"}]}],"sections":[],"references":{"doc://co.pointfree.VaporRouting/documentation/OrderedCollections":{"url":"\/documentation\/orderedcollections","type":"topic","role":"collection","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/OrderedCollections","title":"OrderedCollections","abstract":[],"kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/OrderedCollections/OrderedDictionary":{"title":"OrderedDictionary","kind":"symbol","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"OrderedDictionary","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/OrderedCollections\/OrderedDictionary","role":"symbol","navigatorTitle":[{"text":"OrderedDictionary","kind":"identifier"}],"url":"\/documentation\/orderedcollections\/ordereddictionary","abstract":[{"type":"text","text":"An ordered collection of key-value pairs."}]},"doc://co.pointfree.VaporRouting/documentation/OrderedCollections/OrderedDictionary/updateValue(forKey:insertingDefault:at:with:)":{"type":"topic","title":"updateValue(forKey:insertingDefault:at:with:)","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"updateValue","kind":"identifier"},{"text":"<","kind":"text"},{"text":"R","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"forKey","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Key","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"insertingDefault","kind":"externalParam"},{"text":": () -> ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"at","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"with","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"R","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"rethrows","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"R","kind":"typeIdentifier"}],"kind":"symbol","abstract":[{"text":"Ensures that the specified key exists in the dictionary (by inserting one","type":"text"},{"text":" ","type":"text"},{"text":"with the specified index and default value if necessary), then calls","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"body"},{"text":" to update it in place.","type":"text"}],"url":"\/documentation\/orderedcollections\/ordereddictionary\/updatevalue(forkey:insertingdefault:at:with:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/OrderedCollections\/OrderedDictionary\/updateValue(forKey:insertingDefault:at:with:)","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Key"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Hashable"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}]}}}}