{"primaryContentSections":[{"declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"text":"mutating","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"updateValue","kind":"identifier"},{"text":"<","kind":"text"},{"text":"R","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"forKey","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"key","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"Key","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"default","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"defaultValue","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"@autoclosure ","kind":"attribute"},{"text":"() -> ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"with","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"body","kind":"internalParam"},{"text":": (","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"R","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"rethrows","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"R","kind":"typeIdentifier"}]}],"kind":"declarations"},{"parameters":[{"content":[{"type":"paragraph","inlineContent":[{"text":"The key to look up (or append). If ","type":"text"},{"code":"key","type":"codeVoice"},{"text":" does not already exist","type":"text"},{"text":" ","type":"text"},{"text":"in the dictionary, it is appended with the supplied default value.","type":"text"}]}],"name":"key"},{"content":[{"inlineContent":[{"type":"text","text":"The default value to append if "},{"code":"key","type":"codeVoice"},{"type":"text","text":" doesnâ€™t exist in"},{"type":"text","text":" "},{"type":"text","text":"the dictionary."}],"type":"paragraph"}],"name":"defaultValue"},{"content":[{"inlineContent":[{"type":"text","text":"A function that performs an in-place mutation on the dictionary"},{"type":"text","text":" "},{"type":"text","text":"value."}],"type":"paragraph"}],"name":"body"}],"kind":"parameters"},{"kind":"content","content":[{"anchor":"return-value","type":"heading","level":2,"text":"Return Value"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The return value of "},{"type":"codeVoice","code":"body"},{"type":"text","text":"."}]}]},{"kind":"content","content":[{"anchor":"discussion","type":"heading","level":2,"text":"Discussion"},{"inlineContent":[{"type":"text","text":"You can use this method to perform in-place operations on values in the"},{"type":"text","text":" "},{"type":"text","text":"dictionary, whether or not "},{"type":"codeVoice","code":"Value"},{"type":"text","text":" has value semantics. The following"},{"type":"text","text":" "},{"type":"text","text":"example uses this method while counting the occurrences of each letter"},{"type":"text","text":" "},{"type":"text","text":"in a string:"}],"type":"paragraph"},{"code":["let message = \"Hello, Elle!\"","var letterCounts: [Character: Int] = [:]","for letter in message {","    letterCounts.updateValue(forKey: letter, default: 0) { count in","        count += 1","    }","}","\/\/ letterCounts == [\"H\": 1, \"e\": 2, \"l\": 4, \"o\": 1, ...]"],"type":"codeListing","syntax":null},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"expected complexity is amortized O(1), if "},{"type":"codeVoice","code":"Key"},{"type":"text","text":" implements"},{"type":"text","text":" "},{"type":"text","text":"high-quality hashing. (Ignoring the complexity of calling "},{"type":"codeVoice","code":"body"},{"type":"text","text":".)"}]}],"type":"aside","name":"Complexity","style":"note"}]}],"metadata":{"title":"updateValue(forKey:default:with:)","extendedModule":"OrderedCollections","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"updateValue","kind":"identifier"},{"text":"<","kind":"text"},{"text":"R","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"forKey","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Key","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"default","kind":"externalParam"},{"kind":"text","text":": () -> "},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":", "},{"kind":"externalParam","text":"with"},{"kind":"text","text":": ("},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"R"},{"kind":"text","text":") "},{"kind":"keyword","text":"rethrows"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"R"}],"role":"symbol","externalID":"s:18OrderedCollections0A10DictionaryV11updateValue6forKey7default4withqd__x_q_yXKqd__q_zKXEtKlF","conformance":{"constraints":[{"type":"codeVoice","code":"Key"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Hashable"},{"text":".","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"modules":[{"name":"OrderedCollections"}],"roleHeading":"Instance Method","symbolKind":"method"},"abstract":[{"type":"text","text":"Ensures that the specified key exists in the dictionary (by appending one"},{"type":"text","text":" "},{"type":"text","text":"with the supplied default value if necessary), then calls "},{"code":"body","type":"codeVoice"},{"type":"text","text":" to update"},{"text":" ","type":"text"},{"text":"it in place.","type":"text"}],"kind":"symbol","identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/OrderedCollections\/OrderedDictionary\/updateValue(forKey:default:with:)"},"sections":[],"schemaVersion":{"major":0,"minor":3,"patch":0},"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/OrderedCollections","doc:\/\/co.pointfree.VaporRouting\/documentation\/OrderedCollections\/OrderedDictionary"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/orderedcollections\/ordereddictionary\/updatevalue(forkey:default:with:)"]}],"references":{"doc://co.pointfree.VaporRouting/documentation/OrderedCollections/OrderedDictionary":{"title":"OrderedDictionary","kind":"symbol","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"OrderedDictionary","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/OrderedCollections\/OrderedDictionary","role":"symbol","navigatorTitle":[{"text":"OrderedDictionary","kind":"identifier"}],"url":"\/documentation\/orderedcollections\/ordereddictionary","abstract":[{"type":"text","text":"An ordered collection of key-value pairs."}]},"doc://co.pointfree.VaporRouting/documentation/OrderedCollections":{"url":"\/documentation\/orderedcollections","type":"topic","role":"collection","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/OrderedCollections","title":"OrderedCollections","abstract":[],"kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/OrderedCollections/OrderedDictionary/updateValue(forKey:default:with:)":{"abstract":[{"text":"Ensures that the specified key exists in the dictionary (by appending one","type":"text"},{"type":"text","text":" "},{"type":"text","text":"with the supplied default value if necessary), then calls "},{"code":"body","type":"codeVoice"},{"type":"text","text":" to update"},{"type":"text","text":" "},{"type":"text","text":"it in place."}],"role":"symbol","title":"updateValue(forKey:default:with:)","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Key"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Hashable"},{"type":"text","text":"."}]},"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"updateValue"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"R"},{"text":">(","kind":"text"},{"text":"forKey","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Key","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"default","kind":"externalParam"},{"text":": () -> ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"with","kind":"externalParam"},{"text":": (","kind":"text"},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"R"},{"kind":"text","text":") "},{"kind":"keyword","text":"rethrows"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"R"}],"url":"\/documentation\/orderedcollections\/ordereddictionary\/updatevalue(forkey:default:with:)","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/OrderedCollections\/OrderedDictionary\/updateValue(forKey:default:with:)","kind":"symbol"}}}