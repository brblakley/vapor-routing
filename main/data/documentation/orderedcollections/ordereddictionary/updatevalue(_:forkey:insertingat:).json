{"schemaVersion":{"patch":0,"major":0,"minor":3},"sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/orderedcollections\/ordereddictionary\/updatevalue(_:forkey:insertingat:)"]}],"abstract":[{"text":"Updates the value stored in the dictionary for the given key, or inserts a","type":"text"},{"text":" ","type":"text"},{"text":"new key-value pair at the specified index if the key does not exist.","type":"text"}],"metadata":{"roleHeading":"Instance Method","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"updateValue","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"forKey","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Key","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"insertingAt","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Int","preciseIdentifier":"s:Si","kind":"typeIdentifier"},{"text":") -> (originalMember","kind":"text"},{"text":": ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":"?, index","kind":"text"},{"text":": ","kind":"text"},{"text":"Int","preciseIdentifier":"s:Si","kind":"typeIdentifier"},{"text":")","kind":"text"}],"title":"updateValue(_:forKey:insertingAt:)","symbolKind":"method","externalID":"s:18OrderedCollections0A10DictionaryV11updateValue_6forKey11insertingAtq_Sg14originalMember_Si5indextq__xSitF","role":"symbol","modules":[{"name":"OrderedCollections"}],"conformance":{"constraints":[{"type":"codeVoice","code":"Key"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Hashable"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"extendedModule":"OrderedCollections"},"kind":"symbol","hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/OrderedCollections","doc:\/\/co.pointfree.VaporRouting\/documentation\/OrderedCollections\/OrderedDictionary"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"kind":"attribute","text":"@discardableResult"},{"kind":"text","text":" "},{"kind":"keyword","text":"mutating"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"updateValue"},{"kind":"text","text":"("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"value"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":", "},{"kind":"externalParam","text":"forKey"},{"kind":"text","text":" "},{"kind":"internalParam","text":"key"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Key"},{"kind":"text","text":", "},{"kind":"externalParam","text":"insertingAt"},{"kind":"text","text":" "},{"kind":"internalParam","text":"index"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Si","kind":"typeIdentifier","text":"Int"},{"kind":"text","text":") -> (originalMember"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":"?, index"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Si","kind":"typeIdentifier","text":"Int"},{"kind":"text","text":")"}],"platforms":["Linux"]}]},{"kind":"parameters","parameters":[{"content":[{"inlineContent":[{"text":"The new value to add to the dictionary.","type":"text"}],"type":"paragraph"}],"name":"value"},{"content":[{"inlineContent":[{"type":"text","text":"The key to associate with "},{"type":"codeVoice","code":"value"},{"type":"text","text":". If "},{"type":"codeVoice","code":"key"},{"type":"text","text":" already exists in"},{"type":"text","text":" "},{"type":"text","text":"the dictionary, "},{"type":"codeVoice","code":"value"},{"type":"text","text":" replaces the existing associated value. If"},{"type":"text","text":" "},{"type":"codeVoice","code":"key"},{"type":"text","text":" isn’t already a key of the dictionary, the "},{"type":"codeVoice","code":"(key, value)"},{"type":"text","text":" pair"},{"type":"text","text":" "},{"type":"text","text":"is inserted."}],"type":"paragraph"}],"name":"key"},{"content":[{"type":"paragraph","inlineContent":[{"text":"The index at which to insert the key, if it doesn’t already","type":"text"},{"text":" ","type":"text"},{"text":"exist.","type":"text"}]}],"name":"index"}]},{"kind":"content","content":[{"type":"heading","anchor":"return-value","level":2,"text":"Return Value"},{"inlineContent":[{"type":"text","text":"A pair "},{"type":"codeVoice","code":"(old, index)"},{"type":"text","text":", where "},{"type":"codeVoice","code":"old"},{"type":"text","text":" is the value that was"},{"type":"text","text":" "},{"type":"text","text":"replaced, or "},{"type":"codeVoice","code":"nil"},{"type":"text","text":" if a new key-value pair was added, and "},{"type":"codeVoice","code":"index"},{"type":"text","text":" "},{"type":"text","text":"is the index corresponding to the updated (or inserted) value."}],"type":"paragraph"}]},{"kind":"content","content":[{"anchor":"discussion","level":2,"type":"heading","text":"Discussion"},{"inlineContent":[{"text":"Use this method instead of key-based subscripting when you need to insert","type":"text"},{"text":" ","type":"text"},{"text":"new keys at a particular index. You can use the return value to","type":"text"},{"text":" ","type":"text"},{"text":"determine whether or not the new value supplanted the value of an existing","type":"text"},{"text":" ","type":"text"},{"text":"key.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"If the value of an existing key is updated,"},{"type":"text","text":" "},{"type":"codeVoice","code":"updateValue(_:forKey:insertingAt:)"},{"type":"text","text":" returns the original value and its"},{"type":"text","text":" "},{"type":"text","text":"index."}],"type":"paragraph"},{"code":["var hues: OrderedDictionary = [","    \"Heliotrope\": 296,","    \"Coral\": 16,","    \"Aquamarine\": 156]","let newIndex = hues.startIndex","let (old, index) =","    hues.updateValue(18, forKey: \"Coral\", insertingAt: newIndex)","if let old = old {","    print(\"The value '\\(old)' at offset \\(index.offset) was replaced.\")","}","\/\/ Prints \"The value '16' at offset 1 was replaced.\""],"syntax":null,"type":"codeListing"},{"inlineContent":[{"text":"If the given key is not present in the dictionary, this method inserts the","type":"text"},{"text":" ","type":"text"},{"text":"key-value pair at the specified index and returns ","type":"text"},{"code":"nil","type":"codeVoice"},{"text":".","type":"text"}],"type":"paragraph"},{"code":["let (old, index) =","    hues.updateValue(330, forKey: \"Cerise\", insertingAt: newIndex)","if let old = old {","    print(\"The value '\\(old)' at offset \\(index.offset) was replaced.\")","} else {","    print(\"A new value was inserted at offset \\(index.offset).\")","}","\/\/ Prints \"A new value was inserted at offset 0.\")"],"syntax":null,"type":"codeListing"},{"name":"Complexity","style":"note","content":[{"inlineContent":[{"text":"O(","type":"text"},{"code":"count","type":"codeVoice"},{"text":")","type":"text"}],"type":"paragraph"}],"type":"aside"}]}],"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/OrderedCollections\/OrderedDictionary\/updateValue(_:forKey:insertingAt:)","interfaceLanguage":"swift"},"references":{"doc://co.pointfree.VaporRouting/documentation/OrderedCollections/OrderedDictionary/updateValue(_:forKey:insertingAt:)":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"updateValue","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"forKey","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Key"},{"kind":"text","text":", "},{"kind":"externalParam","text":"insertingAt"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Si","kind":"typeIdentifier","text":"Int"},{"kind":"text","text":") -> (originalMember"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":"?, index"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Si","kind":"typeIdentifier","text":"Int"},{"kind":"text","text":")"}],"role":"symbol","title":"updateValue(_:forKey:insertingAt:)","type":"topic","abstract":[{"type":"text","text":"Updates the value stored in the dictionary for the given key, or inserts a"},{"type":"text","text":" "},{"type":"text","text":"new key-value pair at the specified index if the key does not exist."}],"kind":"symbol","url":"\/documentation\/orderedcollections\/ordereddictionary\/updatevalue(_:forkey:insertingat:)","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"code":"Key","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Hashable","type":"codeVoice"},{"text":".","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/OrderedCollections\/OrderedDictionary\/updateValue(_:forKey:insertingAt:)"},"doc://co.pointfree.VaporRouting/documentation/OrderedCollections":{"url":"\/documentation\/orderedcollections","type":"topic","role":"collection","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/OrderedCollections","title":"OrderedCollections","abstract":[],"kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/OrderedCollections/OrderedDictionary":{"title":"OrderedDictionary","kind":"symbol","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"OrderedDictionary","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/OrderedCollections\/OrderedDictionary","role":"symbol","navigatorTitle":[{"text":"OrderedDictionary","kind":"identifier"}],"url":"\/documentation\/orderedcollections\/ordereddictionary","abstract":[{"type":"text","text":"An ordered collection of key-value pairs."}]}}}