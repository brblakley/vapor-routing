{"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"tokens":[{"kind":"attribute","text":"@discardableResult"},{"kind":"text","text":" "},{"kind":"keyword","text":"mutating"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"updateValue"},{"kind":"text","text":"("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"value"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":", "},{"kind":"externalParam","text":"forKey"},{"kind":"text","text":" "},{"kind":"internalParam","text":"key"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Key"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":"?"}],"languages":["swift"]}]},{"kind":"parameters","parameters":[{"content":[{"inlineContent":[{"text":"The new value to add to the dictionary.","type":"text"}],"type":"paragraph"}],"name":"value"},{"content":[{"inlineContent":[{"text":"The key to associate with ","type":"text"},{"type":"codeVoice","code":"value"},{"text":". If ","type":"text"},{"type":"codeVoice","code":"key"},{"text":" already exists in","type":"text"},{"text":" ","type":"text"},{"text":"the dictionary, ","type":"text"},{"type":"codeVoice","code":"value"},{"text":" replaces the existing associated value. If","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"key"},{"text":" isnâ€™t already a key of the dictionary, the ","type":"text"},{"type":"codeVoice","code":"(key, value)"},{"text":" pair","type":"text"},{"text":" ","type":"text"},{"text":"is added.","type":"text"}],"type":"paragraph"}],"name":"key"}]},{"content":[{"type":"heading","text":"Return Value","anchor":"return-value","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"The value that was replaced, or "},{"code":"nil","type":"codeVoice"},{"type":"text","text":" if a new key-value pair"},{"type":"text","text":" "},{"type":"text","text":"was added."}]}],"kind":"content"},{"content":[{"anchor":"discussion","type":"heading","level":2,"text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Use this method instead of key-based subscripting when you need to know"},{"type":"text","text":" "},{"type":"text","text":"whether the new value supplants the value of an existing key. If the"},{"type":"text","text":" "},{"type":"text","text":"value of an existing key is updated, "},{"code":"updateValue(_:forKey:)","type":"codeVoice"},{"type":"text","text":" returns"},{"type":"text","text":" "},{"type":"text","text":"the original value."}]},{"syntax":null,"code":["var hues: OrderedDictionary = [","    \"Heliotrope\": 296,","    \"Coral\": 16,","    \"Aquamarine\": 156]","","if let oldValue = hues.updateValue(18, forKey: \"Coral\") {","    print(\"The old value of \\(oldValue) was replaced with a new one.\")","}","\/\/ Prints \"The old value of 16 was replaced with a new one.\""],"type":"codeListing"},{"type":"paragraph","inlineContent":[{"type":"text","text":"If the given key is not present in the dictionary, this method appends the"},{"type":"text","text":" "},{"type":"text","text":"key-value pair and returns "},{"type":"codeVoice","code":"nil"},{"type":"text","text":"."}]},{"syntax":null,"code":["if let oldValue = hues.updateValue(330, forKey: \"Cerise\") {","    print(\"The old value of \\(oldValue) was replaced with a new one.\")","} else {","    print(\"No value was found in the dictionary for that key.\")","}","\/\/ Prints \"No value was found in the dictionary for that key.\""],"type":"codeListing"},{"style":"note","type":"aside","content":[{"inlineContent":[{"type":"text","text":"expected complexity is amortized O(1), if "},{"code":"Key","type":"codeVoice"},{"type":"text","text":" implements"},{"type":"text","text":" "},{"type":"text","text":"high-quality hashing."}],"type":"paragraph"}],"name":"Complexity"}],"kind":"content"}],"metadata":{"externalID":"s:18OrderedCollections0A10DictionaryV11updateValue_6forKeyq_Sgq__xtF","title":"updateValue(_:forKey:)","roleHeading":"Instance Method","modules":[{"name":"OrderedCollections"}],"conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"code":"Key","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Hashable"},{"type":"text","text":"."}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"symbolKind":"method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"updateValue"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":", "},{"kind":"externalParam","text":"forKey"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Key"},{"kind":"text","text":") -> "},{"text":"Value","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"extendedModule":"OrderedCollections","role":"symbol"},"kind":"symbol","identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/OrderedCollections\/OrderedDictionary\/updateValue(_:forKey:)"},"abstract":[{"type":"text","text":"Updates the value stored in the dictionary for the given key, or appends a"},{"type":"text","text":" "},{"type":"text","text":"new key-value pair if the key does not exist."}],"sections":[],"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/OrderedCollections","doc:\/\/co.pointfree.VaporRouting\/documentation\/OrderedCollections\/OrderedDictionary"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/orderedcollections\/ordereddictionary\/updatevalue(_:forkey:)"]}],"schemaVersion":{"major":0,"patch":0,"minor":3},"references":{"doc://co.pointfree.VaporRouting/documentation/OrderedCollections/OrderedDictionary/updateValue(_:forKey:)":{"abstract":[{"type":"text","text":"Updates the value stored in the dictionary for the given key, or appends a"},{"type":"text","text":" "},{"type":"text","text":"new key-value pair if the key does not exist."}],"role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"updateValue"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":", "},{"kind":"externalParam","text":"forKey"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Key"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":"?"}],"kind":"symbol","title":"updateValue(_:forKey:)","conformance":{"constraints":[{"type":"codeVoice","code":"Key"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Hashable"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"url":"\/documentation\/orderedcollections\/ordereddictionary\/updatevalue(_:forkey:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/OrderedCollections\/OrderedDictionary\/updateValue(_:forKey:)"},"doc://co.pointfree.VaporRouting/documentation/OrderedCollections":{"url":"\/documentation\/orderedcollections","type":"topic","role":"collection","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/OrderedCollections","title":"OrderedCollections","abstract":[],"kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/OrderedCollections/OrderedDictionary":{"title":"OrderedDictionary","kind":"symbol","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"OrderedDictionary","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/OrderedCollections\/OrderedDictionary","role":"symbol","navigatorTitle":[{"text":"OrderedDictionary","kind":"identifier"}],"url":"\/documentation\/orderedcollections\/ordereddictionary","abstract":[{"type":"text","text":"An ordered collection of key-value pairs."}]}}}