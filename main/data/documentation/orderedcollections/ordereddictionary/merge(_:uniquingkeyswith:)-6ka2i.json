{"schemaVersion":{"minor":3,"major":0,"patch":0},"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/OrderedCollections","doc:\/\/co.pointfree.VaporRouting\/documentation\/OrderedCollections\/OrderedDictionary"]]},"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/OrderedCollections\/OrderedDictionary\/merge(_:uniquingKeysWith:)-6ka2i","interfaceLanguage":"swift"},"kind":"symbol","sections":[],"abstract":[{"text":"Merges the key-value pairs in the given sequence into the dictionary,","type":"text"},{"text":" ","type":"text"},{"text":"using a combining closure to determine the value for any duplicate keys.","type":"text"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/orderedcollections\/ordereddictionary\/merge(_:uniquingkeyswith:)-6ka2i"]}],"metadata":{"symbolKind":"method","roleHeading":"Instance Method","extendedModule":"OrderedCollections","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"merge"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"S"},{"text":">(","kind":"text"},{"text":"S","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"uniquingKeysWith","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"rethrows","kind":"keyword"}],"externalID":"s:18OrderedCollections0A10DictionaryV5merge_16uniquingKeysWithyqd__n_q_q__q_tKXEtKSTRd__x_q_t7ElementRtd__lF","role":"symbol","title":"merge(_:uniquingKeysWith:)","modules":[{"name":"OrderedCollections"}],"conformance":{"constraints":[{"type":"codeVoice","code":"Key"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Hashable"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]}},"primaryContentSections":[{"declarations":[{"platforms":["Linux"],"tokens":[{"kind":"keyword","text":"mutating"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"merge"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"S"},{"kind":"text","text":">("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"keysAndValues"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"S"},{"kind":"text","text":", "},{"kind":"externalParam","text":"uniquingKeysWith"},{"kind":"text","text":" "},{"kind":"internalParam","text":"combine"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":") "},{"kind":"keyword","text":"rethrows"},{"kind":"text","text":" "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"S"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:ST","text":"Sequence"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"S"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":" == ("},{"kind":"typeIdentifier","text":"Key"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":")"}],"languages":["swift"]}],"kind":"declarations"},{"parameters":[{"content":[{"inlineContent":[{"text":"A sequence of key-value pairs.","type":"text"}],"type":"paragraph"}],"name":"keysAndValues"},{"content":[{"inlineContent":[{"type":"text","text":"A closure that takes the current and new values for any"},{"type":"text","text":" "},{"type":"text","text":"duplicate keys. The closure returns the desired value for the final"},{"type":"text","text":" "},{"type":"text","text":"dictionary."}],"type":"paragraph"}],"name":"combine"}],"kind":"parameters"},{"content":[{"anchor":"discussion","type":"heading","text":"Discussion","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"Use the "},{"code":"combine","type":"codeVoice"},{"type":"text","text":" closure to select a value to use in the updated"},{"type":"text","text":" "},{"type":"text","text":"dictionary, or to combine existing and new values. As the key-value"},{"type":"text","text":" "},{"type":"text","text":"pairs are merged with the dictionary, the "},{"code":"combine","type":"codeVoice"},{"type":"text","text":" closure is called"},{"type":"text","text":" "},{"type":"text","text":"with the current and new values for any duplicate keys that are"},{"type":"text","text":" "},{"type":"text","text":"encountered."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"This example shows how to choose the current or new values for any"},{"type":"text","text":" "},{"type":"text","text":"duplicate keys:"}]},{"code":["var dictionary: OrderedDictionary = [\"a\": 1, \"b\": 2]","","\/\/ Keeping existing value for key \"a\":","dictionary.merge(zip([\"a\", \"c\"], [3, 4])) { (current, _) in current }","\/\/ [\"a\": 1, \"b\": 2, \"c\": 4]","","\/\/ Taking the new value for key \"a\":","dictionary.merge(zip([\"a\", \"d\"], [5, 6])) { (_, new) in new }","\/\/ [\"a\": 5, \"b\": 2, \"c\": 4, \"d\": 6]"],"type":"codeListing","syntax":null},{"type":"paragraph","inlineContent":[{"type":"text","text":"This operation preserves the order of keys in the original dictionary."},{"type":"text","text":" "},{"type":"text","text":"New key-value pairs are appended to the end in the order they appear in"},{"type":"text","text":" "},{"type":"text","text":"the given sequence."}]},{"style":"note","name":"Complexity","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Expected to be O("},{"inlineContent":[{"text":"n","type":"text"}],"type":"emphasis"},{"type":"text","text":") on average, where "},{"inlineContent":[{"type":"text","text":"n"}],"type":"emphasis"},{"type":"text","text":" is the number of"},{"type":"text","text":" "},{"type":"text","text":"elements in "},{"type":"codeVoice","code":"keysAndValues"},{"type":"text","text":", if "},{"type":"codeVoice","code":"Key"},{"type":"text","text":" implements high-quality hashing."}]}],"type":"aside"}],"kind":"content"}],"references":{"doc://co.pointfree.VaporRouting/documentation/OrderedCollections/OrderedDictionary/merge(_:uniquingKeysWith:)-6ka2i":{"abstract":[{"type":"text","text":"Merges the key-value pairs in the given sequence into the dictionary,"},{"type":"text","text":" "},{"text":"using a combining closure to determine the value for any duplicate keys.","type":"text"}],"title":"merge(_:uniquingKeysWith:)","kind":"symbol","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/OrderedCollections\/OrderedDictionary\/merge(_:uniquingKeysWith:)-6ka2i","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"merge","kind":"identifier"},{"text":"<","kind":"text"},{"text":"S","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"S","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"uniquingKeysWith","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"rethrows","kind":"keyword"}],"conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Key"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Hashable"},{"text":".","type":"text"}]},"url":"\/documentation\/orderedcollections\/ordereddictionary\/merge(_:uniquingkeyswith:)-6ka2i","role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/OrderedCollections":{"url":"\/documentation\/orderedcollections","type":"topic","role":"collection","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/OrderedCollections","title":"OrderedCollections","abstract":[],"kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/OrderedCollections/OrderedDictionary":{"title":"OrderedDictionary","kind":"symbol","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"OrderedDictionary","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/OrderedCollections\/OrderedDictionary","role":"symbol","navigatorTitle":[{"text":"OrderedDictionary","kind":"identifier"}],"url":"\/documentation\/orderedcollections\/ordereddictionary","abstract":[{"type":"text","text":"An ordered collection of key-value pairs."}]}}}