{"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/DequeModule\/Deque\/init(arrayLiteral:)","interfaceLanguage":"swift"},"abstract":[{"text":"Creates a new deque from the contents of an array literal.","type":"text"}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/DequeModule","doc:\/\/co.pointfree.VaporRouting\/documentation\/DequeModule\/Deque","doc:\/\/co.pointfree.VaporRouting\/documentation\/DequeModule\/Deque\/ExpressibleByArrayLiteral-Implementations"]]},"schemaVersion":{"minor":3,"major":0,"patch":0},"kind":"symbol","primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"arrayLiteral"},{"kind":"text","text":" "},{"kind":"internalParam","text":"elements"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":"...)"}],"languages":["swift"],"platforms":["Linux"]}],"kind":"declarations"},{"parameters":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A variadic list of elements of the new deque."}]}],"name":"elements"}],"kind":"parameters"},{"content":[{"text":"Discussion","level":2,"anchor":"discussion","type":"heading"},{"type":"paragraph","inlineContent":[{"text":"Do not call this initializer directly. It is used by the compiler when","type":"text"},{"text":" ","type":"text"},{"text":"you use an array literal. Instead, create a new deque using an array","type":"text"},{"text":" ","type":"text"},{"text":"literal as its value by enclosing a comma-separated list of values in","type":"text"},{"text":" ","type":"text"},{"text":"square brackets. You can use an array literal anywhere a deque is expected","type":"text"},{"text":" ","type":"text"},{"text":"by the type context.","type":"text"}]}],"kind":"content"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/dequemodule\/deque\/init(arrayliteral:)"]}],"sections":[],"metadata":{"extendedModule":"DequeModule","title":"init(arrayLiteral:)","roleHeading":"Initializer","modules":[{"name":"DequeModule"}],"symbolKind":"init","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"arrayLiteral","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":"...)"}],"role":"symbol","externalID":"s:11DequeModule0A0V12arrayLiteralACyxGxd_tcfc"},"references":{"doc://co.pointfree.VaporRouting/documentation/DequeModule/Deque":{"type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Deque","kind":"identifier"}],"url":"\/documentation\/dequemodule\/deque","title":"Deque","kind":"symbol","abstract":[{"text":"A collection implementing a double-ended queue. ","type":"text"},{"code":"Deque","type":"codeVoice"},{"text":" (pronounced “deck”)","type":"text"},{"text":" ","type":"text"},{"text":"implements an ordered random-access collection that supports efficient","type":"text"},{"text":" ","type":"text"},{"text":"insertions and removals from both ends.","type":"text"}],"navigatorTitle":[{"text":"Deque","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/DequeModule\/Deque","role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/DequeModule":{"type":"topic","url":"\/documentation\/dequemodule","title":"DequeModule","kind":"symbol","abstract":[],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/DequeModule","role":"collection"},"doc://co.pointfree.VaporRouting/documentation/DequeModule/Deque/ExpressibleByArrayLiteral-Implementations":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/DequeModule\/Deque\/ExpressibleByArrayLiteral-Implementations","abstract":[],"kind":"article","type":"topic","role":"collectionGroup","url":"\/documentation\/dequemodule\/deque\/expressiblebyarrayliteral-implementations","title":"ExpressibleByArrayLiteral Implementations"},"doc://co.pointfree.VaporRouting/documentation/DequeModule/Deque/init(arrayLiteral:)":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/DequeModule\/Deque\/init(arrayLiteral:)","abstract":[{"text":"Creates a new deque from the contents of an array literal.","type":"text"}],"kind":"symbol","type":"topic","role":"symbol","url":"\/documentation\/dequemodule\/deque\/init(arrayliteral:)","title":"init(arrayLiteral:)","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"arrayLiteral","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":"...)","kind":"text"}]}}}