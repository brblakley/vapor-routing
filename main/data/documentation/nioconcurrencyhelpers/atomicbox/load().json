{"variants":[{"paths":["\/documentation\/nioconcurrencyhelpers\/atomicbox\/load()"],"traits":[{"interfaceLanguage":"swift"}]}],"abstract":[{"text":"Atomically loads and returns the value of this object.","type":"text"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOConcurrencyHelpers\/AtomicBox\/load()"},"primaryContentSections":[{"declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"load","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"}],"languages":["swift"],"platforms":["Linux"]}],"kind":"declarations"},{"content":[{"anchor":"return-value","type":"heading","level":2,"text":"Return Value"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The value of this object"}]}],"kind":"content"},{"content":[{"type":"heading","level":2,"anchor":"discussion","text":"Discussion"},{"type":"paragraph","inlineContent":[{"text":"This implementation uses a ","type":"text"},{"inlineContent":[{"type":"text","text":"relaxed"}],"type":"emphasis"},{"text":" memory ordering. This guarantees nothing","type":"text"},{"text":" ","type":"text"},{"text":"more than that this operation is atomic: there is no guarantee that any other","type":"text"},{"text":" ","type":"text"},{"text":"event will be ordered before or after this one.","type":"text"}]},{"name":"Warning","type":"aside","content":[{"type":"paragraph","inlineContent":[{"text":"The implementation of ","type":"text"},{"code":"exchange","type":"codeVoice"},{"text":" contains a ","type":"text"},{"inlineContent":[{"text":"Compare and Exchange loop","type":"text"}],"type":"emphasis"},{"text":", ie. it may busy wait with","type":"text"},{"text":" ","type":"text"},{"text":"100% CPU load.","type":"text"}]}],"style":"warning"}],"kind":"content"}],"metadata":{"platforms":[],"title":"load()","role":"symbol","symbolKind":"method","modules":[{"name":"NIOConcurrencyHelpers"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"load","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"}],"roleHeading":"Instance Method","externalID":"s:21NIOConcurrencyHelpers9AtomicBoxC4loadxyF"},"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOConcurrencyHelpers","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOConcurrencyHelpers\/AtomicBox"]]},"sections":[],"deprecationSummary":[{"type":"paragraph","inlineContent":[{"text":"AtomicBox is deprecated without replacement because the original implementation doesn't work.","type":"text"}]}],"kind":"symbol","schemaVersion":{"major":0,"patch":0,"minor":3},"references":{"doc://co.pointfree.VaporRouting/documentation/NIOConcurrencyHelpers/AtomicBox":{"role":"symbol","url":"\/documentation\/nioconcurrencyhelpers\/atomicbox","kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOConcurrencyHelpers\/AtomicBox","navigatorTitle":[{"text":"AtomicBox","kind":"identifier"}],"title":"AtomicBox","abstract":[{"code":"AtomicBox","type":"codeVoice"},{"type":"text","text":" is a heap-allocated box which allows lock-free access to an instance of a Swift class."}],"fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"AtomicBox","kind":"identifier"}],"deprecated":true,"type":"topic"},"doc://co.pointfree.VaporRouting/documentation/NIOConcurrencyHelpers":{"url":"\/documentation\/nioconcurrencyhelpers","kind":"symbol","type":"topic","abstract":[],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOConcurrencyHelpers","title":"NIOConcurrencyHelpers","role":"collection"},"doc://co.pointfree.VaporRouting/documentation/NIOConcurrencyHelpers/AtomicBox/load()":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOConcurrencyHelpers\/AtomicBox\/load()","abstract":[{"text":"Atomically loads and returns the value of this object.","type":"text"}],"kind":"symbol","deprecated":true,"type":"topic","title":"load()","url":"\/documentation\/nioconcurrencyhelpers\/atomicbox\/load()","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"load"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"T"}]}}}