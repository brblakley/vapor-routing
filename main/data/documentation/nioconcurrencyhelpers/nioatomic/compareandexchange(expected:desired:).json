{"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOConcurrencyHelpers\/NIOAtomic\/compareAndExchange(expected:desired:)","interfaceLanguage":"swift"},"sections":[],"kind":"symbol","schemaVersion":{"patch":0,"major":0,"minor":3},"metadata":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"compareAndExchange","kind":"identifier"},{"text":"(","kind":"text"},{"text":"expected","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"desired","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}],"platforms":[],"modules":[{"name":"NIOConcurrencyHelpers"}],"externalID":"s:21NIOConcurrencyHelpers9NIOAtomicC18compareAndExchange8expected7desiredSbx_xtF","title":"compareAndExchange(expected:desired:)","symbolKind":"method","roleHeading":"Instance Method","role":"symbol"},"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOConcurrencyHelpers","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOConcurrencyHelpers\/NIOAtomic"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"compareAndExchange","kind":"identifier"},{"text":"(","kind":"text"},{"text":"expected","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"desired","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}],"platforms":["Linux"],"languages":["swift"]}]},{"parameters":[{"name":"expected","content":[{"inlineContent":[{"type":"text","text":"The value that this object must currently hold for the"},{"type":"text","text":" "},{"type":"text","text":"compare-and-swap to succeed."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The new value that this object will hold if the compare"},{"type":"text","text":" "},{"type":"text","text":"succeeds."}]}],"name":"desired"}],"kind":"parameters"},{"kind":"content","content":[{"level":2,"type":"heading","anchor":"return-value","text":"Return Value"},{"type":"paragraph","inlineContent":[{"type":"text","text":""},{"code":"True","type":"codeVoice"},{"type":"text","text":" if the exchange occurred, or "},{"code":"False","type":"codeVoice"},{"type":"text","text":" if "},{"code":"expected","type":"codeVoice"},{"type":"text","text":" did not"},{"type":"text","text":" "},{"type":"text","text":"match the current value and so no exchange occurred."}]}]},{"kind":"content","content":[{"type":"heading","text":"Discussion","level":2,"anchor":"discussion"},{"inlineContent":[{"type":"text","text":"This implementation conforms to C11’s "},{"type":"codeVoice","code":"atomic_compare_exchange_strong"},{"type":"text","text":". This"},{"type":"text","text":" "},{"type":"text","text":"means that the compare-and-swap will always succeed if "},{"type":"codeVoice","code":"expected"},{"type":"text","text":" is equal to"},{"type":"text","text":" "},{"type":"text","text":"value. Additionally, it uses a "},{"type":"emphasis","inlineContent":[{"text":"sequentially consistent ordering","type":"text"}]},{"type":"text","text":". For more"},{"type":"text","text":" "},{"type":"text","text":"details on atomic memory models, check the documentation for C11’s"},{"type":"text","text":" "},{"type":"codeVoice","code":"stdatomic.h"},{"type":"text","text":"."}],"type":"paragraph"}]}],"deprecationSummary":[{"type":"paragraph","inlineContent":[{"type":"text","text":"please use ManagedAtomic from https:\/\/github.com\/apple\/swift-atomics instead"}]}],"abstract":[{"text":"Atomically compares the value against ","type":"text"},{"type":"codeVoice","code":"expected"},{"text":" and, if they are equal,","type":"text"},{"text":" ","type":"text"},{"text":"replaces the value with ","type":"text"},{"type":"codeVoice","code":"desired"},{"text":".","type":"text"}],"variants":[{"paths":["\/documentation\/nioconcurrencyhelpers\/nioatomic\/compareandexchange(expected:desired:)"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://co.pointfree.VaporRouting/documentation/NIOConcurrencyHelpers":{"url":"\/documentation\/nioconcurrencyhelpers","kind":"symbol","type":"topic","abstract":[],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOConcurrencyHelpers","title":"NIOConcurrencyHelpers","role":"collection"},"doc://co.pointfree.VaporRouting/documentation/NIOConcurrencyHelpers/NIOAtomic/compareAndExchange(expected:desired:)":{"url":"\/documentation\/nioconcurrencyhelpers\/nioatomic\/compareandexchange(expected:desired:)","title":"compareAndExchange(expected:desired:)","abstract":[{"type":"text","text":"Atomically compares the value against "},{"code":"expected","type":"codeVoice"},{"type":"text","text":" and, if they are equal,"},{"type":"text","text":" "},{"type":"text","text":"replaces the value with "},{"code":"desired","type":"codeVoice"},{"type":"text","text":"."}],"role":"symbol","kind":"symbol","deprecated":true,"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOConcurrencyHelpers\/NIOAtomic\/compareAndExchange(expected:desired:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"compareAndExchange","kind":"identifier"},{"text":"(","kind":"text"},{"text":"expected","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"desired","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}]},"doc://co.pointfree.VaporRouting/documentation/NIOConcurrencyHelpers/NIOAtomic":{"navigatorTitle":[{"text":"NIOAtomic","kind":"identifier"}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"NIOAtomic","kind":"identifier"}],"abstract":[{"text":"An encapsulation of an atomic primitive object.","type":"text"}],"type":"topic","url":"\/documentation\/nioconcurrencyhelpers\/nioatomic","title":"NIOAtomic","role":"symbol","kind":"symbol","deprecated":true,"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOConcurrencyHelpers\/NIOAtomic"}}}