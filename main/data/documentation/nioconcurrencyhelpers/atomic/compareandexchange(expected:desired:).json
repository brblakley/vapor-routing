{"metadata":{"modules":[{"name":"NIOConcurrencyHelpers"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"compareAndExchange","kind":"identifier"},{"text":"(","kind":"text"},{"text":"expected","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"desired","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"platforms":[],"roleHeading":"Instance Method","role":"symbol","title":"compareAndExchange(expected:desired:)","externalID":"s:21NIOConcurrencyHelpers6AtomicC18compareAndExchange8expected7desiredSbx_xtF","symbolKind":"method"},"schemaVersion":{"patch":0,"major":0,"minor":3},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/nioconcurrencyhelpers\/atomic\/compareandexchange(expected:desired:)"]}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOConcurrencyHelpers","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOConcurrencyHelpers\/Atomic"]]},"deprecationSummary":[{"type":"paragraph","inlineContent":[{"text":"please use ManagedAtomic from https:\/\/github.com\/apple\/swift-atomics instead","type":"text"}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOConcurrencyHelpers\/Atomic\/compareAndExchange(expected:desired:)"},"kind":"symbol","sections":[],"abstract":[{"text":"Atomically compares the value against ","type":"text"},{"type":"codeVoice","code":"expected"},{"text":" and, if they are equal,","type":"text"},{"text":" ","type":"text"},{"text":"replaces the value with ","type":"text"},{"type":"codeVoice","code":"desired"},{"text":".","type":"text"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"compareAndExchange"},{"kind":"text","text":"("},{"kind":"externalParam","text":"expected"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"T"},{"text":", ","kind":"text"},{"text":"desired","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"languages":["swift"],"platforms":["Linux"]}]},{"kind":"parameters","parameters":[{"content":[{"inlineContent":[{"text":"The value that this object must currently hold for the","type":"text"},{"text":" ","type":"text"},{"text":"compare-and-swap to succeed.","type":"text"}],"type":"paragraph"}],"name":"expected"},{"content":[{"type":"paragraph","inlineContent":[{"text":"The new value that this object will hold if the compare","type":"text"},{"text":" ","type":"text"},{"text":"succeeds.","type":"text"}]}],"name":"desired"}]},{"kind":"content","content":[{"anchor":"return-value","level":2,"text":"Return Value","type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":""},{"code":"True","type":"codeVoice"},{"type":"text","text":" if the exchange occurred, or "},{"code":"False","type":"codeVoice"},{"type":"text","text":" if "},{"code":"expected","type":"codeVoice"},{"type":"text","text":" did not"},{"type":"text","text":" "},{"type":"text","text":"match the current value and so no exchange occurred."}]}]},{"kind":"content","content":[{"level":2,"anchor":"discussion","type":"heading","text":"Discussion"},{"inlineContent":[{"type":"text","text":"This implementation conforms to C11’s "},{"code":"atomic_compare_exchange_strong","type":"codeVoice"},{"type":"text","text":". This"},{"type":"text","text":" "},{"type":"text","text":"means that the compare-and-swap will always succeed if "},{"code":"expected","type":"codeVoice"},{"type":"text","text":" is equal to"},{"type":"text","text":" "},{"type":"text","text":"value. Additionally, it uses a "},{"type":"emphasis","inlineContent":[{"text":"sequentially consistent ordering","type":"text"}]},{"type":"text","text":". For more"},{"type":"text","text":" "},{"type":"text","text":"details on atomic memory models, check the documentation for C11’s"},{"type":"text","text":" "},{"code":"stdatomic.h","type":"codeVoice"},{"type":"text","text":"."}],"type":"paragraph"}]}],"references":{"doc://co.pointfree.VaporRouting/documentation/NIOConcurrencyHelpers/Atomic/compareAndExchange(expected:desired:)":{"url":"\/documentation\/nioconcurrencyhelpers\/atomic\/compareandexchange(expected:desired:)","role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOConcurrencyHelpers\/Atomic\/compareAndExchange(expected:desired:)","kind":"symbol","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"compareAndExchange"},{"kind":"text","text":"("},{"kind":"externalParam","text":"expected"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":", "},{"kind":"externalParam","text":"desired"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"}],"abstract":[{"text":"Atomically compares the value against ","type":"text"},{"type":"codeVoice","code":"expected"},{"text":" and, if they are equal,","type":"text"},{"text":" ","type":"text"},{"text":"replaces the value with ","type":"text"},{"type":"codeVoice","code":"desired"},{"text":".","type":"text"}],"title":"compareAndExchange(expected:desired:)","deprecated":true},"doc://co.pointfree.VaporRouting/documentation/NIOConcurrencyHelpers":{"url":"\/documentation\/nioconcurrencyhelpers","kind":"symbol","type":"topic","abstract":[],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOConcurrencyHelpers","title":"NIOConcurrencyHelpers","role":"collection"},"doc://co.pointfree.VaporRouting/documentation/NIOConcurrencyHelpers/Atomic":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOConcurrencyHelpers\/Atomic","role":"symbol","deprecated":true,"url":"\/documentation\/nioconcurrencyhelpers\/atomic","kind":"symbol","title":"Atomic","type":"topic","navigatorTitle":[{"text":"Atomic","kind":"identifier"}],"abstract":[{"text":"An encapsulation of an atomic primitive object.","type":"text"}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Atomic","kind":"identifier"}]}}}