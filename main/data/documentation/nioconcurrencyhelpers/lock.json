{"kind":"symbol","sections":[],"topicSections":[{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOConcurrencyHelpers\/Lock\/init()"],"title":"Initializers"},{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOConcurrencyHelpers\/Lock\/lock()","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOConcurrencyHelpers\/Lock\/unlock()","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOConcurrencyHelpers\/Lock\/withLock(_:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOConcurrencyHelpers\/Lock\/withLockVoid(_:)"],"title":"Instance Methods"}],"relationshipsSections":[{"kind":"relationships","identifiers":["doc:\/\/co.pointfree.VaporRouting\/s8SendableP"],"type":"conformsTo","title":"Conforms To"}],"metadata":{"role":"symbol","roleHeading":"Class","externalID":"s:21NIOConcurrencyHelpers4LockC","platforms":[],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Lock","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"Lock"}],"symbolKind":"class","modules":[{"name":"NIOConcurrencyHelpers"}],"title":"Lock"},"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"final"},{"kind":"text","text":" "},{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Lock"}],"platforms":["Linux"],"languages":["swift"]}],"kind":"declarations"},{"content":[{"text":"Overview","type":"heading","anchor":"overview","level":2},{"type":"paragraph","inlineContent":[{"text":"This object provides a lock on top of a single ","type":"text"},{"type":"codeVoice","code":"pthread_mutex_t"},{"text":". This kind","type":"text"},{"text":" ","type":"text"},{"text":"of lock is safe to use with ","type":"text"},{"type":"codeVoice","code":"libpthread"},{"text":"-based threading models, such as the","type":"text"},{"text":" ","type":"text"},{"text":"one used by NIO. On Windows, the lock is based on the substantially similar","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"SRWLOCK"},{"text":" type.","type":"text"}]}],"kind":"content"}],"abstract":[{"text":"A threading lock based on ","type":"text"},{"code":"libpthread","type":"codeVoice"},{"text":" instead of ","type":"text"},{"code":"libdispatch","type":"codeVoice"},{"text":".","type":"text"}],"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOConcurrencyHelpers\/Lock","interfaceLanguage":"swift"},"variants":[{"paths":["\/documentation\/nioconcurrencyhelpers\/lock"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOConcurrencyHelpers"]]},"schemaVersion":{"major":0,"patch":0,"minor":3},"references":{"doc://co.pointfree.VaporRouting/documentation/NIOConcurrencyHelpers/Lock/withLock(_:)":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOConcurrencyHelpers\/Lock\/withLock(_:)","url":"\/documentation\/nioconcurrencyhelpers\/lock\/withlock(_:)","abstract":[{"text":"Acquire the lock for the duration of the given block.","type":"text"}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"withLock"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">(() "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":") "},{"kind":"keyword","text":"rethrows"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"T"}],"deprecated":true,"type":"topic","role":"symbol","kind":"symbol","title":"withLock(_:)"},"doc://co.pointfree.VaporRouting/documentation/NIOConcurrencyHelpers/Lock/withLockVoid(_:)":{"type":"topic","kind":"symbol","deprecated":true,"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"withLockVoid","kind":"identifier"},{"text":"(() ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Void","preciseIdentifier":"s:s4Voida","kind":"typeIdentifier"},{"kind":"text","text":") "},{"kind":"keyword","text":"rethrows"}],"abstract":[],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOConcurrencyHelpers\/Lock\/withLockVoid(_:)","role":"symbol","url":"\/documentation\/nioconcurrencyhelpers\/lock\/withlockvoid(_:)","title":"withLockVoid(_:)"},"doc://co.pointfree.VaporRouting/s8SendableP":{"type":"unresolvable","identifier":"doc:\/\/co.pointfree.VaporRouting\/s8SendableP","title":"Swift.Sendable"},"doc://co.pointfree.VaporRouting/documentation/NIOConcurrencyHelpers/Lock/init()":{"fragments":[{"text":"init","kind":"identifier"},{"text":"()","kind":"text"}],"abstract":[{"type":"text","text":"Create a new lock."}],"type":"topic","title":"init()","url":"\/documentation\/nioconcurrencyhelpers\/lock\/init()","deprecated":true,"role":"symbol","kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOConcurrencyHelpers\/Lock\/init()"},"doc://co.pointfree.VaporRouting/documentation/NIOConcurrencyHelpers/Lock/unlock()":{"kind":"symbol","abstract":[{"type":"text","text":"Release the lock."}],"deprecated":true,"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOConcurrencyHelpers\/Lock\/unlock()","title":"unlock()","type":"topic","url":"\/documentation\/nioconcurrencyhelpers\/lock\/unlock()","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"unlock","kind":"identifier"},{"text":"()","kind":"text"}]},"doc://co.pointfree.VaporRouting/documentation/NIOConcurrencyHelpers":{"url":"\/documentation\/nioconcurrencyhelpers","kind":"symbol","type":"topic","abstract":[],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOConcurrencyHelpers","title":"NIOConcurrencyHelpers","role":"collection"},"doc://co.pointfree.VaporRouting/documentation/NIOConcurrencyHelpers/Lock/lock()":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOConcurrencyHelpers\/Lock\/lock()","abstract":[{"text":"Acquire the lock.","type":"text"}],"type":"topic","kind":"symbol","title":"lock()","url":"\/documentation\/nioconcurrencyhelpers\/lock\/lock()","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"lock"},{"kind":"text","text":"()"}],"deprecated":true},"doc://co.pointfree.VaporRouting/documentation/NIOConcurrencyHelpers/Lock":{"abstract":[{"type":"text","text":"A threading lock based on "},{"type":"codeVoice","code":"libpthread"},{"type":"text","text":" instead of "},{"type":"codeVoice","code":"libdispatch"},{"type":"text","text":"."}],"title":"Lock","type":"topic","role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOConcurrencyHelpers\/Lock","navigatorTitle":[{"text":"Lock","kind":"identifier"}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Lock","kind":"identifier"}],"url":"\/documentation\/nioconcurrencyhelpers\/lock","deprecated":true,"kind":"symbol"}}}