{"metadata":{"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"UnsafeEmbeddedAtomic"}],"roleHeading":"Structure","symbolKind":"struct","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"UnsafeEmbeddedAtomic"}],"title":"UnsafeEmbeddedAtomic","externalID":"s:21NIOConcurrencyHelpers20UnsafeEmbeddedAtomicV","platforms":[],"modules":[{"name":"NIOConcurrencyHelpers"}]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/nioconcurrencyhelpers\/unsafeembeddedatomic"]}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOConcurrencyHelpers"]]},"sections":[],"kind":"symbol","abstract":[{"text":"An atomic primitive object.","type":"text"}],"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOConcurrencyHelpers\/UnsafeEmbeddedAtomic","interfaceLanguage":"swift"},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"tokens":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"UnsafeEmbeddedAtomic","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":"> ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"AtomicPrimitive","kind":"typeIdentifier","preciseIdentifier":"s:21NIOConcurrencyHelpers15AtomicPrimitiveP","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOConcurrencyHelpers\/AtomicPrimitive"}],"languages":["swift"]}]},{"kind":"content","content":[{"anchor":"overview","type":"heading","text":"Overview","level":2},{"type":"paragraph","inlineContent":[{"text":"Before using ","type":"text"},{"type":"codeVoice","code":"UnsafeEmbeddedAtomic"},{"text":", please consider whether your needs can be met by ","type":"text"},{"type":"codeVoice","code":"Atomic"},{"text":" instead.","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"UnsafeEmbeddedAtomic"},{"text":" is a value type, but atomics are heap-allocated. Thus, it is only safe to","type":"text"},{"text":" ","type":"text"},{"text":"use ","type":"text"},{"type":"codeVoice","code":"UnsafeEmbeddedAtomic"},{"text":" in situations where the atomic can be guaranteed to be cleaned up (via calling ","type":"text"},{"type":"codeVoice","code":"destroy"},{"text":").","type":"text"},{"text":" ","type":"text"},{"text":"If you cannot make these guarantees, use ","type":"text"},{"type":"codeVoice","code":"Atomic"},{"text":" instead, which manages this for you.","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"Atomic objects support a wide range of atomic operations:","type":"text"}]},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Compare and swap","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Add"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Subtract"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Exchange","type":"text"}]}]},{"content":[{"inlineContent":[{"text":"Load current value","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Store current value","type":"text"}]}]}],"type":"unorderedList"},{"type":"paragraph","inlineContent":[{"text":"Atomic primitives are useful when building constructs that need to","type":"text"},{"text":" ","type":"text"},{"text":"communicate or cooperate across multiple threads. In the case of","type":"text"},{"text":" ","type":"text"},{"text":"SwiftNIO this usually involves communicating across multiple event loops.","type":"text"}]}]}],"deprecationSummary":[{"inlineContent":[{"text":"please use UnsafeAtomic from https:\/\/github.com\/apple\/swift-atomics instead","type":"text"}],"type":"paragraph"}],"schemaVersion":{"minor":3,"major":0,"patch":0},"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOConcurrencyHelpers\/UnsafeEmbeddedAtomic\/init(value:)"]},{"title":"Instance Methods","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOConcurrencyHelpers\/UnsafeEmbeddedAtomic\/add(_:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOConcurrencyHelpers\/UnsafeEmbeddedAtomic\/compareAndExchange(expected:desired:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOConcurrencyHelpers\/UnsafeEmbeddedAtomic\/destroy()","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOConcurrencyHelpers\/UnsafeEmbeddedAtomic\/exchange(with:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOConcurrencyHelpers\/UnsafeEmbeddedAtomic\/load()","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOConcurrencyHelpers\/UnsafeEmbeddedAtomic\/store(_:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOConcurrencyHelpers\/UnsafeEmbeddedAtomic\/sub(_:)"]}],"references":{"doc://co.pointfree.VaporRouting/documentation/NIOConcurrencyHelpers/UnsafeEmbeddedAtomic/add(_:)":{"abstract":[{"type":"text","text":"Atomically adds "},{"type":"codeVoice","code":"rhs"},{"type":"text","text":" to this object."}],"type":"topic","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"add"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"T"}],"role":"symbol","title":"add(_:)","url":"\/documentation\/nioconcurrencyhelpers\/unsafeembeddedatomic\/add(_:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOConcurrencyHelpers\/UnsafeEmbeddedAtomic\/add(_:)","deprecated":true},"doc://co.pointfree.VaporRouting/documentation/NIOConcurrencyHelpers/UnsafeEmbeddedAtomic/init(value:)":{"url":"\/documentation\/nioconcurrencyhelpers\/unsafeembeddedatomic\/init(value:)","title":"init(value:)","deprecated":true,"kind":"symbol","abstract":[{"text":"Create an atomic object with ","type":"text"},{"code":"value","type":"codeVoice"},{"text":".","type":"text"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOConcurrencyHelpers\/UnsafeEmbeddedAtomic\/init(value:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"value"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":")"}],"role":"symbol","type":"topic"},"doc://co.pointfree.VaporRouting/documentation/NIOConcurrencyHelpers/UnsafeEmbeddedAtomic":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOConcurrencyHelpers\/UnsafeEmbeddedAtomic","role":"symbol","navigatorTitle":[{"text":"UnsafeEmbeddedAtomic","kind":"identifier"}],"kind":"symbol","title":"UnsafeEmbeddedAtomic","abstract":[{"type":"text","text":"An atomic primitive object."}],"url":"\/documentation\/nioconcurrencyhelpers\/unsafeembeddedatomic","deprecated":true,"type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"UnsafeEmbeddedAtomic","kind":"identifier"}]},"doc://co.pointfree.VaporRouting/documentation/NIOConcurrencyHelpers/UnsafeEmbeddedAtomic/sub(_:)":{"url":"\/documentation\/nioconcurrencyhelpers\/unsafeembeddedatomic\/sub(_:)","title":"sub(_:)","deprecated":true,"kind":"symbol","abstract":[{"text":"Atomically subtracts ","type":"text"},{"code":"rhs","type":"codeVoice"},{"text":" from this object.","type":"text"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOConcurrencyHelpers\/UnsafeEmbeddedAtomic\/sub(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"sub"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"T"}],"role":"symbol","type":"topic"},"doc://co.pointfree.VaporRouting/documentation/NIOConcurrencyHelpers/UnsafeEmbeddedAtomic/exchange(with:)":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOConcurrencyHelpers\/UnsafeEmbeddedAtomic\/exchange(with:)","role":"symbol","kind":"symbol","title":"exchange(with:)","abstract":[{"type":"text","text":"Atomically exchanges "},{"type":"codeVoice","code":"value"},{"type":"text","text":" for the current value of this object."}],"url":"\/documentation\/nioconcurrencyhelpers\/unsafeembeddedatomic\/exchange(with:)","deprecated":true,"type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"exchange"},{"text":"(","kind":"text"},{"text":"with","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"}]},"doc://co.pointfree.VaporRouting/documentation/NIOConcurrencyHelpers/UnsafeEmbeddedAtomic/compareAndExchange(expected:desired:)":{"kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"compareAndExchange"},{"kind":"text","text":"("},{"kind":"externalParam","text":"expected"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":", "},{"kind":"externalParam","text":"desired"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"url":"\/documentation\/nioconcurrencyhelpers\/unsafeembeddedatomic\/compareandexchange(expected:desired:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOConcurrencyHelpers\/UnsafeEmbeddedAtomic\/compareAndExchange(expected:desired:)","deprecated":true,"abstract":[{"text":"Atomically compares the value against ","type":"text"},{"code":"expected","type":"codeVoice"},{"text":" and, if they are equal,","type":"text"},{"text":" ","type":"text"},{"text":"replaces the value with ","type":"text"},{"code":"desired","type":"codeVoice"},{"text":".","type":"text"}],"title":"compareAndExchange(expected:desired:)","type":"topic","role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOConcurrencyHelpers/UnsafeEmbeddedAtomic/store(_:)":{"title":"store(_:)","role":"symbol","kind":"symbol","deprecated":true,"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"store"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Atomically replaces the value of this object with "},{"code":"value","type":"codeVoice"},{"type":"text","text":"."}],"url":"\/documentation\/nioconcurrencyhelpers\/unsafeembeddedatomic\/store(_:)","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOConcurrencyHelpers\/UnsafeEmbeddedAtomic\/store(_:)"},"doc://co.pointfree.VaporRouting/documentation/NIOConcurrencyHelpers":{"url":"\/documentation\/nioconcurrencyhelpers","kind":"symbol","type":"topic","abstract":[],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOConcurrencyHelpers","title":"NIOConcurrencyHelpers","role":"collection"},"doc://co.pointfree.VaporRouting/documentation/NIOConcurrencyHelpers/AtomicPrimitive":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOConcurrencyHelpers\/AtomicPrimitive","role":"symbol","title":"AtomicPrimitive","kind":"symbol","abstract":[{"type":"text","text":"The protocol that all types that can be made atomic must conform to."}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AtomicPrimitive","kind":"identifier"}],"navigatorTitle":[{"text":"AtomicPrimitive","kind":"identifier"}],"url":"\/documentation\/nioconcurrencyhelpers\/atomicprimitive","type":"topic"},"doc://co.pointfree.VaporRouting/documentation/NIOConcurrencyHelpers/UnsafeEmbeddedAtomic/load()":{"url":"\/documentation\/nioconcurrencyhelpers\/unsafeembeddedatomic\/load()","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"load"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"T"}],"deprecated":true,"title":"load()","abstract":[{"type":"text","text":"Atomically loads and returns the value of this object."}],"role":"symbol","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOConcurrencyHelpers\/UnsafeEmbeddedAtomic\/load()"},"doc://co.pointfree.VaporRouting/documentation/NIOConcurrencyHelpers/UnsafeEmbeddedAtomic/destroy()":{"title":"destroy()","role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOConcurrencyHelpers\/UnsafeEmbeddedAtomic\/destroy()","url":"\/documentation\/nioconcurrencyhelpers\/unsafeembeddedatomic\/destroy()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"destroy"},{"kind":"text","text":"()"}],"deprecated":true,"type":"topic","kind":"symbol","abstract":[{"text":"Destroy the atomic value.","type":"text"}]}}}