{"abstract":[{"text":"Close the ","type":"text"},{"code":"Channel","type":"codeVoice"},{"text":" and so the connection if one exists.","type":"text"}],"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/close(mode:promise:)","interfaceLanguage":"swift"},"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"close","kind":"identifier"},{"text":"(","kind":"text"},{"text":"mode","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"CloseMode","kind":"typeIdentifier","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/CloseMode","preciseIdentifier":"s:7NIOCore9CloseModeO"},{"text":" = .all, ","kind":"text"},{"text":"promise","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"EventLoopPromise","kind":"typeIdentifier","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopPromise","preciseIdentifier":"s:7NIOCore16EventLoopPromiseV"},{"text":"<","kind":"text"},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"text":">?)","kind":"text"}],"platforms":["Linux"]}],"kind":"declarations"},{"parameters":[{"content":[{"inlineContent":[{"text":"the ","type":"text"},{"code":"CloseMode","type":"codeVoice"},{"text":" that is used","type":"text"}],"type":"paragraph"}],"name":"mode"},{"content":[{"type":"paragraph","inlineContent":[{"text":"the ","type":"text"},{"code":"EventLoopPromise","type":"codeVoice"},{"text":" that will be notified once the operation completes,","type":"text"},{"text":" ","type":"text"},{"text":"or ","type":"text"},{"code":"nil","type":"codeVoice"},{"text":" if not interested in the outcome of the operation.","type":"text"}]}],"name":"promise"}],"kind":"parameters"}],"variants":[{"paths":["\/documentation\/nioembedded\/embeddedchannel\/close(mode:promise:)"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"role":"symbol","roleHeading":"Instance Method","title":"close(mode:promise:)","externalID":"s:7NIOCore7ChannelPAAE5close4mode7promiseyAA9CloseModeO_AA16EventLoopPromiseVyytGSgtF::SYNTHESIZED::s:11NIOEmbedded15EmbeddedChannelC","modules":[{"name":"NIOEmbedded"}],"symbolKind":"method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"close"},{"kind":"text","text":"("},{"kind":"externalParam","text":"mode"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7NIOCore9CloseModeO","text":"CloseMode","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"promise","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7NIOCore16EventLoopPromiseV","text":"EventLoopPromise","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"},{"kind":"text","text":">?)"}],"extendedModule":"NIOCore"},"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/ChannelOutboundInvoker-Implementations"]]},"sections":[],"kind":"symbol","schemaVersion":{"minor":3,"major":0,"patch":0},"references":{"doc://co.pointfree.VaporRouting/documentation/NIOEmbedded/EmbeddedChannel/close(mode:promise:)":{"abstract":[{"text":"Close the ","type":"text"},{"type":"codeVoice","code":"Channel"},{"type":"text","text":" and so the connection if one exists."}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/close(mode:promise:)","url":"\/documentation\/nioembedded\/embeddedchannel\/close(mode:promise:)","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"close","kind":"identifier"},{"text":"(","kind":"text"},{"text":"mode","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7NIOCore9CloseModeO","text":"CloseMode","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"promise","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7NIOCore16EventLoopPromiseV","text":"EventLoopPromise","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"},{"text":">?)","kind":"text"}],"kind":"symbol","title":"close(mode:promise:)","role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/CloseMode":{"url":"\/documentation\/niocore\/closemode","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/CloseMode","abstract":[{"text":"Specify what kind of close operation is requested.","type":"text"}],"kind":"symbol","navigatorTitle":[{"text":"CloseMode","kind":"identifier"}],"type":"topic","title":"CloseMode","role":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"text":"CloseMode","kind":"identifier"}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoopPromise":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"EventLoopPromise"}],"abstract":[{"type":"text","text":"A promise to provide a result later."}],"navigatorTitle":[{"kind":"identifier","text":"EventLoopPromise"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopPromise","title":"EventLoopPromise","role":"symbol","type":"topic","url":"\/documentation\/niocore\/eventlooppromise","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOEmbedded/EmbeddedChannel/ChannelOutboundInvoker-Implementations":{"url":"\/documentation\/nioembedded\/embeddedchannel\/channeloutboundinvoker-implementations","title":"ChannelOutboundInvoker Implementations","kind":"article","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/ChannelOutboundInvoker-Implementations","role":"collectionGroup","type":"topic","abstract":[]},"doc://co.pointfree.VaporRouting/documentation/NIOEmbedded":{"kind":"symbol","role":"collection","title":"NIOEmbedded","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded","abstract":[],"url":"\/documentation\/nioembedded","type":"topic"},"doc://co.pointfree.VaporRouting/documentation/NIOEmbedded/EmbeddedChannel":{"kind":"symbol","role":"symbol","title":"EmbeddedChannel","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel","abstract":[{"type":"codeVoice","code":"EmbeddedChannel"},{"type":"text","text":" is a "},{"code":"Channel","type":"codeVoice"},{"type":"text","text":" implementation that does neither any"},{"type":"text","text":" "},{"type":"text","text":"actual IO nor has a proper eventing mechanism. The prime use-case for"},{"type":"text","text":" "},{"code":"EmbeddedChannel","type":"codeVoice"},{"text":" is in unit tests when you want to feed the inbound events","type":"text"},{"text":" ","type":"text"},{"text":"and check the outbound events manually.","type":"text"}],"url":"\/documentation\/nioembedded\/embeddedchannel","type":"topic","navigatorTitle":[{"text":"EmbeddedChannel","kind":"identifier"}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"EmbeddedChannel","kind":"identifier"}]}}}