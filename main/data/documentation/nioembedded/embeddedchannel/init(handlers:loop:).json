{"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/init(handlers:loop:)","interfaceLanguage":"swift"},"kind":"symbol","hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["Linux"],"tokens":[{"text":"init","kind":"keyword"},{"text":"(","kind":"text"},{"text":"handlers","kind":"externalParam"},{"text":": [","kind":"text"},{"text":"ChannelHandler","kind":"typeIdentifier","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelHandler","preciseIdentifier":"s:7NIOCore14ChannelHandlerP"},{"text":"], ","kind":"text"},{"text":"loop","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"EmbeddedEventLoop","kind":"typeIdentifier","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedEventLoop","preciseIdentifier":"s:11NIOEmbedded17EmbeddedEventLoopC"},{"text":" = EmbeddedEventLoop())","kind":"text"}]}]},{"kind":"parameters","parameters":[{"content":[{"type":"paragraph","inlineContent":[{"text":"The ","type":"text"},{"type":"codeVoice","code":"ChannelHandler"},{"text":"s to add to the ","type":"text"},{"type":"codeVoice","code":"ChannelPipeline"},{"text":" before register.","type":"text"}]}],"name":"handlers"},{"content":[{"inlineContent":[{"text":"The ","type":"text"},{"code":"EmbeddedEventLoop","type":"codeVoice"},{"text":" to use.","type":"text"}],"type":"paragraph"}],"name":"loop"}]},{"kind":"content","content":[{"text":"Discussion","anchor":"discussion","type":"heading","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"During creation it will automatically also register itself on the "},{"type":"codeVoice","code":"EmbeddedEventLoop"},{"type":"text","text":"."}]}]}],"abstract":[{"type":"text","text":"Create a new instance."}],"metadata":{"symbolKind":"init","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"handlers"},{"kind":"text","text":": ["},{"preciseIdentifier":"s:7NIOCore14ChannelHandlerP","kind":"typeIdentifier","text":"ChannelHandler"},{"kind":"text","text":"], "},{"kind":"externalParam","text":"loop"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11NIOEmbedded17EmbeddedEventLoopC","kind":"typeIdentifier","text":"EmbeddedEventLoop"},{"kind":"text","text":")"}],"title":"init(handlers:loop:)","modules":[{"name":"NIOEmbedded"}],"roleHeading":"Initializer","externalID":"s:11NIOEmbedded15EmbeddedChannelC8handlers4loopACSay7NIOCore0C7Handler_pG_AA0B9EventLoopCtcfc","role":"symbol"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/nioembedded\/embeddedchannel\/init(handlers:loop:)"]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"references":{"doc://co.pointfree.VaporRouting/documentation/NIOEmbedded/EmbeddedEventLoop":{"navigatorTitle":[{"text":"EmbeddedEventLoop","kind":"identifier"}],"url":"\/documentation\/nioembedded\/embeddedeventloop","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedEventLoop","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"text":"EmbeddedEventLoop","kind":"identifier"}],"title":"EmbeddedEventLoop","type":"topic","kind":"symbol","role":"symbol","abstract":[{"type":"text","text":"An "},{"type":"codeVoice","code":"EventLoop"},{"type":"text","text":" that is embedded in the current running context with no external"},{"type":"text","text":" "},{"type":"text","text":"control."}]},"doc://co.pointfree.VaporRouting/documentation/NIOEmbedded/EmbeddedChannel/init(handlers:loop:)":{"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/init(handlers:loop:)","kind":"symbol","title":"init(handlers:loop:)","role":"symbol","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"handlers"},{"kind":"text","text":": ["},{"preciseIdentifier":"s:7NIOCore14ChannelHandlerP","kind":"typeIdentifier","text":"ChannelHandler"},{"kind":"text","text":"], "},{"kind":"externalParam","text":"loop"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11NIOEmbedded17EmbeddedEventLoopC","kind":"typeIdentifier","text":"EmbeddedEventLoop"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Create a new instance."}],"url":"\/documentation\/nioembedded\/embeddedchannel\/init(handlers:loop:)"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelHandler":{"title":"ChannelHandler","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ChannelHandler"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelHandler","kind":"symbol","abstract":[{"type":"text","text":"You should "},{"inlineContent":[{"text":"never","type":"text"}],"type":"emphasis"},{"type":"text","text":" implement this protocol directly. Please implement one of its sub-protocols."}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"ChannelHandler"}],"url":"\/documentation\/niocore\/channelhandler","type":"topic"},"doc://co.pointfree.VaporRouting/documentation/NIOEmbedded":{"kind":"symbol","role":"collection","title":"NIOEmbedded","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded","abstract":[],"url":"\/documentation\/nioembedded","type":"topic"},"doc://co.pointfree.VaporRouting/documentation/NIOEmbedded/EmbeddedChannel":{"kind":"symbol","role":"symbol","title":"EmbeddedChannel","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel","abstract":[{"type":"codeVoice","code":"EmbeddedChannel"},{"type":"text","text":" is a "},{"code":"Channel","type":"codeVoice"},{"type":"text","text":" implementation that does neither any"},{"type":"text","text":" "},{"type":"text","text":"actual IO nor has a proper eventing mechanism. The prime use-case for"},{"type":"text","text":" "},{"code":"EmbeddedChannel","type":"codeVoice"},{"text":" is in unit tests when you want to feed the inbound events","type":"text"},{"text":" ","type":"text"},{"text":"and check the outbound events manually.","type":"text"}],"url":"\/documentation\/nioembedded\/embeddedchannel","type":"topic","navigatorTitle":[{"text":"EmbeddedChannel","kind":"identifier"}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"EmbeddedChannel","kind":"identifier"}]}}}