{"schemaVersion":{"minor":3,"major":0,"patch":0},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"readOutbound"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"externalParam","text":"as"},{"kind":"text","text":" "},{"kind":"internalParam","text":"type"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":".Type = T.self) "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":"?"}],"platforms":["Linux"]}]},{"content":[{"anchor":"discussion","level":2,"text":"Discussion","type":"heading"},{"inlineContent":[{"text":"Data hits the ","type":"text"},{"code":"EmbeddedChannel","type":"codeVoice"},{"text":"’s outbound buffer when data was written using ","type":"text"},{"code":"write","type":"codeVoice"},{"text":", then ","type":"text"},{"code":"flush","type":"codeVoice"},{"text":"ed, and","type":"text"},{"text":" ","type":"text"},{"text":"then travelled the ","type":"text"},{"code":"ChannelPipeline","type":"codeVoice"},{"text":" all the way too the front. For data to hit the outbound buffer, the very","type":"text"},{"text":" ","type":"text"},{"text":"first ","type":"text"},{"code":"ChannelHandler","type":"codeVoice"},{"text":" must have written and flushed it either explicitly (by calling","type":"text"},{"text":" ","type":"text"},{"code":"ChannelHandlerContext.write","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"flush","type":"codeVoice"},{"text":") or implicitly by not implementing ","type":"text"},{"code":"write","type":"codeVoice"},{"text":"\/","type":"text"},{"code":"flush","type":"codeVoice"},{"text":".","type":"text"}],"type":"paragraph"},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Outbound events travel the "},{"type":"codeVoice","code":"ChannelPipeline"},{"type":"text","text":" "},{"inlineContent":[{"type":"text","text":"back to front"}],"type":"emphasis"},{"type":"text","text":"."}]}],"type":"aside","name":"Note","style":"note"},{"content":[{"inlineContent":[{"text":"","type":"text"},{"type":"codeVoice","code":"EmbeddedChannel.writeOutbound"},{"text":" will ","type":"text"},{"type":"codeVoice","code":"write"},{"text":" data through the ","type":"text"},{"type":"codeVoice","code":"ChannelPipeline"},{"text":", starting with last","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"ChannelHandler"},{"text":".","type":"text"}],"type":"paragraph"}],"type":"aside","name":"Note","style":"note"}],"kind":"content"}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel"]]},"variants":[{"paths":["\/documentation\/nioembedded\/embeddedchannel\/readoutbound(as:)"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/readOutbound(as:)"},"sections":[],"abstract":[{"text":"If available, this method reads one element of type ","type":"text"},{"code":"T","type":"codeVoice"},{"text":" out of the ","type":"text"},{"code":"EmbeddedChannel","type":"codeVoice"},{"text":"’s outbound buffer. If the","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"first element was of a different type than requested, "},{"code":"EmbeddedChannel.WrongTypeError","type":"codeVoice"},{"type":"text","text":" will be thrown, if there"},{"type":"text","text":" "},{"type":"text","text":"are no elements in the outbound buffer, "},{"code":"nil","type":"codeVoice"},{"type":"text","text":" will be returned."}],"metadata":{"roleHeading":"Instance Method","modules":[{"name":"NIOEmbedded"}],"role":"symbol","externalID":"s:11NIOEmbedded15EmbeddedChannelC12readOutbound2asxSgxm_tKlF","symbolKind":"method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"readOutbound"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"externalParam","text":"as"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":".Type) "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":"?"}],"title":"readOutbound(as:)"},"references":{"doc://co.pointfree.VaporRouting/documentation/NIOEmbedded/EmbeddedChannel/readOutbound(as:)":{"role":"symbol","type":"topic","kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/readOutbound(as:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"readOutbound"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"externalParam","text":"as"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":".Type) "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":"?"}],"title":"readOutbound(as:)","url":"\/documentation\/nioembedded\/embeddedchannel\/readoutbound(as:)","abstract":[{"text":"If available, this method reads one element of type ","type":"text"},{"code":"T","type":"codeVoice"},{"text":" out of the ","type":"text"},{"code":"EmbeddedChannel","type":"codeVoice"},{"text":"’s outbound buffer. If the","type":"text"},{"text":" ","type":"text"},{"text":"first element was of a different type than requested, ","type":"text"},{"code":"EmbeddedChannel.WrongTypeError","type":"codeVoice"},{"text":" will be thrown, if there","type":"text"},{"type":"text","text":" "},{"type":"text","text":"are no elements in the outbound buffer, "},{"type":"codeVoice","code":"nil"},{"type":"text","text":" will be returned."}]},"doc://co.pointfree.VaporRouting/documentation/NIOEmbedded/EmbeddedChannel":{"kind":"symbol","role":"symbol","title":"EmbeddedChannel","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel","abstract":[{"type":"codeVoice","code":"EmbeddedChannel"},{"type":"text","text":" is a "},{"code":"Channel","type":"codeVoice"},{"type":"text","text":" implementation that does neither any"},{"type":"text","text":" "},{"type":"text","text":"actual IO nor has a proper eventing mechanism. The prime use-case for"},{"type":"text","text":" "},{"code":"EmbeddedChannel","type":"codeVoice"},{"text":" is in unit tests when you want to feed the inbound events","type":"text"},{"text":" ","type":"text"},{"text":"and check the outbound events manually.","type":"text"}],"url":"\/documentation\/nioembedded\/embeddedchannel","type":"topic","navigatorTitle":[{"text":"EmbeddedChannel","kind":"identifier"}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"EmbeddedChannel","kind":"identifier"}]},"doc://co.pointfree.VaporRouting/documentation/NIOEmbedded":{"kind":"symbol","role":"collection","title":"NIOEmbedded","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded","abstract":[],"url":"\/documentation\/nioembedded","type":"topic"}}}