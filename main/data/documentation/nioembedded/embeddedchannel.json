{"abstract":[{"code":"EmbeddedChannel","type":"codeVoice"},{"text":" is a ","type":"text"},{"code":"Channel","type":"codeVoice"},{"text":" implementation that does neither any","type":"text"},{"text":" ","type":"text"},{"text":"actual IO nor has a proper eventing mechanism. The prime use-case for","type":"text"},{"text":" ","type":"text"},{"code":"EmbeddedChannel","type":"codeVoice"},{"text":" is in unit tests when you want to feed the inbound events","type":"text"},{"text":" ","type":"text"},{"text":"and check the outbound events manually.","type":"text"}],"schemaVersion":{"major":0,"minor":3,"patch":0},"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"final"},{"kind":"text","text":" "},{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"EmbeddedChannel"}],"languages":["swift"],"platforms":["Linux"]}],"kind":"declarations"},{"kind":"content","content":[{"text":"Overview","anchor":"overview","level":2,"type":"heading"},{"type":"paragraph","inlineContent":[{"text":"Please remember to call ","type":"text"},{"code":"finish()","type":"codeVoice"},{"text":" when you are no longer using this","type":"text"},{"text":" ","type":"text"},{"code":"EmbeddedChannel","type":"codeVoice"},{"text":".","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"To feed events through an "},{"code":"EmbeddedChannel","type":"codeVoice"},{"type":"text","text":"’s "},{"code":"ChannelPipeline","type":"codeVoice"},{"type":"text","text":" use"},{"type":"text","text":" "},{"code":"EmbeddedChannel.writeInbound","type":"codeVoice"},{"type":"text","text":" which accepts data of any type. It will then"},{"type":"text","text":" "},{"type":"text","text":"forward that data through the "},{"code":"ChannelPipeline","type":"codeVoice"},{"type":"text","text":" and the subsequent"},{"type":"text","text":" "},{"code":"ChannelInboundHandler","type":"codeVoice"},{"type":"text","text":" will receive it through the usual "},{"code":"channelRead","type":"codeVoice"},{"type":"text","text":" "},{"type":"text","text":"event. The user is responsible for making sure the first"},{"type":"text","text":" "},{"code":"ChannelInboundHandler","type":"codeVoice"},{"type":"text","text":" expects data of that type."}]},{"type":"paragraph","inlineContent":[{"code":"EmbeddedChannel","type":"codeVoice"},{"text":" automatically collects arriving outbound data and makes it","type":"text"},{"text":" ","type":"text"},{"text":"available one-by-one through ","type":"text"},{"code":"readOutbound","type":"codeVoice"},{"text":".","type":"text"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"","type":"text"},{"code":"EmbeddedChannel","type":"codeVoice"},{"text":" is currently only compatible with","type":"text"},{"text":" ","type":"text"},{"code":"EmbeddedEventLoop","type":"codeVoice"},{"text":"s and cannot be used with ","type":"text"},{"code":"SelectableEventLoop","type":"codeVoice"},{"text":"s from","type":"text"},{"text":" ","type":"text"},{"text":"for example ","type":"text"},{"code":"MultiThreadedEventLoopGroup","type":"codeVoice"},{"text":".","type":"text"}]}],"style":"note","name":"Note","type":"aside"},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Unlike other "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":"s, "},{"type":"codeVoice","code":"EmbeddedChannel"},{"type":"text","text":" "},{"type":"strong","inlineContent":[{"text":"is not thread-safe","type":"text"}]},{"type":"text","text":". This"},{"type":"text","text":" "},{"type":"text","text":"is because it is intended to be run in the thread that instantiated it. Users are"},{"type":"text","text":" "},{"type":"text","text":"responsible for ensuring they never call into an "},{"type":"codeVoice","code":"EmbeddedChannel"},{"type":"text","text":" in an"},{"type":"text","text":" "},{"type":"text","text":"unsynchronized fashion. "},{"type":"codeVoice","code":"EmbeddedEventLoop"},{"type":"text","text":"s notes also apply as"},{"type":"text","text":" "},{"type":"codeVoice","code":"EmbeddedChannel"},{"type":"text","text":" uses an "},{"type":"codeVoice","code":"EmbeddedEventLoop"},{"type":"text","text":" as its "},{"type":"codeVoice","code":"EventLoop"},{"type":"text","text":"."}]}],"style":"warning","name":"Warning","type":"aside"}]}],"kind":"symbol","sections":[],"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded"]]},"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel","interfaceLanguage":"swift"},"metadata":{"role":"symbol","title":"EmbeddedChannel","externalID":"s:11NIOEmbedded15EmbeddedChannelC","navigatorTitle":[{"kind":"identifier","text":"EmbeddedChannel"}],"modules":[{"name":"NIOEmbedded"}],"symbolKind":"class","roleHeading":"Class","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"EmbeddedChannel"}]},"variants":[{"paths":["\/documentation\/nioembedded\/embeddedchannel"],"traits":[{"interfaceLanguage":"swift"}]}],"topicSections":[{"title":"Structures","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/SynchronousOptions","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/WrongTypeError"]},{"title":"Initializers","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/init(handler:loop:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/init(handlers:loop:)"]},{"title":"Instance Properties","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/allocator","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/closeFuture","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/embeddedEventLoop","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/eventLoop","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/isActive","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/isWritable","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/localAddress","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/parent","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/pipeline","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/remoteAddress"]},{"title":"Instance Methods","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/bind(to:promise:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/connect(to:promise:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/finish()","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/finish(acceptAlreadyClosed:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/getOption(_:)-6dgj0","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/readInbound(as:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/readOutbound(as:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/setOption(_:value:)-5j5cw","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/throwIfErrorCaught()","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/writeInbound(_:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/writeOutbound(_:)"]},{"title":"Enumerations","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/BufferState","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/LeftOverState"]},{"title":"Default Implementations","generated":true,"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/Channel-Implementations","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/ChannelOutboundInvoker-Implementations"]}],"relationshipsSections":[{"title":"Conforms To","type":"conformsTo","kind":"relationships","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/Channel","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOutboundInvoker","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/NIOPreconcurrencySendable"]}],"references":{"doc://co.pointfree.VaporRouting/documentation/NIOEmbedded/EmbeddedChannel/writeInbound(_:)":{"type":"topic","role":"symbol","abstract":[],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"writeInbound"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"EmbeddedChannel","preciseIdentifier":"s:11NIOEmbedded15EmbeddedChannelC"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"BufferState","preciseIdentifier":"s:11NIOEmbedded15EmbeddedChannelC11BufferStateO"}],"title":"writeInbound(_:)","kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/writeInbound(_:)","url":"\/documentation\/nioembedded\/embeddedchannel\/writeinbound(_:)"},"doc://co.pointfree.VaporRouting/documentation/NIOEmbedded/EmbeddedChannel/remoteAddress":{"kind":"symbol","title":"remoteAddress","abstract":[],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/remoteAddress","url":"\/documentation\/nioembedded\/embeddedchannel\/remoteaddress","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"remoteAddress","kind":"identifier"},{"text":": ","kind":"text"},{"text":"SocketAddress","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore13SocketAddressO"},{"text":"?","kind":"text"}],"type":"topic"},"doc://co.pointfree.VaporRouting/documentation/NIOEmbedded/EmbeddedChannel/init(handlers:loop:)":{"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/init(handlers:loop:)","kind":"symbol","title":"init(handlers:loop:)","role":"symbol","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"handlers"},{"kind":"text","text":": ["},{"preciseIdentifier":"s:7NIOCore14ChannelHandlerP","kind":"typeIdentifier","text":"ChannelHandler"},{"kind":"text","text":"], "},{"kind":"externalParam","text":"loop"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11NIOEmbedded17EmbeddedEventLoopC","kind":"typeIdentifier","text":"EmbeddedEventLoop"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Create a new instance."}],"url":"\/documentation\/nioembedded\/embeddedchannel\/init(handlers:loop:)"},"doc://co.pointfree.VaporRouting/documentation/NIOEmbedded/EmbeddedChannel/getOption(_:)-6dgj0":{"type":"topic","title":"getOption(_:)","url":"\/documentation\/nioembedded\/embeddedchannel\/getoption(_:)-6dgj0","kind":"symbol","abstract":[],"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"getOption","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Option","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"Option","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"EventLoopFuture","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15EventLoopFutureC"},{"text":"<","kind":"text"},{"text":"Option","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":">","kind":"text"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/getOption(_:)-6dgj0"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/NIOPreconcurrencySendable":{"title":"NIOPreconcurrencySendable","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"NIOPreconcurrencySendable"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/NIOPreconcurrencySendable","kind":"symbol","abstract":[],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"NIOPreconcurrencySendable"}],"url":"\/documentation\/niocore\/niopreconcurrencysendable","type":"topic"},"doc://co.pointfree.VaporRouting/documentation/NIOEmbedded/EmbeddedChannel/bind(to:promise:)":{"abstract":[{"type":"text","text":"Fires the (outbound) "},{"type":"codeVoice","code":"bind"},{"type":"text","text":" event through the "},{"code":"ChannelPipeline","type":"codeVoice"},{"text":". If the event hits the ","type":"text"},{"code":"EmbeddedChannel","type":"codeVoice"},{"text":" which","type":"text"},{"text":" ","type":"text"},{"text":"happens when it travels the ","type":"text"},{"code":"ChannelPipeline","type":"codeVoice"},{"text":" all the way to the front, this will also set the","type":"text"},{"text":" ","type":"text"},{"code":"EmbeddedChannel","type":"codeVoice"},{"text":"’s ","type":"text"},{"code":"localAddress","type":"codeVoice"},{"text":".","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"bind","kind":"identifier"},{"text":"(","kind":"text"},{"text":"to","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7NIOCore13SocketAddressO","text":"SocketAddress","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"promise","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7NIOCore16EventLoopPromiseV","text":"EventLoopPromise","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"text":">?)","kind":"text"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/bind(to:promise:)","title":"bind(to:promise:)","type":"topic","role":"symbol","kind":"symbol","url":"\/documentation\/nioembedded\/embeddedchannel\/bind(to:promise:)"},"doc://co.pointfree.VaporRouting/documentation/NIOEmbedded/EmbeddedChannel/Channel-Implementations":{"title":"Channel Implementations","kind":"article","abstract":[],"url":"\/documentation\/nioembedded\/embeddedchannel\/channel-implementations","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/Channel-Implementations","role":"collectionGroup","type":"topic"},"doc://co.pointfree.VaporRouting/documentation/NIOEmbedded/EmbeddedChannel/pipeline":{"url":"\/documentation\/nioembedded\/embeddedchannel\/pipeline","title":"pipeline","kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/pipeline","abstract":[],"role":"symbol","type":"topic","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"pipeline","kind":"identifier"},{"text":": ","kind":"text"},{"text":"ChannelPipeline","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15ChannelPipelineC"}]},"doc://co.pointfree.VaporRouting/documentation/NIOEmbedded/EmbeddedChannel/eventLoop":{"kind":"symbol","type":"topic","title":"eventLoop","abstract":[],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/eventLoop","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"eventLoop","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7NIOCore9EventLoopP","kind":"typeIdentifier","text":"EventLoop"}],"url":"\/documentation\/nioembedded\/embeddedchannel\/eventloop","role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOEmbedded/EmbeddedChannel/ChannelOutboundInvoker-Implementations":{"url":"\/documentation\/nioembedded\/embeddedchannel\/channeloutboundinvoker-implementations","title":"ChannelOutboundInvoker Implementations","kind":"article","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/ChannelOutboundInvoker-Implementations","role":"collectionGroup","type":"topic","abstract":[]},"doc://co.pointfree.VaporRouting/documentation/NIOEmbedded/EmbeddedChannel/closeFuture":{"role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"closeFuture"},{"text":": ","kind":"text"},{"text":"EventLoopFuture","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Void","preciseIdentifier":"s:s4Voida","kind":"typeIdentifier"},{"text":">","kind":"text"}],"type":"topic","url":"\/documentation\/nioembedded\/embeddedchannel\/closefuture","title":"closeFuture","abstract":[],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/closeFuture","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOEmbedded/EmbeddedChannel/LeftOverState":{"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/LeftOverState","navigatorTitle":[{"kind":"identifier","text":"LeftOverState"}],"fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"LeftOverState"}],"abstract":[{"code":"LeftOverState","type":"codeVoice"},{"text":" represents any left-over inbound, outbound, and pending outbound events that hit the","type":"text"},{"text":" ","type":"text"},{"code":"EmbeddedChannel","type":"codeVoice"},{"text":" and were not consumed when ","type":"text"},{"code":"finish","type":"codeVoice"},{"text":" was called on the ","type":"text"},{"code":"EmbeddedChannel","type":"codeVoice"},{"text":".","type":"text"}],"kind":"symbol","role":"symbol","title":"EmbeddedChannel.LeftOverState","url":"\/documentation\/nioembedded\/embeddedchannel\/leftoverstate"},"doc://co.pointfree.VaporRouting/documentation/NIOEmbedded/EmbeddedChannel/finish(acceptAlreadyClosed:)":{"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/finish(acceptAlreadyClosed:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"finish"},{"kind":"text","text":"("},{"kind":"externalParam","text":"acceptAlreadyClosed"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:11NIOEmbedded15EmbeddedChannelC","text":"EmbeddedChannel"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:11NIOEmbedded15EmbeddedChannelC13LeftOverStateO","text":"LeftOverState"}],"abstract":[{"text":"Synchronously closes the ","type":"text"},{"code":"EmbeddedChannel","type":"codeVoice"},{"text":".","type":"text"}],"kind":"symbol","role":"symbol","title":"finish(acceptAlreadyClosed:)","url":"\/documentation\/nioembedded\/embeddedchannel\/finish(acceptalreadyclosed:)"},"doc://co.pointfree.VaporRouting/documentation/NIOEmbedded/EmbeddedChannel/parent":{"role":"symbol","abstract":[{"type":"codeVoice","code":"nil"},{"type":"text","text":" because "},{"type":"codeVoice","code":"EmbeddedChannel"},{"type":"text","text":"s don’t have parents."}],"url":"\/documentation\/nioembedded\/embeddedchannel\/parent","fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"parent"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Channel","preciseIdentifier":"s:7NIOCore7ChannelP"},{"kind":"text","text":"?"}],"title":"parent","type":"topic","kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/parent"},"doc://co.pointfree.VaporRouting/documentation/NIOEmbedded":{"kind":"symbol","role":"collection","title":"NIOEmbedded","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded","abstract":[],"url":"\/documentation\/nioembedded","type":"topic"},"doc://co.pointfree.VaporRouting/documentation/NIOEmbedded/EmbeddedChannel/allocator":{"title":"allocator","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"allocator","kind":"identifier"},{"text":": ","kind":"text"},{"text":"ByteBufferAllocator","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore19ByteBufferAllocatorV"}],"type":"topic","kind":"symbol","url":"\/documentation\/nioembedded\/embeddedchannel\/allocator","abstract":[],"role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/allocator"},"doc://co.pointfree.VaporRouting/documentation/NIOEmbedded/EmbeddedChannel/isWritable":{"url":"\/documentation\/nioembedded\/embeddedchannel\/iswritable","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/isWritable","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"isWritable"},{"kind":"text","text":": "},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}],"title":"isWritable","type":"topic","kind":"symbol","role":"symbol","abstract":[]},"doc://co.pointfree.VaporRouting/documentation/NIOEmbedded/EmbeddedChannel/isActive":{"type":"topic","role":"symbol","title":"isActive","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/isActive","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"isActive"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"}],"kind":"symbol","abstract":[{"text":"Returns ","type":"text"},{"code":"true","type":"codeVoice"},{"text":" if the ","type":"text"},{"code":"EmbeddedChannel","type":"codeVoice"},{"text":" is ‘active’.","type":"text"}],"url":"\/documentation\/nioembedded\/embeddedchannel\/isactive"},"doc://co.pointfree.VaporRouting/documentation/NIOEmbedded/EmbeddedChannel/embeddedEventLoop":{"abstract":[{"text":"Returns the ","type":"text"},{"code":"EmbeddedEventLoop","type":"codeVoice"},{"text":" that this ","type":"text"},{"code":"EmbeddedChannel","type":"codeVoice"},{"text":" uses. This will return the same instance as","type":"text"},{"text":" ","type":"text"},{"code":"EmbeddedChannel.eventLoop","type":"codeVoice"},{"text":" but as the concrete ","type":"text"},{"code":"EmbeddedEventLoop","type":"codeVoice"},{"type":"text","text":" rather than as "},{"type":"codeVoice","code":"EventLoop"},{"type":"text","text":" existential."}],"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"embeddedEventLoop","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11NIOEmbedded17EmbeddedEventLoopC","text":"EmbeddedEventLoop","kind":"typeIdentifier"}],"title":"embeddedEventLoop","role":"symbol","kind":"symbol","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/embeddedEventLoop","url":"\/documentation\/nioembedded\/embeddedchannel\/embeddedeventloop"},"doc://co.pointfree.VaporRouting/documentation/NIOEmbedded/EmbeddedChannel/init(handler:loop:)":{"abstract":[{"text":"Create a new instance.","type":"text"}],"type":"topic","title":"init(handler:loop:)","role":"symbol","kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/init(handler:loop:)","fragments":[{"text":"convenience","kind":"keyword"},{"text":" ","kind":"text"},{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"handler"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore14ChannelHandlerP","text":"ChannelHandler"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"loop"},{"kind":"text","text":": "},{"text":"EmbeddedEventLoop","preciseIdentifier":"s:11NIOEmbedded17EmbeddedEventLoopC","kind":"typeIdentifier"},{"text":")","kind":"text"}],"url":"\/documentation\/nioembedded\/embeddedchannel\/init(handler:loop:)"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/Channel":{"url":"\/documentation\/niocore\/channel","navigatorTitle":[{"kind":"identifier","text":"Channel"}],"title":"Channel","role":"symbol","abstract":[{"type":"text","text":"A "},{"code":"Channel","type":"codeVoice"},{"type":"text","text":" is easiest thought of as a network socket. But it can be anything that is capable of I\/O operations such"},{"type":"text","text":" "},{"type":"text","text":"as read, write, connect, and bind."}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/Channel","kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Channel"}],"type":"topic"},"doc://co.pointfree.VaporRouting/documentation/NIOEmbedded/EmbeddedChannel/setOption(_:value:)-5j5cw":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/setOption(_:value:)-5j5cw","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"setOption"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Option"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"Option"},{"kind":"text","text":", "},{"kind":"externalParam","text":"value"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Option"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"EventLoopFuture","preciseIdentifier":"s:7NIOCore15EventLoopFutureC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":">"}],"kind":"symbol","title":"setOption(_:value:)","url":"\/documentation\/nioembedded\/embeddedchannel\/setoption(_:value:)-5j5cw","role":"symbol","abstract":[],"type":"topic"},"doc://co.pointfree.VaporRouting/documentation/NIOEmbedded/EmbeddedChannel/readOutbound(as:)":{"role":"symbol","type":"topic","kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/readOutbound(as:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"readOutbound"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"externalParam","text":"as"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":".Type) "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":"?"}],"title":"readOutbound(as:)","url":"\/documentation\/nioembedded\/embeddedchannel\/readoutbound(as:)","abstract":[{"text":"If available, this method reads one element of type ","type":"text"},{"code":"T","type":"codeVoice"},{"text":" out of the ","type":"text"},{"code":"EmbeddedChannel","type":"codeVoice"},{"text":"’s outbound buffer. If the","type":"text"},{"text":" ","type":"text"},{"text":"first element was of a different type than requested, ","type":"text"},{"code":"EmbeddedChannel.WrongTypeError","type":"codeVoice"},{"text":" will be thrown, if there","type":"text"},{"type":"text","text":" "},{"type":"text","text":"are no elements in the outbound buffer, "},{"type":"codeVoice","code":"nil"},{"type":"text","text":" will be returned."}]},"doc://co.pointfree.VaporRouting/documentation/NIOEmbedded/EmbeddedChannel/writeOutbound(_:)":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/writeOutbound(_:)","title":"writeOutbound(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"writeOutbound"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"text":"EmbeddedChannel","kind":"typeIdentifier","preciseIdentifier":"s:11NIOEmbedded15EmbeddedChannelC"},{"text":".","kind":"text"},{"text":"BufferState","kind":"typeIdentifier","preciseIdentifier":"s:11NIOEmbedded15EmbeddedChannelC11BufferStateO"}],"abstract":[],"role":"symbol","type":"topic","url":"\/documentation\/nioembedded\/embeddedchannel\/writeoutbound(_:)","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOEmbedded/EmbeddedChannel":{"kind":"symbol","role":"symbol","title":"EmbeddedChannel","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel","abstract":[{"type":"codeVoice","code":"EmbeddedChannel"},{"type":"text","text":" is a "},{"code":"Channel","type":"codeVoice"},{"type":"text","text":" implementation that does neither any"},{"type":"text","text":" "},{"type":"text","text":"actual IO nor has a proper eventing mechanism. The prime use-case for"},{"type":"text","text":" "},{"code":"EmbeddedChannel","type":"codeVoice"},{"text":" is in unit tests when you want to feed the inbound events","type":"text"},{"text":" ","type":"text"},{"text":"and check the outbound events manually.","type":"text"}],"url":"\/documentation\/nioembedded\/embeddedchannel","type":"topic","navigatorTitle":[{"text":"EmbeddedChannel","kind":"identifier"}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"EmbeddedChannel","kind":"identifier"}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelOutboundInvoker":{"title":"ChannelOutboundInvoker","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ChannelOutboundInvoker"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOutboundInvoker","kind":"symbol","abstract":[{"type":"text","text":"Allows users to invoke an “outbound” operation related to a "},{"code":"Channel","type":"codeVoice"},{"type":"text","text":" that will flow through the "},{"code":"ChannelPipeline","type":"codeVoice"},{"type":"text","text":" until"},{"type":"text","text":" "},{"type":"text","text":"it will finally be executed by the the "},{"code":"ChannelCore","type":"codeVoice"},{"type":"text","text":" implementation."}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"ChannelOutboundInvoker"}],"url":"\/documentation\/niocore\/channeloutboundinvoker","type":"topic"},"doc://co.pointfree.VaporRouting/documentation/NIOEmbedded/EmbeddedChannel/connect(to:promise:)":{"abstract":[{"type":"text","text":"Fires the (outbound) "},{"type":"codeVoice","code":"connect"},{"type":"text","text":" event through the "},{"type":"codeVoice","code":"ChannelPipeline"},{"type":"text","text":". If the event hits the "},{"code":"EmbeddedChannel","type":"codeVoice"},{"text":" ","type":"text"},{"text":"which happens when it travels the ","type":"text"},{"code":"ChannelPipeline","type":"codeVoice"},{"text":" all the way to the front, this will also set the","type":"text"},{"text":" ","type":"text"},{"code":"EmbeddedChannel","type":"codeVoice"},{"text":"’s ","type":"text"},{"type":"codeVoice","code":"remoteAddress"},{"type":"text","text":"."}],"title":"connect(to:promise:)","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/connect(to:promise:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"connect","kind":"identifier"},{"text":"(","kind":"text"},{"text":"to","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore13SocketAddressO","text":"SocketAddress"},{"kind":"text","text":", "},{"kind":"externalParam","text":"promise"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore16EventLoopPromiseV","text":"EventLoopPromise"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"kind":"text","text":">?)"}],"role":"symbol","url":"\/documentation\/nioembedded\/embeddedchannel\/connect(to:promise:)","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOEmbedded/EmbeddedChannel/SynchronousOptions":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/SynchronousOptions","abstract":[],"title":"EmbeddedChannel.SynchronousOptions","url":"\/documentation\/nioembedded\/embeddedchannel\/synchronousoptions","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"SynchronousOptions"}],"role":"symbol","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"SynchronousOptions"}]},"doc://co.pointfree.VaporRouting/documentation/NIOEmbedded/EmbeddedChannel/finish()":{"url":"\/documentation\/nioembedded\/embeddedchannel\/finish()","title":"finish()","kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/finish()","abstract":[{"text":"Synchronously closes the ","type":"text"},{"code":"EmbeddedChannel","type":"codeVoice"},{"text":".","type":"text"}],"role":"symbol","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"finish","kind":"identifier"},{"text":"() ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:11NIOEmbedded15EmbeddedChannelC","text":"EmbeddedChannel","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:11NIOEmbedded15EmbeddedChannelC13LeftOverStateO","text":"LeftOverState","kind":"typeIdentifier"}]},"doc://co.pointfree.VaporRouting/documentation/NIOEmbedded/EmbeddedChannel/WrongTypeError":{"kind":"symbol","abstract":[{"type":"codeVoice","code":"WrongTypeError"},{"text":" is throws if you use ","type":"text"},{"type":"codeVoice","code":"readInbound"},{"text":" or ","type":"text"},{"type":"codeVoice","code":"readOutbound"},{"text":" and request a certain type but the first","type":"text"},{"text":" ","type":"text"},{"text":"item in the respective buffer is of a different type.","type":"text"}],"type":"topic","role":"symbol","navigatorTitle":[{"text":"WrongTypeError","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"WrongTypeError","kind":"identifier"}],"url":"\/documentation\/nioembedded\/embeddedchannel\/wrongtypeerror","title":"EmbeddedChannel.WrongTypeError","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/WrongTypeError"},"doc://co.pointfree.VaporRouting/documentation/NIOEmbedded/EmbeddedChannel/BufferState":{"type":"topic","role":"symbol","abstract":[{"type":"codeVoice","code":"BufferState"},{"type":"text","text":" represents the state of either the inbound, or the outbound "},{"type":"codeVoice","code":"EmbeddedChannel"},{"type":"text","text":" buffer. These"},{"type":"text","text":" "},{"type":"text","text":"buffers contain data that travelled the "},{"type":"codeVoice","code":"ChannelPipeline"},{"type":"text","text":" all the way."}],"navigatorTitle":[{"kind":"identifier","text":"BufferState"}],"fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"BufferState"}],"title":"EmbeddedChannel.BufferState","kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/BufferState","url":"\/documentation\/nioembedded\/embeddedchannel\/bufferstate"},"doc://co.pointfree.VaporRouting/documentation/NIOEmbedded/EmbeddedChannel/localAddress":{"abstract":[],"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"localAddress"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore13SocketAddressO","text":"SocketAddress"},{"kind":"text","text":"?"}],"type":"topic","role":"symbol","title":"localAddress","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/localAddress","url":"\/documentation\/nioembedded\/embeddedchannel\/localaddress","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOEmbedded/EmbeddedChannel/readInbound(as:)":{"title":"readInbound(as:)","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"readInbound","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"as","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":".Type) "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":"?"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/readInbound(as:)","url":"\/documentation\/nioembedded\/embeddedchannel\/readinbound(as:)","type":"topic","abstract":[{"text":"If available, this method reads one element of type ","type":"text"},{"code":"T","type":"codeVoice"},{"text":" out of the ","type":"text"},{"code":"EmbeddedChannel","type":"codeVoice"},{"type":"text","text":"’s inbound buffer. If the"},{"type":"text","text":" "},{"type":"text","text":"first element was of a different type than requested, "},{"code":"EmbeddedChannel.WrongTypeError","type":"codeVoice"},{"type":"text","text":" will be thrown, if there"},{"type":"text","text":" "},{"type":"text","text":"are no elements in the outbound buffer, "},{"type":"codeVoice","code":"nil"},{"type":"text","text":" will be returned."}],"kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOEmbedded/EmbeddedChannel/throwIfErrorCaught()":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/throwIfErrorCaught()","title":"throwIfErrorCaught()","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"throwIfErrorCaught"},{"kind":"text","text":"() "},{"kind":"keyword","text":"throws"}],"type":"topic","url":"\/documentation\/nioembedded\/embeddedchannel\/throwiferrorcaught()","abstract":[{"text":"This method will throw the error that is stored in the ","type":"text"},{"type":"codeVoice","code":"EmbeddedChannel"},{"text":" if any.","type":"text"}],"kind":"symbol","role":"symbol"}}}