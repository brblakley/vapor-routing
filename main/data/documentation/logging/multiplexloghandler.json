{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Logging\/MultiplexLogHandler"},"kind":"symbol","abstract":[{"text":"A pseudo-","type":"text"},{"code":"LogHandler","type":"codeVoice"},{"text":" that can be used to send messages to multiple other ","type":"text"},{"code":"LogHandler","type":"codeVoice"},{"text":"s.","type":"text"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/logging\/multiplexloghandler"]}],"topicSections":[{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/Logging\/MultiplexLogHandler\/init(_:)"],"title":"Initializers"},{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/Logging\/MultiplexLogHandler\/logLevel","doc:\/\/co.pointfree.VaporRouting\/documentation\/Logging\/MultiplexLogHandler\/metadata"],"title":"Instance Properties"},{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/Logging\/MultiplexLogHandler\/log(level:message:metadata:source:file:function:line:)"],"title":"Instance Methods"},{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/Logging\/MultiplexLogHandler\/subscript(metadataKey:)"],"title":"Subscripts"},{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/Logging\/MultiplexLogHandler\/LogHandler-Implementations"],"generated":true,"title":"Default Implementations"}],"schemaVersion":{"major":0,"minor":3,"patch":0},"metadata":{"navigatorTitle":[{"text":"MultiplexLogHandler","kind":"identifier"}],"symbolKind":"struct","role":"symbol","externalID":"s:7Logging19MultiplexLogHandlerV","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"MultiplexLogHandler","kind":"identifier"}],"title":"MultiplexLogHandler","modules":[{"name":"Logging"}],"roleHeading":"Structure"},"relationshipsSections":[{"kind":"relationships","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/Logging\/LogHandler"],"title":"Conforms To","type":"conformsTo"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"MultiplexLogHandler","kind":"identifier"}],"languages":["swift"],"platforms":["Linux"]}]},{"kind":"content","content":[{"anchor":"Effective-LoggerLevel","level":3,"type":"heading","text":"Effective Logger.Level"},{"inlineContent":[{"type":"text","text":"When first initialized the multiplex log handlers’ log level is automatically set to the minimum of all the"},{"type":"text","text":" "},{"type":"text","text":"passed in log handlers. This ensures that each of the handlers will be able to log at their appropriate level"},{"type":"text","text":" "},{"type":"text","text":"any log events they might be interested in."}],"type":"paragraph"},{"inlineContent":[{"text":"Example:","type":"text"},{"text":" ","type":"text"},{"text":"If log handler ","type":"text"},{"code":"A","type":"codeVoice"},{"text":" is logging at ","type":"text"},{"code":".debug","type":"codeVoice"},{"text":" level, and log handler ","type":"text"},{"code":"B","type":"codeVoice"},{"text":" is logging at ","type":"text"},{"code":".info","type":"codeVoice"},{"text":" level, the constructed","type":"text"},{"text":" ","type":"text"},{"code":"MultiplexLogHandler([A, B])","type":"codeVoice"},{"text":"’s effective log level will be set to ","type":"text"},{"code":".debug","type":"codeVoice"},{"text":", meaning that debug messages will be","type":"text"},{"text":" ","type":"text"},{"text":"handled by this handler, while only logged by the underlying ","type":"text"},{"code":"A","type":"codeVoice"},{"text":" log handler (since ","type":"text"},{"code":"B","type":"codeVoice"},{"text":"’s log level is ","type":"text"},{"code":".info","type":"codeVoice"},{"text":" ","type":"text"},{"text":"and thus it would not actually log that log message).","type":"text"}],"type":"paragraph"},{"inlineContent":[{"text":"If the log level is ","type":"text"},{"inlineContent":[{"type":"text","text":"set"}],"type":"emphasis"},{"text":" on a ","type":"text"},{"code":"Logger","type":"codeVoice"},{"text":" backed by an ","type":"text"},{"code":"MultiplexLogHandler","type":"codeVoice"},{"text":" the log level will apply to ","type":"text"},{"inlineContent":[{"text":"all","type":"text"}],"type":"emphasis"},{"text":" ","type":"text"},{"text":"underlying log handlers, allowing a logger to still select at what level it wants to log regardless of if the underlying","type":"text"},{"text":" ","type":"text"},{"text":"handler is a multiplex or a normal one. If for some reason one might want to not allow changing a log level of a specific","type":"text"},{"text":" ","type":"text"},{"text":"handler passed into the multiplex log handler, this is possible by wrapping it in a handler which ignores any log level changes.","type":"text"}],"type":"paragraph"},{"anchor":"Effective-LoggerMetadata","level":3,"type":"heading","text":"Effective Logger.Metadata"},{"inlineContent":[{"type":"text","text":"Since a "},{"code":"MultiplexLogHandler","type":"codeVoice"},{"type":"text","text":" is a combination of multiple log handlers, the handling of metadata can be non-obvious."},{"type":"text","text":" "},{"type":"text","text":"For example, the underlying log handlers may have metadata of their own set before they are used to initialize the multiplex log handler."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"The multiplex log handler acts purely as proxy and does not make any changes to underlying handler metadata other than"},{"type":"text","text":" "},{"type":"text","text":"proxying writes that users made on a "},{"type":"codeVoice","code":"Logger"},{"type":"text","text":" instance backed by this handler."}],"type":"paragraph"},{"inlineContent":[{"text":"Setting metadata is always proxied through to ","type":"text"},{"inlineContent":[{"text":"all","type":"text"}],"type":"emphasis"},{"text":" underlying handlers, meaning that if a modification like","type":"text"},{"text":" ","type":"text"},{"code":"logger[metadataKey: \"x\"] = \"y\"","type":"codeVoice"},{"text":" is made, all underlying log handlers that this multiplex handler was initiated with","type":"text"},{"text":" ","type":"text"},{"text":"will observe this change.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"Reading metadata from the multiplex log handler MAY need to pick one of conflicting values if the underlying log handlers"},{"type":"text","text":" "},{"type":"text","text":"were already initiated with some metadata before passing them into the multiplex handler. The multiplex handler uses"},{"type":"text","text":" "},{"type":"text","text":"the order in which the handlers were passed in during its initialization as a priority indicator - the first handler’s"},{"type":"text","text":" "},{"type":"text","text":"values are more important than the next handlers values, etc."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"Example:"},{"type":"text","text":" "},{"type":"text","text":"If the multiplex log handler was initiated with two handlers like this: "},{"type":"codeVoice","code":"MultiplexLogHandler([handler1, handler2])"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"The handlers each have some already set metadata: "},{"type":"codeVoice","code":"handler1"},{"type":"text","text":" has metadata values for keys "},{"type":"codeVoice","code":"one"},{"type":"text","text":" and "},{"type":"codeVoice","code":"all"},{"type":"text","text":", and "},{"type":"codeVoice","code":"handler2"},{"type":"text","text":" "},{"type":"text","text":"has values for keys "},{"type":"codeVoice","code":"two"},{"type":"text","text":" and "},{"type":"codeVoice","code":"all"},{"type":"text","text":"."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"A query through the multiplex log handler the key "},{"type":"codeVoice","code":"one"},{"type":"text","text":" naturally returns "},{"type":"codeVoice","code":"handler1"},{"type":"text","text":"’s value, and a query for "},{"type":"codeVoice","code":"two"},{"type":"text","text":" "},{"type":"text","text":"naturally returns "},{"type":"codeVoice","code":"handler2"},{"type":"text","text":"’s value. Querying for the key "},{"type":"codeVoice","code":"all"},{"type":"text","text":" will return "},{"type":"codeVoice","code":"handler1"},{"type":"text","text":"’s value, as that handler was indicated"},{"type":"text","text":" "},{"type":"text","text":"“more important” than the second handler. The same rule applies when querying for the "},{"type":"codeVoice","code":"metadata"},{"type":"text","text":" property of the"},{"type":"text","text":" "},{"type":"text","text":"multiplex log handler - it constructs "},{"type":"codeVoice","code":"Metadata"},{"type":"text","text":" uniquing values."}],"type":"paragraph"}]}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/Logging"]]},"sections":[],"references":{"doc://co.pointfree.VaporRouting/documentation/Logging/MultiplexLogHandler/init(_:)":{"fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"(["},{"kind":"typeIdentifier","text":"LogHandler","preciseIdentifier":"s:7Logging10LogHandlerP"},{"kind":"text","text":"])"}],"role":"symbol","title":"init(_:)","url":"\/documentation\/logging\/multiplexloghandler\/init(_:)","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Logging\/MultiplexLogHandler\/init(_:)","kind":"symbol","abstract":[{"text":"Create a ","type":"text"},{"code":"MultiplexLogHandler","type":"codeVoice"},{"text":".","type":"text"}]},"doc://co.pointfree.VaporRouting/documentation/Logging":{"title":"Logging","role":"collection","type":"topic","abstract":[],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Logging","url":"\/documentation\/logging","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/Logging/MultiplexLogHandler/subscript(metadataKey:)":{"role":"symbol","title":"subscript(metadataKey:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Logging\/MultiplexLogHandler\/subscript(metadataKey:)","kind":"symbol","fragments":[{"text":"subscript","kind":"keyword"},{"text":"(","kind":"text"},{"text":"metadataKey","kind":"externalParam"},{"text":" _: ","kind":"text"},{"preciseIdentifier":"s:7Logging6LoggerV","text":"Logger","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:7Logging6LoggerV8Metadataa","text":"Metadata","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:SD3Keya","text":"Key","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:7Logging6LoggerV","text":"Logger","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:7Logging6LoggerV8Metadataa","text":"Metadata","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:SD5Valuea","text":"Value","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"url":"\/documentation\/logging\/multiplexloghandler\/subscript(metadatakey:)","abstract":[{"type":"text","text":"Add, remove, or change the logging metadata."}],"type":"topic"},"doc://co.pointfree.VaporRouting/documentation/Logging/MultiplexLogHandler/logLevel":{"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Logging\/MultiplexLogHandler\/logLevel","abstract":[{"text":"Get or set the configured log level.","type":"text"}],"role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"logLevel"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Logger","preciseIdentifier":"s:7Logging6LoggerV"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Level","preciseIdentifier":"s:7Logging6LoggerV5LevelO"}],"url":"\/documentation\/logging\/multiplexloghandler\/loglevel","title":"logLevel"},"doc://co.pointfree.VaporRouting/documentation/Logging/MultiplexLogHandler/metadata":{"role":"symbol","url":"\/documentation\/logging\/multiplexloghandler\/metadata","type":"topic","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"metadata","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7Logging6LoggerV","kind":"typeIdentifier","text":"Logger"},{"kind":"text","text":"."},{"preciseIdentifier":"s:7Logging6LoggerV8Metadataa","kind":"typeIdentifier","text":"Metadata"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Logging\/MultiplexLogHandler\/metadata","kind":"symbol","title":"metadata","abstract":[{"text":"Get or set the entire metadata storage as a dictionary.","type":"text"}]},"doc://co.pointfree.VaporRouting/documentation/Logging/MultiplexLogHandler/LogHandler-Implementations":{"role":"collectionGroup","url":"\/documentation\/logging\/multiplexloghandler\/loghandler-implementations","kind":"article","title":"LogHandler Implementations","type":"topic","abstract":[],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Logging\/MultiplexLogHandler\/LogHandler-Implementations"},"doc://co.pointfree.VaporRouting/documentation/Logging/MultiplexLogHandler":{"navigatorTitle":[{"text":"MultiplexLogHandler","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Logging\/MultiplexLogHandler","url":"\/documentation\/logging\/multiplexloghandler","kind":"symbol","role":"symbol","abstract":[{"text":"A pseudo-","type":"text"},{"code":"LogHandler","type":"codeVoice"},{"text":" that can be used to send messages to multiple other ","type":"text"},{"code":"LogHandler","type":"codeVoice"},{"text":"s.","type":"text"}],"title":"MultiplexLogHandler","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"MultiplexLogHandler","kind":"identifier"}]},"doc://co.pointfree.VaporRouting/documentation/Logging/MultiplexLogHandler/log(level:message:metadata:source:file:function:line:)":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Logging\/MultiplexLogHandler\/log(level:message:metadata:source:file:function:line:)","kind":"symbol","abstract":[{"text":"This method is called when a ","type":"text"},{"code":"LogHandler","type":"codeVoice"},{"text":" must emit a log message. There is no need for the ","type":"text"},{"code":"LogHandler","type":"codeVoice"},{"type":"text","text":" to"},{"type":"text","text":" "},{"type":"text","text":"check if the "},{"type":"codeVoice","code":"level"},{"type":"text","text":" is above or below the configured "},{"type":"codeVoice","code":"logLevel"},{"type":"text","text":" as "},{"type":"codeVoice","code":"Logger"},{"type":"text","text":" already performed this check and"},{"type":"text","text":" "},{"type":"text","text":"determined that a message should be logged."}],"title":"log(level:message:metadata:source:file:function:line:)","type":"topic","role":"symbol","url":"\/documentation\/logging\/multiplexloghandler\/log(level:message:metadata:source:file:function:line:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"log"},{"kind":"text","text":"("},{"kind":"externalParam","text":"level"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Logger","preciseIdentifier":"s:7Logging6LoggerV"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Level","preciseIdentifier":"s:7Logging6LoggerV5LevelO"},{"kind":"text","text":", "},{"kind":"externalParam","text":"message"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Logger","preciseIdentifier":"s:7Logging6LoggerV"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Message","preciseIdentifier":"s:7Logging6LoggerV7MessageV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"metadata"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Logger","preciseIdentifier":"s:7Logging6LoggerV"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Metadata","preciseIdentifier":"s:7Logging6LoggerV8Metadataa"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"source"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"kind":"externalParam","text":"file"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"kind":"externalParam","text":"function"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"kind":"externalParam","text":"line"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UInt","preciseIdentifier":"s:Su"},{"kind":"text","text":")"}]},"doc://co.pointfree.VaporRouting/documentation/Logging/LogHandler":{"type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"LogHandler"}],"kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Logging\/LogHandler","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"LogHandler"}],"abstract":[{"type":"text","text":"A "},{"code":"LogHandler","type":"codeVoice"},{"type":"text","text":" is an implementation of a logging backend."}],"title":"LogHandler","url":"\/documentation\/logging\/loghandler"}}}