{"sections":[],"schemaVersion":{"major":0,"minor":3,"patch":0},"kind":"symbol","abstract":[{"type":"text","text":"Specifies the memory ordering semantics of an atomic load operation."}],"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/AtomicLoadOrdering","interfaceLanguage":"swift"},"metadata":{"role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AtomicLoadOrdering","kind":"identifier"}],"symbolKind":"struct","externalID":"s:7Atomics18AtomicLoadOrderingV","navigatorTitle":[{"text":"AtomicLoadOrdering","kind":"identifier"}],"modules":[{"name":"Atomics"}],"roleHeading":"Structure","title":"AtomicLoadOrdering"},"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics"]]},"topicSections":[{"title":"Type Properties","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/AtomicLoadOrdering\/acquiring","doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/AtomicLoadOrdering\/relaxed","doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/AtomicLoadOrdering\/sequentiallyConsistent"]},{"title":"Default Implementations","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/AtomicLoadOrdering\/CustomStringConvertible-Implementations","doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/AtomicLoadOrdering\/Equatable-Implementations","doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/AtomicLoadOrdering\/Hashable-Implementations"],"generated":true}],"relationshipsSections":[{"type":"conformsTo","title":"Conforms To","kind":"relationships","identifiers":["doc:\/\/co.pointfree.VaporRouting\/s23CustomStringConvertibleP","doc:\/\/co.pointfree.VaporRouting\/SQ","doc:\/\/co.pointfree.VaporRouting\/SH","doc:\/\/co.pointfree.VaporRouting\/s8SendableP"]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"@frozen","kind":"attribute"},{"text":" ","kind":"text"},{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AtomicLoadOrdering","kind":"identifier"}],"platforms":["Linux"],"languages":["swift"]}]}],"variants":[{"paths":["\/documentation\/atomics\/atomicloadordering"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://co.pointfree.VaporRouting/documentation/Atomics/AtomicLoadOrdering/acquiring":{"url":"\/documentation\/atomics\/atomicloadordering\/acquiring","kind":"symbol","abstract":[{"type":"text","text":"An acquiring load synchronizes with a releasing operation whose"},{"text":" ","type":"text"},{"text":"value its reads. It ensures that the releasing and acquiring","type":"text"},{"text":" ","type":"text"},{"text":"threads agree that all subsequent variable accesses on the","type":"text"},{"text":" ","type":"text"},{"text":"acquiring thread happen after the atomic operation itself.","type":"text"}],"role":"symbol","title":"acquiring","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/AtomicLoadOrdering\/acquiring","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"acquiring","kind":"identifier"},{"text":": ","kind":"text"},{"text":"AtomicLoadOrdering","kind":"typeIdentifier","preciseIdentifier":"s:7Atomics18AtomicLoadOrderingV"}],"type":"topic"},"doc://co.pointfree.VaporRouting/documentation/Atomics/AtomicLoadOrdering/CustomStringConvertible-Implementations":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/AtomicLoadOrdering\/CustomStringConvertible-Implementations","type":"topic","role":"collectionGroup","abstract":[],"kind":"article","title":"CustomStringConvertible Implementations","url":"\/documentation\/atomics\/atomicloadordering\/customstringconvertible-implementations"},"doc://co.pointfree.VaporRouting/documentation/Atomics":{"type":"topic","abstract":[],"kind":"symbol","role":"collection","title":"Atomics","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics","url":"\/documentation\/atomics"},"doc://co.pointfree.VaporRouting/documentation/Atomics/AtomicLoadOrdering":{"abstract":[{"type":"text","text":"Specifies the memory ordering semantics of an atomic load operation."}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"AtomicLoadOrdering"}],"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/AtomicLoadOrdering","url":"\/documentation\/atomics\/atomicloadordering","title":"AtomicLoadOrdering","kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"AtomicLoadOrdering"}]},"doc://co.pointfree.VaporRouting/documentation/Atomics/AtomicLoadOrdering/sequentiallyConsistent":{"title":"sequentiallyConsistent","kind":"symbol","url":"\/documentation\/atomics\/atomicloadordering\/sequentiallyconsistent","abstract":[{"type":"text","text":"A sequentially consistent load performs an acquiring load and"},{"type":"text","text":" "},{"type":"text","text":"also guarantees that it and all other sequentially consistent"},{"type":"text","text":" "},{"type":"text","text":"atomic operations (loads, stores, updates) appear to be executed"},{"type":"text","text":" "},{"type":"text","text":"in a single, total sequential ordering."}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/AtomicLoadOrdering\/sequentiallyConsistent","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"sequentiallyConsistent","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7Atomics18AtomicLoadOrderingV","text":"AtomicLoadOrdering","kind":"typeIdentifier"}],"type":"topic","role":"symbol"},"doc://co.pointfree.VaporRouting/s23CustomStringConvertibleP":{"title":"Swift.CustomStringConvertible","identifier":"doc:\/\/co.pointfree.VaporRouting\/s23CustomStringConvertibleP","type":"unresolvable"},"doc://co.pointfree.VaporRouting/documentation/Atomics/AtomicLoadOrdering/Hashable-Implementations":{"url":"\/documentation\/atomics\/atomicloadordering\/hashable-implementations","title":"Hashable Implementations","type":"topic","kind":"article","role":"collectionGroup","abstract":[],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/AtomicLoadOrdering\/Hashable-Implementations"},"doc://co.pointfree.VaporRouting/SH":{"title":"Swift.Hashable","identifier":"doc:\/\/co.pointfree.VaporRouting\/SH","type":"unresolvable"},"doc://co.pointfree.VaporRouting/documentation/Atomics/AtomicLoadOrdering/relaxed":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/AtomicLoadOrdering\/relaxed","url":"\/documentation\/atomics\/atomicloadordering\/relaxed","type":"topic","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"relaxed","kind":"identifier"},{"text":": ","kind":"text"},{"text":"AtomicLoadOrdering","preciseIdentifier":"s:7Atomics18AtomicLoadOrderingV","kind":"typeIdentifier"}],"role":"symbol","abstract":[{"type":"text","text":"Guarantees the atomicity of the specific operation on which it is applied,"},{"type":"text","text":" "},{"type":"text","text":"but imposes no ordering constraints on any other variable accesses."}],"kind":"symbol","title":"relaxed"},"doc://co.pointfree.VaporRouting/s8SendableP":{"title":"Swift.Sendable","identifier":"doc:\/\/co.pointfree.VaporRouting\/s8SendableP","type":"unresolvable"},"doc://co.pointfree.VaporRouting/documentation/Atomics/AtomicLoadOrdering/Equatable-Implementations":{"title":"Equatable Implementations","abstract":[],"kind":"article","role":"collectionGroup","type":"topic","url":"\/documentation\/atomics\/atomicloadordering\/equatable-implementations","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/AtomicLoadOrdering\/Equatable-Implementations"},"doc://co.pointfree.VaporRouting/SQ":{"title":"Swift.Equatable","identifier":"doc:\/\/co.pointfree.VaporRouting\/SQ","type":"unresolvable"}}}