{"metadata":{"title":"AtomicIntegerStorage","symbolKind":"protocol","modules":[{"name":"Atomics"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AtomicIntegerStorage","kind":"identifier"}],"externalID":"s:7Atomics20AtomicIntegerStorageP","navigatorTitle":[{"text":"AtomicIntegerStorage","kind":"identifier"}],"roleHeading":"Protocol","role":"symbol"},"kind":"symbol","sections":[],"abstract":[{"type":"text","text":"The storage representation for an atomic integer value, providing"},{"type":"text","text":" "},{"type":"text","text":"pointer-based atomic operations."}],"topicSections":[{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/AtomicIntegerStorage\/atomicLoadThenBitwiseAnd(with:at:ordering:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/AtomicIntegerStorage\/atomicLoadThenBitwiseOr(with:at:ordering:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/AtomicIntegerStorage\/atomicLoadThenBitwiseXor(with:at:ordering:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/AtomicIntegerStorage\/atomicLoadThenWrappingDecrement(by:at:ordering:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/AtomicIntegerStorage\/atomicLoadThenWrappingIncrement(by:at:ordering:)"],"title":"Type Methods"}],"variants":[{"paths":["\/documentation\/atomics\/atomicintegerstorage"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/AtomicIntegerStorage"},"relationshipsSections":[{"type":"inheritsFrom","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/AtomicStorage"],"title":"Inherits From","kind":"relationships"}],"primaryContentSections":[{"declarations":[{"platforms":["Linux"],"tokens":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AtomicIntegerStorage","kind":"identifier"},{"text":" : ","kind":"text"},{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/AtomicStorage","preciseIdentifier":"s:7Atomics13AtomicStorageP","text":"AtomicStorage","kind":"typeIdentifier"}],"languages":["swift"]}],"kind":"declarations"},{"kind":"content","content":[{"anchor":"overview","type":"heading","level":2,"text":"Overview"},{"inlineContent":[{"text":"This is a low-level implementation detail of atomic types; instead","type":"text"},{"text":" ","type":"text"},{"text":"of directly handling conforming types, it is usually better to use","type":"text"},{"text":" ","type":"text"},{"text":"the ","type":"text"},{"code":"UnsafeAtomic","type":"codeVoice"},{"text":" or ","type":"text"},{"code":"ManagedAtomic","type":"codeVoice"},{"text":" generics – these provide a","type":"text"},{"text":" ","type":"text"},{"text":"more reliable interface while ensuring that the storage is","type":"text"},{"text":" ","type":"text"},{"text":"correctly constructed and destroyed.","type":"text"}],"type":"paragraph"}]}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics"]]},"schemaVersion":{"minor":3,"major":0,"patch":0},"references":{"doc://co.pointfree.VaporRouting/documentation/Atomics/AtomicIntegerStorage/atomicLoadThenWrappingIncrement(by:at:ordering:)":{"fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"atomicLoadThenWrappingIncrement"},{"kind":"text","text":"("},{"kind":"externalParam","text":"by"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":", "},{"kind":"externalParam","text":"at"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":">, "},{"kind":"externalParam","text":"ordering"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"AtomicUpdateOrdering","preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Value"}],"url":"\/documentation\/atomics\/atomicintegerstorage\/atomicloadthenwrappingincrement(by:at:ordering:)","role":"symbol","required":true,"abstract":[{"type":"text","text":"Perform an atomic wrapping increment operation on the value referenced by"},{"type":"text","text":" "},{"type":"codeVoice","code":"pointer"},{"type":"text","text":" and return the original value, applying the specified memory"},{"type":"text","text":" "},{"type":"text","text":"ordering."}],"title":"atomicLoadThenWrappingIncrement(by:at:ordering:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/AtomicIntegerStorage\/atomicLoadThenWrappingIncrement(by:at:ordering:)","type":"topic","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/Atomics/AtomicStorage":{"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"AtomicStorage"}],"navigatorTitle":[{"kind":"identifier","text":"AtomicStorage"}],"url":"\/documentation\/atomics\/atomicstorage","type":"topic","role":"symbol","kind":"symbol","title":"AtomicStorage","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/AtomicStorage","abstract":[{"type":"text","text":"The storage representation for an atomic value, providing pointer-based"},{"type":"text","text":" "},{"type":"text","text":"atomic operations. This is a low-level implementation detail of atomic"},{"type":"text","text":" "},{"text":"types; instead of directly handling conforming types, it is usually better","type":"text"},{"text":" ","type":"text"},{"text":"to use the ","type":"text"},{"code":"UnsafeAtomic","type":"codeVoice"},{"text":" or ","type":"text"},{"code":"ManagedAtomic","type":"codeVoice"},{"type":"text","text":" generics – these provide more"},{"type":"text","text":" "},{"type":"text","text":"convenient and safer interfaces while also ensuring that the storage is"},{"type":"text","text":" "},{"type":"text","text":"correctly constructed and destroyed."}]},"doc://co.pointfree.VaporRouting/documentation/Atomics/AtomicIntegerStorage/atomicLoadThenBitwiseAnd(with:at:ordering:)":{"title":"atomicLoadThenBitwiseAnd(with:at:ordering:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/AtomicIntegerStorage\/atomicLoadThenBitwiseAnd(with:at:ordering:)","required":true,"role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"atomicLoadThenBitwiseAnd","kind":"identifier"},{"text":"(","kind":"text"},{"text":"with","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"at","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"text":"ordering","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"AtomicUpdateOrdering","preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Value","kind":"typeIdentifier"}],"kind":"symbol","url":"\/documentation\/atomics\/atomicintegerstorage\/atomicloadthenbitwiseand(with:at:ordering:)","abstract":[{"type":"text","text":"Perform an atomic bitwise AND operation on the value referenced by"},{"type":"text","text":" "},{"code":"pointer","type":"codeVoice"},{"type":"text","text":" and return the original value, applying the specified memory"},{"type":"text","text":" "},{"type":"text","text":"ordering."}]},"doc://co.pointfree.VaporRouting/documentation/Atomics/AtomicIntegerStorage/atomicLoadThenWrappingDecrement(by:at:ordering:)":{"role":"symbol","type":"topic","url":"\/documentation\/atomics\/atomicintegerstorage\/atomicloadthenwrappingdecrement(by:at:ordering:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"atomicLoadThenWrappingDecrement"},{"kind":"text","text":"("},{"kind":"externalParam","text":"by"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":", "},{"kind":"externalParam","text":"at"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"text":">, ","kind":"text"},{"text":"ordering","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"AtomicUpdateOrdering","preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Value","kind":"typeIdentifier"}],"kind":"symbol","abstract":[{"text":"Perform an atomic wrapping decrement operation on the value referenced by","type":"text"},{"text":" ","type":"text"},{"code":"pointer","type":"codeVoice"},{"text":" and return the original value, applying the specified memory","type":"text"},{"text":" ","type":"text"},{"text":"ordering.","type":"text"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/AtomicIntegerStorage\/atomicLoadThenWrappingDecrement(by:at:ordering:)","required":true,"title":"atomicLoadThenWrappingDecrement(by:at:ordering:)"},"doc://co.pointfree.VaporRouting/documentation/Atomics":{"type":"topic","abstract":[],"kind":"symbol","role":"collection","title":"Atomics","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics","url":"\/documentation\/atomics"},"doc://co.pointfree.VaporRouting/documentation/Atomics/AtomicIntegerStorage/atomicLoadThenBitwiseOr(with:at:ordering:)":{"fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"atomicLoadThenBitwiseOr","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"with"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":", "},{"kind":"externalParam","text":"at"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":">, "},{"kind":"externalParam","text":"ordering"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"AtomicUpdateOrdering","preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV"},{"kind":"text","text":") -> "},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Value","kind":"typeIdentifier"}],"title":"atomicLoadThenBitwiseOr(with:at:ordering:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/AtomicIntegerStorage\/atomicLoadThenBitwiseOr(with:at:ordering:)","kind":"symbol","type":"topic","role":"symbol","url":"\/documentation\/atomics\/atomicintegerstorage\/atomicloadthenbitwiseor(with:at:ordering:)","abstract":[{"type":"text","text":"Perform an atomic bitwise OR operation on the value referenced by"},{"type":"text","text":" "},{"type":"codeVoice","code":"pointer"},{"type":"text","text":" and return the original value, applying the specified memory"},{"type":"text","text":" "},{"type":"text","text":"ordering."}],"required":true},"doc://co.pointfree.VaporRouting/documentation/Atomics/AtomicIntegerStorage/atomicLoadThenBitwiseXor(with:at:ordering:)":{"type":"topic","abstract":[{"text":"Perform an atomic bitwise XOR operation on the value referenced by","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"pointer"},{"type":"text","text":" and return the original value, applying the specified memory"},{"type":"text","text":" "},{"type":"text","text":"ordering."}],"fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"atomicLoadThenBitwiseXor"},{"kind":"text","text":"("},{"kind":"externalParam","text":"with"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":", "},{"text":"at","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sp","text":"UnsafeMutablePointer","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"text":"ordering","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV","text":"AtomicUpdateOrdering","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Value","kind":"typeIdentifier"}],"role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/AtomicIntegerStorage\/atomicLoadThenBitwiseXor(with:at:ordering:)","title":"atomicLoadThenBitwiseXor(with:at:ordering:)","url":"\/documentation\/atomics\/atomicintegerstorage\/atomicloadthenbitwisexor(with:at:ordering:)","required":true,"kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/Atomics/AtomicIntegerStorage":{"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"AtomicIntegerStorage"}],"url":"\/documentation\/atomics\/atomicintegerstorage","role":"symbol","abstract":[{"type":"text","text":"The storage representation for an atomic integer value, providing"},{"type":"text","text":" "},{"type":"text","text":"pointer-based atomic operations."}],"title":"AtomicIntegerStorage","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/AtomicIntegerStorage","type":"topic","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"AtomicIntegerStorage"}]}}}