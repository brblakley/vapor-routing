{"abstract":[{"text":"A reference type holding an atomic value, with automatic memory management.","type":"text"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/ManagedAtomic"},"sections":[],"variants":[{"paths":["\/documentation\/atomics\/managedatomic"],"traits":[{"interfaceLanguage":"swift"}]}],"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["Linux"],"tokens":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"ManagedAtomic"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Value"},{"kind":"text","text":"> "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Atomics11AtomicValueP","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/AtomicValue","text":"AtomicValue"}]}],"kind":"declarations"}],"kind":"symbol","metadata":{"roleHeading":"Class","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"ManagedAtomic"}],"modules":[{"name":"Atomics"}],"externalID":"s:7Atomics13ManagedAtomicC","symbolKind":"class","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"ManagedAtomic"}],"title":"ManagedAtomic"},"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics"]]},"schemaVersion":{"minor":3,"patch":0,"major":0},"topicSections":[{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/ManagedAtomic\/init(_:)"],"title":"Initializers"},{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/ManagedAtomic\/bitwiseAndThenLoad(with:ordering:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/ManagedAtomic\/bitwiseOrThenLoad(with:ordering:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/ManagedAtomic\/bitwiseXorThenLoad(with:ordering:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/ManagedAtomic\/compareExchange(expected:desired:ordering:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/ManagedAtomic\/compareExchange(expected:desired:successOrdering:failureOrdering:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/ManagedAtomic\/exchange(_:ordering:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/ManagedAtomic\/load(ordering:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/ManagedAtomic\/loadThenBitwiseAnd(with:ordering:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/ManagedAtomic\/loadThenBitwiseOr(with:ordering:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/ManagedAtomic\/loadThenBitwiseXor(with:ordering:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/ManagedAtomic\/loadThenLogicalAnd(with:ordering:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/ManagedAtomic\/loadThenLogicalOr(with:ordering:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/ManagedAtomic\/loadThenLogicalXor(with:ordering:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/ManagedAtomic\/loadThenWrappingDecrement(by:ordering:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/ManagedAtomic\/loadThenWrappingIncrement(by:ordering:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/ManagedAtomic\/logicalAndThenLoad(with:ordering:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/ManagedAtomic\/logicalOrThenLoad(with:ordering:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/ManagedAtomic\/logicalXorThenLoad(with:ordering:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/ManagedAtomic\/store(_:ordering:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/ManagedAtomic\/weakCompareExchange(expected:desired:successOrdering:failureOrdering:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/ManagedAtomic\/wrappingDecrement(by:ordering:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/ManagedAtomic\/wrappingDecrementThenLoad(by:ordering:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/ManagedAtomic\/wrappingIncrement(by:ordering:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/ManagedAtomic\/wrappingIncrementThenLoad(by:ordering:)"],"title":"Instance Methods"}],"references":{"doc://co.pointfree.VaporRouting/documentation/Atomics":{"type":"topic","abstract":[],"kind":"symbol","role":"collection","title":"Atomics","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics","url":"\/documentation\/atomics"},"doc://co.pointfree.VaporRouting/documentation/Atomics/ManagedAtomic/load(ordering:)":{"type":"topic","url":"\/documentation\/atomics\/managedatomic\/load(ordering:)","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"load","kind":"identifier"},{"text":"(","kind":"text"},{"text":"ordering","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"AtomicLoadOrdering","preciseIdentifier":"s:7Atomics18AtomicLoadOrderingV","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Value"}],"abstract":[{"type":"text","text":"Atomically loads and returns the current value, applying the specified"},{"type":"text","text":" "},{"type":"text","text":"memory ordering."}],"role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/ManagedAtomic\/load(ordering:)","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"Value","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"AtomicValue","type":"codeVoice"},{"text":".","type":"text"}]},"title":"load(ordering:)"},"doc://co.pointfree.VaporRouting/documentation/Atomics/ManagedAtomic/compareExchange(expected:desired:ordering:)":{"title":"compareExchange(expected:desired:ordering:)","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"compareExchange"},{"kind":"text","text":"("},{"kind":"externalParam","text":"expected"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":", "},{"kind":"externalParam","text":"desired"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":", "},{"kind":"externalParam","text":"ordering"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"AtomicUpdateOrdering","preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV"},{"kind":"text","text":") -> (exchanged"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":", original"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":")"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/ManagedAtomic\/compareExchange(expected:desired:ordering:)","role":"symbol","conformance":{"constraints":[{"code":"Value","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"AtomicValue","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"abstract":[{"type":"text","text":"Perform an atomic compare and exchange operation on the current value,"},{"type":"text","text":" "},{"type":"text","text":"applying the specified memory ordering."}],"type":"topic","url":"\/documentation\/atomics\/managedatomic\/compareexchange(expected:desired:ordering:)"},"doc://co.pointfree.VaporRouting/documentation/Atomics/ManagedAtomic/loadThenWrappingIncrement(by:ordering:)":{"abstract":[{"text":"Perform an atomic wrapping add operation and return the original value, applying","type":"text"},{"text":" ","type":"text"},{"text":"the specified memory ordering.","type":"text"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/ManagedAtomic\/loadThenWrappingIncrement(by:ordering:)","type":"topic","role":"symbol","title":"loadThenWrappingIncrement(by:ordering:)","kind":"symbol","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Value"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"AtomicInteger"},{"type":"text","text":"."}]},"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"loadThenWrappingIncrement","kind":"identifier"},{"text":"(","kind":"text"},{"text":"by","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"ordering","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV","text":"AtomicUpdateOrdering","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Value","kind":"typeIdentifier"}],"url":"\/documentation\/atomics\/managedatomic\/loadthenwrappingincrement(by:ordering:)"},"doc://co.pointfree.VaporRouting/documentation/Atomics/ManagedAtomic/weakCompareExchange(expected:desired:successOrdering:failureOrdering:)":{"type":"topic","role":"symbol","url":"\/documentation\/atomics\/managedatomic\/weakcompareexchange(expected:desired:successordering:failureordering:)","title":"weakCompareExchange(expected:desired:successOrdering:failureOrdering:)","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"Value"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"AtomicValue"},{"type":"text","text":"."}]},"kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"weakCompareExchange","kind":"identifier"},{"text":"(","kind":"text"},{"text":"expected","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"desired"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":", "},{"kind":"externalParam","text":"successOrdering"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV","text":"AtomicUpdateOrdering"},{"kind":"text","text":", "},{"kind":"externalParam","text":"failureOrdering"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Atomics18AtomicLoadOrderingV","text":"AtomicLoadOrdering"},{"kind":"text","text":") -> (exchanged"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"kind":"text","text":", original"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":")"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/ManagedAtomic\/weakCompareExchange(expected:desired:successOrdering:failureOrdering:)","abstract":[{"text":"Perform an atomic weak compare and exchange operation on the current","type":"text"},{"text":" ","type":"text"},{"text":"value, applying the specified success\/failure memory orderings. This","type":"text"},{"text":" ","type":"text"},{"text":"compare-exchange variant is allowed to spuriously fail; it is designed to","type":"text"},{"text":" ","type":"text"},{"text":"be called in a loop until it indicates a successful exchange has happened.","type":"text"}]},"doc://co.pointfree.VaporRouting/documentation/Atomics/AtomicValue":{"url":"\/documentation\/atomics\/atomicvalue","title":"AtomicValue","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/AtomicValue","kind":"symbol","type":"topic","abstract":[{"text":"A type that supports atomic operations through a separate atomic storage","type":"text"},{"text":" ","type":"text"},{"text":"representation.","type":"text"}],"navigatorTitle":[{"text":"AtomicValue","kind":"identifier"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AtomicValue","kind":"identifier"}],"role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/Atomics/ManagedAtomic/compareExchange(expected:desired:successOrdering:failureOrdering:)":{"title":"compareExchange(expected:desired:successOrdering:failureOrdering:)","abstract":[{"text":"Perform an atomic compare and exchange operation on the current value,","type":"text"},{"text":" ","type":"text"},{"text":"applying the specified success\/failure memory orderings.","type":"text"}],"conformance":{"constraints":[{"code":"Value","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"AtomicValue","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"kind":"symbol","role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/ManagedAtomic\/compareExchange(expected:desired:successOrdering:failureOrdering:)","type":"topic","url":"\/documentation\/atomics\/managedatomic\/compareexchange(expected:desired:successordering:failureordering:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"compareExchange"},{"kind":"text","text":"("},{"kind":"externalParam","text":"expected"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":", "},{"kind":"externalParam","text":"desired"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":", "},{"kind":"externalParam","text":"successOrdering"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV","text":"AtomicUpdateOrdering"},{"kind":"text","text":", "},{"kind":"externalParam","text":"failureOrdering"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Atomics18AtomicLoadOrderingV","text":"AtomicLoadOrdering"},{"kind":"text","text":") -> (exchanged"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"kind":"text","text":", original"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":")"}]},"doc://co.pointfree.VaporRouting/documentation/Atomics/ManagedAtomic/loadThenWrappingDecrement(by:ordering:)":{"abstract":[{"text":"Perform an atomic wrapping subtract operation and return the original value, applying","type":"text"},{"text":" ","type":"text"},{"text":"the specified memory ordering.","type":"text"}],"role":"symbol","type":"topic","conformance":{"constraints":[{"code":"Value","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"AtomicInteger","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"title":"loadThenWrappingDecrement(by:ordering:)","kind":"symbol","url":"\/documentation\/atomics\/managedatomic\/loadthenwrappingdecrement(by:ordering:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/ManagedAtomic\/loadThenWrappingDecrement(by:ordering:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"loadThenWrappingDecrement","kind":"identifier"},{"text":"(","kind":"text"},{"text":"by","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":", "},{"kind":"externalParam","text":"ordering"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV","kind":"typeIdentifier","text":"AtomicUpdateOrdering"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Value"}]},"doc://co.pointfree.VaporRouting/documentation/Atomics/ManagedAtomic":{"kind":"symbol","role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/ManagedAtomic","navigatorTitle":[{"kind":"identifier","text":"ManagedAtomic"}],"title":"ManagedAtomic","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"ManagedAtomic"}],"type":"topic","url":"\/documentation\/atomics\/managedatomic","abstract":[{"text":"A reference type holding an atomic value, with automatic memory management.","type":"text"}]},"doc://co.pointfree.VaporRouting/documentation/Atomics/ManagedAtomic/bitwiseAndThenLoad(with:ordering:)":{"title":"bitwiseAndThenLoad(with:ordering:)","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"Value"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"AtomicInteger"},{"type":"text","text":"."}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/ManagedAtomic\/bitwiseAndThenLoad(with:ordering:)","url":"\/documentation\/atomics\/managedatomic\/bitwiseandthenload(with:ordering:)","role":"symbol","kind":"symbol","abstract":[{"type":"text","text":"Perform an atomic bitwise AND operation and return the new value, applying"},{"type":"text","text":" "},{"type":"text","text":"the specified memory ordering."}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"bitwiseAndThenLoad","kind":"identifier"},{"text":"(","kind":"text"},{"text":"with","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":", "},{"kind":"externalParam","text":"ordering"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV","text":"AtomicUpdateOrdering"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Value"}]},"doc://co.pointfree.VaporRouting/documentation/Atomics/ManagedAtomic/loadThenLogicalXor(with:ordering:)":{"title":"loadThenLogicalXor(with:ordering:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/ManagedAtomic\/loadThenLogicalXor(with:ordering:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"loadThenLogicalXor","kind":"identifier"},{"text":"(","kind":"text"},{"text":"with","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"ordering","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV","text":"AtomicUpdateOrdering","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Value","kind":"typeIdentifier"}],"url":"\/documentation\/atomics\/managedatomic\/loadthenlogicalxor(with:ordering:)","role":"symbol","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"Value","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"Bool","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"type":"topic","kind":"symbol","abstract":[{"text":"Perform an atomic logical XOR operation and return the original value, applying","type":"text"},{"text":" ","type":"text"},{"text":"the specified memory ordering.","type":"text"}]},"doc://co.pointfree.VaporRouting/documentation/Atomics/ManagedAtomic/wrappingIncrementThenLoad(by:ordering:)":{"abstract":[{"text":"Perform an atomic wrapping add operation and return the new value, applying","type":"text"},{"text":" ","type":"text"},{"text":"the specified memory ordering.","type":"text"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/ManagedAtomic\/wrappingIncrementThenLoad(by:ordering:)","type":"topic","role":"symbol","title":"wrappingIncrementThenLoad(by:ordering:)","kind":"symbol","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"Value","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"AtomicInteger","type":"codeVoice"},{"type":"text","text":"."}]},"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"wrappingIncrementThenLoad","kind":"identifier"},{"text":"(","kind":"text"},{"text":"by","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"ordering","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV","text":"AtomicUpdateOrdering","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Value","kind":"typeIdentifier"}],"url":"\/documentation\/atomics\/managedatomic\/wrappingincrementthenload(by:ordering:)"},"doc://co.pointfree.VaporRouting/documentation/Atomics/ManagedAtomic/loadThenBitwiseOr(with:ordering:)":{"conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"code":"Value","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"AtomicInteger","type":"codeVoice"},{"text":".","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/ManagedAtomic\/loadThenBitwiseOr(with:ordering:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"loadThenBitwiseOr","kind":"identifier"},{"text":"(","kind":"text"},{"text":"with","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"ordering","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"AtomicUpdateOrdering","kind":"typeIdentifier","preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV"},{"text":") -> ","kind":"text"},{"text":"Value","kind":"typeIdentifier"}],"role":"symbol","kind":"symbol","abstract":[{"type":"text","text":"Perform an atomic bitwise OR operation and return the original value, applying"},{"type":"text","text":" "},{"type":"text","text":"the specified memory ordering."}],"url":"\/documentation\/atomics\/managedatomic\/loadthenbitwiseor(with:ordering:)","title":"loadThenBitwiseOr(with:ordering:)"},"doc://co.pointfree.VaporRouting/documentation/Atomics/ManagedAtomic/logicalAndThenLoad(with:ordering:)":{"title":"logicalAndThenLoad(with:ordering:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/ManagedAtomic\/logicalAndThenLoad(with:ordering:)","url":"\/documentation\/atomics\/managedatomic\/logicalandthenload(with:ordering:)","kind":"symbol","conformance":{"constraints":[{"type":"codeVoice","code":"Value"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Bool"},{"type":"text","text":"."}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"logicalAndThenLoad"},{"kind":"text","text":"("},{"kind":"externalParam","text":"with"},{"kind":"text","text":": "},{"text":"Value","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"ordering","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV","text":"AtomicUpdateOrdering","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Value","kind":"typeIdentifier"}],"type":"topic","abstract":[{"type":"text","text":"Perform an atomic logical AND operation and return the original value, applying"},{"type":"text","text":" "},{"text":"the specified memory ordering.","type":"text"}]},"doc://co.pointfree.VaporRouting/documentation/Atomics/ManagedAtomic/logicalOrThenLoad(with:ordering:)":{"role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/ManagedAtomic\/logicalOrThenLoad(with:ordering:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"logicalOrThenLoad"},{"kind":"text","text":"("},{"kind":"externalParam","text":"with"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":", "},{"kind":"externalParam","text":"ordering"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV","text":"AtomicUpdateOrdering"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Value"}],"url":"\/documentation\/atomics\/managedatomic\/logicalorthenload(with:ordering:)","kind":"symbol","type":"topic","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"Value"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Bool"},{"type":"text","text":"."}]},"abstract":[{"type":"text","text":"Perform an atomic logical OR operation and return the original value, applying"},{"type":"text","text":" "},{"type":"text","text":"the specified memory ordering."}],"title":"logicalOrThenLoad(with:ordering:)"},"doc://co.pointfree.VaporRouting/documentation/Atomics/ManagedAtomic/wrappingIncrement(by:ordering:)":{"abstract":[{"text":"Perform an atomic wrapping increment operation applying the","type":"text"},{"text":" ","type":"text"},{"text":"specified memory ordering.","type":"text"}],"url":"\/documentation\/atomics\/managedatomic\/wrappingincrement(by:ordering:)","role":"symbol","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Value"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"AtomicInteger"},{"type":"text","text":"."}]},"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/ManagedAtomic\/wrappingIncrement(by:ordering:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"wrappingIncrement"},{"kind":"text","text":"("},{"kind":"externalParam","text":"by"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":", "},{"kind":"externalParam","text":"ordering"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV","text":"AtomicUpdateOrdering","kind":"typeIdentifier"},{"text":")","kind":"text"}],"title":"wrappingIncrement(by:ordering:)","type":"topic","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/Atomics/ManagedAtomic/loadThenLogicalOr(with:ordering:)":{"type":"topic","abstract":[{"type":"text","text":"Perform an atomic logical OR operation and return the original value, applying"},{"type":"text","text":" "},{"type":"text","text":"the specified memory ordering."}],"url":"\/documentation\/atomics\/managedatomic\/loadthenlogicalor(with:ordering:)","title":"loadThenLogicalOr(with:ordering:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/ManagedAtomic\/loadThenLogicalOr(with:ordering:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"loadThenLogicalOr"},{"kind":"text","text":"("},{"kind":"externalParam","text":"with"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":", "},{"kind":"externalParam","text":"ordering"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV","text":"AtomicUpdateOrdering"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Value"}],"role":"symbol","conformance":{"constraints":[{"code":"Value","type":"codeVoice"},{"type":"text","text":" is "},{"code":"Bool","type":"codeVoice"},{"type":"text","text":"."}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/Atomics/ManagedAtomic/wrappingDecrement(by:ordering:)":{"abstract":[{"text":"Perform an atomic wrapping decrement operation applying the","type":"text"},{"text":" ","type":"text"},{"text":"specified memory ordering.","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"wrappingDecrement","kind":"identifier"},{"text":"(","kind":"text"},{"text":"by","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"ordering","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"AtomicUpdateOrdering","kind":"typeIdentifier","preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV"},{"text":")","kind":"text"}],"conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"Value","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"AtomicInteger","type":"codeVoice"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"role":"symbol","type":"topic","kind":"symbol","url":"\/documentation\/atomics\/managedatomic\/wrappingdecrement(by:ordering:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/ManagedAtomic\/wrappingDecrement(by:ordering:)","title":"wrappingDecrement(by:ordering:)"},"doc://co.pointfree.VaporRouting/documentation/Atomics/ManagedAtomic/init(_:)":{"abstract":[{"text":"Initialize a new managed atomic instance holding the specified initial","type":"text"},{"text":" ","type":"text"},{"text":"value.","type":"text"}],"fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":")","kind":"text"}],"url":"\/documentation\/atomics\/managedatomic\/init(_:)","role":"symbol","title":"init(_:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/ManagedAtomic\/init(_:)","type":"topic","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/Atomics/ManagedAtomic/bitwiseOrThenLoad(with:ordering:)":{"kind":"symbol","title":"bitwiseOrThenLoad(with:ordering:)","url":"\/documentation\/atomics\/managedatomic\/bitwiseorthenload(with:ordering:)","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"bitwiseOrThenLoad","kind":"identifier"},{"text":"(","kind":"text"},{"text":"with","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"ordering"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"AtomicUpdateOrdering","preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Value"}],"conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"Value"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"AtomicInteger"},{"text":".","type":"text"}]},"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/ManagedAtomic\/bitwiseOrThenLoad(with:ordering:)","abstract":[{"text":"Perform an atomic bitwise OR operation and return the new value, applying","type":"text"},{"text":" ","type":"text"},{"text":"the specified memory ordering.","type":"text"}]},"doc://co.pointfree.VaporRouting/documentation/Atomics/ManagedAtomic/store(_:ordering:)":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"store"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":", "},{"kind":"externalParam","text":"ordering"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7Atomics19AtomicStoreOrderingV","kind":"typeIdentifier","text":"AtomicStoreOrdering"},{"kind":"text","text":")"}],"url":"\/documentation\/atomics\/managedatomic\/store(_:ordering:)","abstract":[{"type":"text","text":"Atomically sets the current value to "},{"code":"desired","type":"codeVoice"},{"type":"text","text":", applying the specified"},{"type":"text","text":" "},{"type":"text","text":"memory ordering."}],"conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Value"},{"text":" conforms to ","type":"text"},{"code":"AtomicValue","type":"codeVoice"},{"text":".","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"title":"store(_:ordering:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/ManagedAtomic\/store(_:ordering:)","role":"symbol","kind":"symbol","type":"topic"},"doc://co.pointfree.VaporRouting/documentation/Atomics/ManagedAtomic/wrappingDecrementThenLoad(by:ordering:)":{"title":"wrappingDecrementThenLoad(by:ordering:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"wrappingDecrementThenLoad","kind":"identifier"},{"text":"(","kind":"text"},{"text":"by","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"ordering","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"AtomicUpdateOrdering","kind":"typeIdentifier","preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV"},{"text":") -> ","kind":"text"},{"text":"Value","kind":"typeIdentifier"}],"role":"symbol","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"code":"Value","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"AtomicInteger","type":"codeVoice"},{"text":".","type":"text"}]},"url":"\/documentation\/atomics\/managedatomic\/wrappingdecrementthenload(by:ordering:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/ManagedAtomic\/wrappingDecrementThenLoad(by:ordering:)","kind":"symbol","type":"topic","abstract":[{"text":"Perform an atomic wrapping subtract operation and return the new value, applying","type":"text"},{"text":" ","type":"text"},{"text":"the specified memory ordering.","type":"text"}]},"doc://co.pointfree.VaporRouting/documentation/Atomics/ManagedAtomic/loadThenBitwiseXor(with:ordering:)":{"role":"symbol","title":"loadThenBitwiseXor(with:ordering:)","kind":"symbol","conformance":{"constraints":[{"code":"Value","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"AtomicInteger","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"abstract":[{"text":"Perform an atomic bitwise XOR operation and return the original value, applying","type":"text"},{"text":" ","type":"text"},{"text":"the specified memory ordering.","type":"text"}],"url":"\/documentation\/atomics\/managedatomic\/loadthenbitwisexor(with:ordering:)","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"loadThenBitwiseXor","kind":"identifier"},{"text":"(","kind":"text"},{"text":"with","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"ordering","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV","text":"AtomicUpdateOrdering","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Value","kind":"typeIdentifier"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/ManagedAtomic\/loadThenBitwiseXor(with:ordering:)"},"doc://co.pointfree.VaporRouting/documentation/Atomics/ManagedAtomic/bitwiseXorThenLoad(with:ordering:)":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/ManagedAtomic\/bitwiseXorThenLoad(with:ordering:)","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"bitwiseXorThenLoad"},{"kind":"text","text":"("},{"kind":"externalParam","text":"with"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":", "},{"kind":"externalParam","text":"ordering"},{"kind":"text","text":": "},{"text":"AtomicUpdateOrdering","kind":"typeIdentifier","preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV"},{"text":") -> ","kind":"text"},{"text":"Value","kind":"typeIdentifier"}],"url":"\/documentation\/atomics\/managedatomic\/bitwisexorthenload(with:ordering:)","abstract":[{"type":"text","text":"Perform an atomic bitwise XOR operation and return the new value, applying"},{"type":"text","text":" "},{"type":"text","text":"the specified memory ordering."}],"kind":"symbol","conformance":{"constraints":[{"code":"Value","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"AtomicInteger","type":"codeVoice"},{"text":".","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"title":"bitwiseXorThenLoad(with:ordering:)","type":"topic"},"doc://co.pointfree.VaporRouting/documentation/Atomics/ManagedAtomic/loadThenLogicalAnd(with:ordering:)":{"conformance":{"constraints":[{"type":"codeVoice","code":"Value"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Bool"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/ManagedAtomic\/loadThenLogicalAnd(with:ordering:)","url":"\/documentation\/atomics\/managedatomic\/loadthenlogicaland(with:ordering:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"loadThenLogicalAnd"},{"kind":"text","text":"("},{"kind":"externalParam","text":"with"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":", "},{"kind":"externalParam","text":"ordering"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"AtomicUpdateOrdering","preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Value"}],"title":"loadThenLogicalAnd(with:ordering:)","kind":"symbol","role":"symbol","type":"topic","abstract":[{"text":"Perform an atomic logical AND operation and return the original value, applying","type":"text"},{"text":" ","type":"text"},{"text":"the specified memory ordering.","type":"text"}]},"doc://co.pointfree.VaporRouting/documentation/Atomics/ManagedAtomic/loadThenBitwiseAnd(with:ordering:)":{"type":"topic","kind":"symbol","abstract":[{"type":"text","text":"Perform an atomic bitwise AND operation and return the original value, applying"},{"type":"text","text":" "},{"type":"text","text":"the specified memory ordering."}],"role":"symbol","title":"loadThenBitwiseAnd(with:ordering:)","url":"\/documentation\/atomics\/managedatomic\/loadthenbitwiseand(with:ordering:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/ManagedAtomic\/loadThenBitwiseAnd(with:ordering:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"loadThenBitwiseAnd"},{"kind":"text","text":"("},{"kind":"externalParam","text":"with"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":", "},{"kind":"externalParam","text":"ordering"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV","text":"AtomicUpdateOrdering"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Value"}],"conformance":{"constraints":[{"type":"codeVoice","code":"Value"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"AtomicInteger"},{"type":"text","text":"."}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]}},"doc://co.pointfree.VaporRouting/documentation/Atomics/ManagedAtomic/exchange(_:ordering:)":{"kind":"symbol","type":"topic","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"code":"Value","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"AtomicValue","type":"codeVoice"},{"type":"text","text":"."}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/ManagedAtomic\/exchange(_:ordering:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"exchange"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":", "},{"kind":"externalParam","text":"ordering"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"AtomicUpdateOrdering","preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Value"}],"abstract":[{"type":"text","text":"Atomically sets the current value to "},{"type":"codeVoice","code":"desired"},{"type":"text","text":" and returns the original"},{"type":"text","text":" "},{"type":"text","text":"value, applying the specified memory ordering."}],"role":"symbol","url":"\/documentation\/atomics\/managedatomic\/exchange(_:ordering:)","title":"exchange(_:ordering:)"},"doc://co.pointfree.VaporRouting/documentation/Atomics/ManagedAtomic/logicalXorThenLoad(with:ordering:)":{"title":"logicalXorThenLoad(with:ordering:)","role":"symbol","kind":"symbol","abstract":[{"type":"text","text":"Perform an atomic logical XOR operation and return the original value, applying"},{"type":"text","text":" "},{"type":"text","text":"the specified memory ordering."}],"conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Value"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Bool"},{"text":".","type":"text"}]},"type":"topic","url":"\/documentation\/atomics\/managedatomic\/logicalxorthenload(with:ordering:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"logicalXorThenLoad","kind":"identifier"},{"text":"(","kind":"text"},{"text":"with","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"ordering","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV","text":"AtomicUpdateOrdering","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Value","kind":"typeIdentifier"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/ManagedAtomic\/logicalXorThenLoad(with:ordering:)"}}}