{"metadata":{"modules":[{"name":"Atomics"}],"symbolKind":"method","role":"symbol","title":"compareExchange(expected:desired:successOrdering:failureOrdering:)","externalID":"s:7Atomics13ManagedAtomicC15compareExchange8expected7desired15successOrdering07failureI0Sb9exchanged_x8originaltx_xnAA0c6UpdateI0VAA0c4LoadI0VtF","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"compareExchange","kind":"identifier"},{"text":"(","kind":"text"},{"text":"expected","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"desired","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"successOrdering","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV","text":"AtomicUpdateOrdering","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"failureOrdering","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7Atomics18AtomicLoadOrderingV","text":"AtomicLoadOrdering","kind":"typeIdentifier"},{"text":") -> (exchanged","kind":"text"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"text":", original","kind":"text"},{"text":": ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":")","kind":"text"}],"conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Value"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"AtomicValue"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"extendedModule":"Atomics","roleHeading":"Instance Method"},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/ManagedAtomic\/compareExchange(expected:desired:successOrdering:failureOrdering:)"},"kind":"symbol","hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics","doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/ManagedAtomic"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"compareExchange"},{"kind":"text","text":"("},{"kind":"externalParam","text":"expected"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":", "},{"kind":"externalParam","text":"desired"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":", "},{"kind":"externalParam","text":"successOrdering"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV","text":"AtomicUpdateOrdering","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/AtomicUpdateOrdering"},{"kind":"text","text":", "},{"kind":"externalParam","text":"failureOrdering"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Atomics18AtomicLoadOrderingV","text":"AtomicLoadOrdering","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/AtomicLoadOrdering"},{"kind":"text","text":") -> (exchanged"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"kind":"text","text":", original"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":")"}],"platforms":["Linux"],"languages":["swift"]}]},{"parameters":[{"name":"expected","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The expected current value."}]}]},{"name":"desired","content":[{"inlineContent":[{"type":"text","text":"The desired new value."}],"type":"paragraph"}]},{"name":"successOrdering","content":[{"inlineContent":[{"text":"The memory ordering to apply if this","type":"text"},{"text":" ","type":"text"},{"text":"operation performs the exchange.","type":"text"}],"type":"paragraph"}]},{"name":"failureOrdering","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The memory ordering to apply on this"},{"type":"text","text":" "},{"type":"text","text":"operation does not perform the exchange."}]}]}],"kind":"parameters"},{"kind":"content","content":[{"anchor":"return-value","type":"heading","level":2,"text":"Return Value"},{"type":"paragraph","inlineContent":[{"text":"A tuple ","type":"text"},{"type":"codeVoice","code":"(exchanged, original)"},{"text":", where ","type":"text"},{"type":"codeVoice","code":"exchanged"},{"text":" is true if","type":"text"},{"text":" ","type":"text"},{"text":"the exchange was successful, and ","type":"text"},{"type":"codeVoice","code":"original"},{"text":" is the original value.","type":"text"}]}]},{"kind":"content","content":[{"type":"heading","level":2,"text":"Discussion","anchor":"discussion"},{"type":"paragraph","inlineContent":[{"text":"This operation performs the following algorithm as a single atomic","type":"text"},{"text":" ","type":"text"},{"text":"transaction:","type":"text"}]},{"code":["atomic(self) { currentValue in","  let original = currentValue","  guard original == expected else { return (false, original) }","  currentValue = desired","  return (true, original)","}"],"type":"codeListing","syntax":null},{"type":"paragraph","inlineContent":[{"text":"The ","type":"text"},{"type":"codeVoice","code":"successOrdering"},{"text":" argument specifies the memory ordering to use when","type":"text"},{"text":" ","type":"text"},{"text":"the operation manages to update the current value, while ","type":"text"},{"type":"codeVoice","code":"failureOrdering"},{"text":" ","type":"text"},{"text":"will be used when the operation leaves the value intact.","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"This method implements a “strong” compare and exchange operation"},{"type":"text","text":" "},{"type":"text","text":"that does not permit spurious failures."}]}]}],"sections":[],"variants":[{"paths":["\/documentation\/atomics\/managedatomic\/compareexchange(expected:desired:successordering:failureordering:)"],"traits":[{"interfaceLanguage":"swift"}]}],"abstract":[{"type":"text","text":"Perform an atomic compare and exchange operation on the current value,"},{"type":"text","text":" "},{"type":"text","text":"applying the specified success\/failure memory orderings."}],"schemaVersion":{"major":0,"patch":0,"minor":3},"references":{"doc://co.pointfree.VaporRouting/documentation/Atomics/ManagedAtomic/compareExchange(expected:desired:successOrdering:failureOrdering:)":{"title":"compareExchange(expected:desired:successOrdering:failureOrdering:)","abstract":[{"text":"Perform an atomic compare and exchange operation on the current value,","type":"text"},{"text":" ","type":"text"},{"text":"applying the specified success\/failure memory orderings.","type":"text"}],"conformance":{"constraints":[{"code":"Value","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"AtomicValue","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"kind":"symbol","role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/ManagedAtomic\/compareExchange(expected:desired:successOrdering:failureOrdering:)","type":"topic","url":"\/documentation\/atomics\/managedatomic\/compareexchange(expected:desired:successordering:failureordering:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"compareExchange"},{"kind":"text","text":"("},{"kind":"externalParam","text":"expected"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":", "},{"kind":"externalParam","text":"desired"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":", "},{"kind":"externalParam","text":"successOrdering"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV","text":"AtomicUpdateOrdering"},{"kind":"text","text":", "},{"kind":"externalParam","text":"failureOrdering"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Atomics18AtomicLoadOrderingV","text":"AtomicLoadOrdering"},{"kind":"text","text":") -> (exchanged"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"kind":"text","text":", original"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":")"}]},"doc://co.pointfree.VaporRouting/documentation/Atomics/ManagedAtomic":{"kind":"symbol","role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/ManagedAtomic","navigatorTitle":[{"kind":"identifier","text":"ManagedAtomic"}],"title":"ManagedAtomic","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"ManagedAtomic"}],"type":"topic","url":"\/documentation\/atomics\/managedatomic","abstract":[{"text":"A reference type holding an atomic value, with automatic memory management.","type":"text"}]},"doc://co.pointfree.VaporRouting/documentation/Atomics/AtomicUpdateOrdering":{"title":"AtomicUpdateOrdering","kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/AtomicUpdateOrdering","abstract":[{"text":"Specifies the memory ordering semantics of an atomic read-modify-write","type":"text"},{"text":" ","type":"text"},{"text":"operation.","type":"text"}],"url":"\/documentation\/atomics\/atomicupdateordering","type":"topic","role":"symbol","navigatorTitle":[{"text":"AtomicUpdateOrdering","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AtomicUpdateOrdering","kind":"identifier"}]},"doc://co.pointfree.VaporRouting/documentation/Atomics":{"type":"topic","abstract":[],"kind":"symbol","role":"collection","title":"Atomics","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics","url":"\/documentation\/atomics"},"doc://co.pointfree.VaporRouting/documentation/Atomics/AtomicLoadOrdering":{"abstract":[{"type":"text","text":"Specifies the memory ordering semantics of an atomic load operation."}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"AtomicLoadOrdering"}],"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/AtomicLoadOrdering","url":"\/documentation\/atomics\/atomicloadordering","title":"AtomicLoadOrdering","kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"AtomicLoadOrdering"}]}}}