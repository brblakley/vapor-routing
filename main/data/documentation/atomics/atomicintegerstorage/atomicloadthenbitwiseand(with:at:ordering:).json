{"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/AtomicIntegerStorage\/atomicLoadThenBitwiseAnd(with:at:ordering:)","interfaceLanguage":"swift"},"schemaVersion":{"patch":0,"minor":3,"major":0},"kind":"symbol","metadata":{"title":"atomicLoadThenBitwiseAnd(with:at:ordering:)","required":true,"roleHeading":"Type Method","externalID":"s:7Atomics20AtomicIntegerStorageP24atomicLoadThenBitwiseAnd4with2at8ordering5ValueQzAI_SpyxGAA0B14UpdateOrderingVtFZ","modules":[{"name":"Atomics"}],"fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"atomicLoadThenBitwiseAnd","kind":"identifier"},{"text":"(","kind":"text"},{"text":"with","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"at","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sp","text":"UnsafeMutablePointer","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"text":"ordering","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV","text":"AtomicUpdateOrdering","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Value","kind":"typeIdentifier"}],"role":"symbol","symbolKind":"method"},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"atomicLoadThenBitwiseAnd","kind":"identifier"},{"text":"(","kind":"text"},{"text":"with","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"operand","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"at","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"pointer","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"UnsafeMutablePointer","kind":"typeIdentifier","preciseIdentifier":"s:Sp"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"text":"ordering","kind":"externalParam"},{"text":": ","kind":"text"},{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/AtomicUpdateOrdering","text":"AtomicUpdateOrdering","kind":"typeIdentifier","preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Value","kind":"typeIdentifier"}],"platforms":["Linux"]}]},{"kind":"parameters","parameters":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"An integer value."}]}],"name":"operand"},{"content":[{"inlineContent":[{"type":"text","text":"A memory location previously initialized with a value"},{"type":"text","text":" "},{"type":"text","text":"returned by "},{"code":"prepareAtomicRepresentation(for:)","type":"codeVoice"},{"type":"text","text":"."}],"type":"paragraph"}],"name":"pointer"},{"content":[{"inlineContent":[{"type":"text","text":"The memory ordering to apply on this operation."}],"type":"paragraph"}],"name":"ordering"}]},{"kind":"content","content":[{"level":2,"text":"Return Value","type":"heading","anchor":"return-value"},{"inlineContent":[{"text":"The original value before the operation.","type":"text"}],"type":"paragraph"}]}],"sections":[],"variants":[{"paths":["\/documentation\/atomics\/atomicintegerstorage\/atomicloadthenbitwiseand(with:at:ordering:)"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics","doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/AtomicIntegerStorage"]]},"abstract":[{"type":"text","text":"Perform an atomic bitwise AND operation on the value referenced by"},{"type":"text","text":" "},{"code":"pointer","type":"codeVoice"},{"type":"text","text":" and return the original value, applying the specified memory"},{"type":"text","text":" "},{"type":"text","text":"ordering."}],"references":{"doc://co.pointfree.VaporRouting/documentation/Atomics":{"type":"topic","abstract":[],"kind":"symbol","role":"collection","title":"Atomics","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics","url":"\/documentation\/atomics"},"doc://co.pointfree.VaporRouting/documentation/Atomics/AtomicIntegerStorage/atomicLoadThenBitwiseAnd(with:at:ordering:)":{"title":"atomicLoadThenBitwiseAnd(with:at:ordering:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/AtomicIntegerStorage\/atomicLoadThenBitwiseAnd(with:at:ordering:)","required":true,"role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"atomicLoadThenBitwiseAnd","kind":"identifier"},{"text":"(","kind":"text"},{"text":"with","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"at","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"text":"ordering","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"AtomicUpdateOrdering","preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Value","kind":"typeIdentifier"}],"kind":"symbol","url":"\/documentation\/atomics\/atomicintegerstorage\/atomicloadthenbitwiseand(with:at:ordering:)","abstract":[{"type":"text","text":"Perform an atomic bitwise AND operation on the value referenced by"},{"type":"text","text":" "},{"code":"pointer","type":"codeVoice"},{"type":"text","text":" and return the original value, applying the specified memory"},{"type":"text","text":" "},{"type":"text","text":"ordering."}]},"doc://co.pointfree.VaporRouting/documentation/Atomics/AtomicUpdateOrdering":{"title":"AtomicUpdateOrdering","kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/AtomicUpdateOrdering","abstract":[{"text":"Specifies the memory ordering semantics of an atomic read-modify-write","type":"text"},{"text":" ","type":"text"},{"text":"operation.","type":"text"}],"url":"\/documentation\/atomics\/atomicupdateordering","type":"topic","role":"symbol","navigatorTitle":[{"text":"AtomicUpdateOrdering","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AtomicUpdateOrdering","kind":"identifier"}]},"doc://co.pointfree.VaporRouting/documentation/Atomics/AtomicIntegerStorage":{"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"AtomicIntegerStorage"}],"url":"\/documentation\/atomics\/atomicintegerstorage","role":"symbol","abstract":[{"type":"text","text":"The storage representation for an atomic integer value, providing"},{"type":"text","text":" "},{"type":"text","text":"pointer-based atomic operations."}],"title":"AtomicIntegerStorage","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/AtomicIntegerStorage","type":"topic","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"AtomicIntegerStorage"}]}}}