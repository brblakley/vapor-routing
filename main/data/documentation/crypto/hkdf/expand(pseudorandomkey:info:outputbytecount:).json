{"sections":[],"metadata":{"fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"expand"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"PRK"},{"text":", ","kind":"text"},{"text":"Info","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"pseudoRandomKey","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"PRK"},{"kind":"text","text":", "},{"kind":"externalParam","text":"info"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Info"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"outputByteCount"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"SymmetricKey","preciseIdentifier":"s:6Crypto12SymmetricKeyV"}],"modules":[{"name":"Crypto"}],"roleHeading":"Type Method","symbolKind":"method","role":"symbol","title":"expand(pseudoRandomKey:info:outputByteCount:)","externalID":"s:6Crypto4HKDFV6expand15pseudoRandomKey4info15outputByteCountAA09SymmetricF0Vqd___qd_0_SgSit10Foundation15ContiguousBytesRd__AK12DataProtocolRd_0_r0_lFZ"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/crypto\/hkdf\/expand(pseudorandomkey:info:outputbytecount:)"]}],"schemaVersion":{"minor":3,"patch":0,"major":0},"kind":"symbol","primaryContentSections":[{"declarations":[{"platforms":["Linux"],"tokens":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"expand"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"PRK"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"Info"},{"kind":"text","text":">("},{"kind":"externalParam","text":"pseudoRandomKey"},{"kind":"text","text":" "},{"kind":"internalParam","text":"prk"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"PRK"},{"kind":"text","text":", "},{"kind":"externalParam","text":"info"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Info"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"outputByteCount"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"},{"kind":"text","text":") -> "},{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Crypto\/SymmetricKey","kind":"typeIdentifier","preciseIdentifier":"s:6Crypto12SymmetricKeyV","text":"SymmetricKey"},{"kind":"text","text":" "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"PRK"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation15ContiguousBytesP","text":"ContiguousBytes"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Info"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation12DataProtocolP","text":"DataProtocol"}],"languages":["swift"]}],"kind":"declarations"},{"parameters":[{"name":"pseudoRandomKey","content":[{"inlineContent":[{"text":"The extracted pseudorandom key. This value is expected to be a high-entropy secret. In the HKDF specification it is obtained from the input key material and the salt using the extract method.","type":"text"}],"type":"paragraph"}]},{"name":"info","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Context and application specific information."}]}]},{"name":"outputByteCount","content":[{"inlineContent":[{"type":"text","text":"The desired number of output bytes."}],"type":"paragraph"}]}],"kind":"parameters"},{"kind":"content","content":[{"type":"heading","text":"Return Value","level":2,"anchor":"return-value"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The expanded key bytes."}]}]}],"abstract":[{"text":"The expand function as defined by the specification.","type":"text"},{"text":" ","type":"text"},{"text":"The goal of the expand function is to expand the pseudorandom key to the desired length.","type":"text"},{"text":" ","type":"text"},{"text":"Unless required by a specification, it is recommended to use the one-shot “deriveKey” API instead that performs both extraction and expansion.","type":"text"}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/Crypto","doc:\/\/co.pointfree.VaporRouting\/documentation\/Crypto\/HKDF"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Crypto\/HKDF\/expand(pseudoRandomKey:info:outputByteCount:)"},"references":{"doc://co.pointfree.VaporRouting/documentation/Crypto/HKDF":{"kind":"symbol","role":"symbol","url":"\/documentation\/crypto\/hkdf","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Crypto\/HKDF","abstract":[{"text":"The HMAC-based Extract-and-Expand Key Derivation Function (IETF RFC 5869)","type":"text"},{"text":" ","type":"text"},{"text":"https:\/\/tools.ietf.org\/html\/rfc5869","type":"text"}],"type":"topic","navigatorTitle":[{"kind":"identifier","text":"HKDF"}],"title":"HKDF","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HKDF"}]},"doc://co.pointfree.VaporRouting/documentation/Crypto/HKDF/expand(pseudoRandomKey:info:outputByteCount:)":{"title":"expand(pseudoRandomKey:info:outputByteCount:)","abstract":[{"text":"The expand function as defined by the specification.","type":"text"},{"text":" ","type":"text"},{"text":"The goal of the expand function is to expand the pseudorandom key to the desired length.","type":"text"},{"text":" ","type":"text"},{"text":"Unless required by a specification, it is recommended to use the one-shot “deriveKey” API instead that performs both extraction and expansion.","type":"text"}],"fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"expand","kind":"identifier"},{"text":"<","kind":"text"},{"text":"PRK","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"Info","kind":"genericParameter"},{"kind":"text","text":">("},{"kind":"externalParam","text":"pseudoRandomKey"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"PRK"},{"kind":"text","text":", "},{"kind":"externalParam","text":"info"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Info"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"outputByteCount"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:6Crypto12SymmetricKeyV","text":"SymmetricKey"}],"type":"topic","role":"symbol","kind":"symbol","url":"\/documentation\/crypto\/hkdf\/expand(pseudorandomkey:info:outputbytecount:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Crypto\/HKDF\/expand(pseudoRandomKey:info:outputByteCount:)"},"doc://co.pointfree.VaporRouting/documentation/Crypto/SymmetricKey":{"kind":"symbol","role":"symbol","url":"\/documentation\/crypto\/symmetrickey","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Crypto\/SymmetricKey","abstract":[{"text":"A symmetric key for use with software implementations of cryptographic algorithms.","type":"text"}],"type":"topic","navigatorTitle":[{"kind":"identifier","text":"SymmetricKey"}],"title":"SymmetricKey","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"SymmetricKey"}]},"doc://co.pointfree.VaporRouting/documentation/Crypto":{"abstract":[],"kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Crypto","role":"collection","url":"\/documentation\/crypto","type":"topic","title":"Crypto"}}}