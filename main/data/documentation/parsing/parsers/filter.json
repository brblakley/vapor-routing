{"kind":"symbol","sections":[],"schemaVersion":{"minor":3,"major":0,"patch":0},"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing","doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Parsers"]]},"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Parsers\/Filter","interfaceLanguage":"swift"},"relationshipsSections":[{"kind":"relationships","title":"Conforms To","type":"conformsTo","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Parser","doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/ParserPrinter"]}],"abstract":[{"type":"text","text":"A parser that filters the output of an upstream parser when it does not satisfy a predicate."}],"variants":[{"paths":["\/documentation\/parsing\/parsers\/filter"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"modules":[{"name":"Parsing"}],"navigatorTitle":[{"kind":"identifier","text":"Filter"}],"symbolKind":"struct","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Filter"}],"externalID":"s:7Parsing7ParsersO6FilterV","title":"Parsers.Filter","roleHeading":"Structure","role":"symbol","extendedModule":"Parsing"},"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Parsers\/Filter\/init(upstream:predicate:)"]},{"title":"Instance Properties","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Parsers\/Filter\/predicate","doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Parsers\/Filter\/upstream"]},{"title":"Instance Methods","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Parsers\/Filter\/parse(_:)"]},{"title":"Default Implementations","generated":true,"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Parsers\/Filter\/Parser-Implementations","doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Parsers\/Filter\/ParserPrinter-Implementations"]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Filter","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Upstream","kind":"genericParameter"},{"text":"> ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Upstream","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"Parser","preciseIdentifier":"s:7Parsing6ParserP","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Parser","kind":"typeIdentifier"}]}]},{"kind":"content","content":[{"text":"Overview","anchor":"overview","type":"heading","level":2},{"inlineContent":[{"text":"You will not typically need to interact with this type directly. Instead you will usually use","type":"text"},{"text":" ","type":"text"},{"text":"the ","type":"text"},{"isActive":true,"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Parser\/filter(_:)","type":"reference"},{"type":"text","text":" operation, which constructs this type."}],"type":"paragraph"}]}],"references":{"doc://co.pointfree.VaporRouting/documentation/Parsing/Parsers/Filter/ParserPrinter-Implementations":{"kind":"article","type":"topic","abstract":[],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Parsers\/Filter\/ParserPrinter-Implementations","url":"\/documentation\/parsing\/parsers\/filter\/parserprinter-implementations","title":"ParserPrinter Implementations","role":"collectionGroup"},"doc://co.pointfree.VaporRouting/documentation/Parsing/Parsers/Filter/predicate":{"kind":"symbol","url":"\/documentation\/parsing\/parsers\/filter\/predicate","title":"predicate","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Parsers\/Filter\/predicate","fragments":[{"kind":"keyword","text":"let"},{"text":" ","kind":"text"},{"text":"predicate","kind":"identifier"},{"text":": (","kind":"text"},{"text":"Upstream","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"abstract":[],"role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/Parsing/Parsers/Filter/Parser-Implementations":{"url":"\/documentation\/parsing\/parsers\/filter\/parser-implementations","abstract":[],"type":"topic","title":"Parser Implementations","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Parsers\/Filter\/Parser-Implementations","role":"collectionGroup","kind":"article"},"doc://co.pointfree.VaporRouting/documentation/Parsing":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing","type":"topic","kind":"symbol","url":"\/documentation\/parsing","abstract":[],"title":"Parsing","role":"collection"},"doc://co.pointfree.VaporRouting/documentation/Parsing/Parsers/Filter/parse(_:)":{"kind":"symbol","url":"\/documentation\/parsing\/parsers\/filter\/parse(_:)","title":"parse(_:)","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Parsers\/Filter\/parse(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"parse"},{"kind":"text","text":"("},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Upstream"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Upstream"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Output"}],"abstract":[{"type":"text","text":"Attempts to parse a nebulous piece of data into something more well-structured. Typically"},{"type":"text","text":" "},{"type":"text","text":"you only call this from other "},{"type":"codeVoice","code":"Parser"},{"type":"text","text":" conformances, not when you want to parse a concrete"},{"type":"text","text":" "},{"type":"text","text":"input."}],"role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/Parsing/Parsers/Filter/init(upstream:predicate:)":{"role":"symbol","url":"\/documentation\/parsing\/parsers\/filter\/init(upstream:predicate:)","abstract":[],"title":"init(upstream:predicate:)","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"upstream","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Upstream","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"predicate","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"Upstream","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"text":")","kind":"text"}],"kind":"symbol","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Parsers\/Filter\/init(upstream:predicate:)"},"doc://co.pointfree.VaporRouting/documentation/Parsing/Parser/filter(_:)":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Parser\/filter(_:)","abstract":[{"type":"text","text":"Returns a parser that filters output from this parser when its output does not satisfy the"},{"type":"text","text":" "},{"type":"text","text":"given predicate."}],"type":"topic","kind":"symbol","title":"filter(_:)","url":"\/documentation\/parsing\/parser\/filter(_:)","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"filter"},{"kind":"text","text":"(("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Parsers","preciseIdentifier":"s:7Parsing7ParsersO"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Filter","preciseIdentifier":"s:7Parsing7ParsersO6FilterV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":">"}]},"doc://co.pointfree.VaporRouting/documentation/Parsing/Parsers/Filter":{"abstract":[{"text":"A parser that filters the output of an upstream parser when it does not satisfy a predicate.","type":"text"}],"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Parsers\/Filter","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Filter","kind":"identifier"}],"role":"symbol","title":"Parsers.Filter","navigatorTitle":[{"text":"Filter","kind":"identifier"}],"url":"\/documentation\/parsing\/parsers\/filter","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/Parsing/Parsers/Filter/upstream":{"abstract":[],"url":"\/documentation\/parsing\/parsers\/filter\/upstream","role":"symbol","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Parsers\/Filter\/upstream","title":"upstream","fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"upstream"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Upstream"}],"kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/Parsing/Parser":{"abstract":[{"text":"Declares a type that can incrementally parse an ","type":"text"},{"code":"Output","type":"codeVoice"},{"text":" value from an ","type":"text"},{"code":"Input","type":"codeVoice"},{"text":" value.","type":"text"}],"title":"Parser","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Parser","kind":"identifier"}],"url":"\/documentation\/parsing\/parser","type":"topic","kind":"symbol","role":"symbol","navigatorTitle":[{"text":"Parser","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Parser"},"doc://co.pointfree.VaporRouting/documentation/Parsing/ParserPrinter":{"abstract":[{"type":"text","text":"A "},{"type":"reference","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Parser","isActive":true},{"type":"text","text":" that can incrementally “print” an output value back into an input."}],"role":"symbol","url":"\/documentation\/parsing\/parserprinter","title":"ParserPrinter","kind":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ParserPrinter"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/ParserPrinter","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"Upstream"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"ParserPrinter"},{"type":"text","text":"."}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"navigatorTitle":[{"kind":"identifier","text":"ParserPrinter"}]},"doc://co.pointfree.VaporRouting/documentation/Parsing/Parsers":{"abstract":[{"text":"A namespace for types that serve as parsers.","type":"text"}],"title":"Parsers","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Parsers","kind":"identifier"}],"url":"\/documentation\/parsing\/parsers","type":"topic","kind":"symbol","role":"symbol","navigatorTitle":[{"text":"Parsers","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Parsers"}}}