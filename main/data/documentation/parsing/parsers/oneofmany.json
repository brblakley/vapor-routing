{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Parsers\/OneOfMany"},"variants":[{"paths":["\/documentation\/parsing\/parsers\/oneofmany"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"major":0,"patch":0,"minor":3},"primaryContentSections":[{"declarations":[{"tokens":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"OneOfMany","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Parsers","kind":"genericParameter"},{"text":"> ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Parsers","kind":"typeIdentifier"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","text":"Parser","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Parser","preciseIdentifier":"s:7Parsing6ParserP"}],"languages":["swift"],"platforms":["Linux"]}],"kind":"declarations"},{"content":[{"text":"Overview","type":"heading","level":2,"anchor":"overview"},{"type":"paragraph","inlineContent":[{"text":"You will not typically need to interact with this type directly. Instead you will usually loop","type":"text"},{"text":" ","type":"text"},{"text":"over each parser in a builder block:","type":"text"}]},{"type":"codeListing","code":["enum Role: String, CaseIterable {","  case admin","  case guest","  case member","}","","let roleParser = OneOf {","  for role in Role.allCases {","    status.rawValue.map { role }","  }","}"],"syntax":"swift"}],"kind":"content"}],"sections":[],"topicSections":[{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Parsers\/OneOfMany\/init(_:)"],"title":"Initializers"},{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Parsers\/OneOfMany\/parsers"],"title":"Instance Properties"},{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Parsers\/OneOfMany\/parse(_:)"],"title":"Instance Methods"},{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Parsers\/OneOfMany\/Parser-Implementations","doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Parsers\/OneOfMany\/ParserPrinter-Implementations"],"title":"Default Implementations","generated":true}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing","doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Parsers"]]},"relationshipsSections":[{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Parser","doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/ParserPrinter"],"title":"Conforms To","type":"conformsTo","kind":"relationships"}],"kind":"symbol","metadata":{"extendedModule":"Parsing","externalID":"s:7Parsing7ParsersO9OneOfManyV","modules":[{"name":"Parsing"}],"symbolKind":"struct","role":"symbol","roleHeading":"Structure","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"OneOfMany"}],"title":"Parsers.OneOfMany","navigatorTitle":[{"kind":"identifier","text":"OneOfMany"}]},"abstract":[{"text":"A parser that attempts to run a number of parsers till one succeeds.","type":"text"}],"references":{"doc://co.pointfree.VaporRouting/documentation/Parsing/Parsers/OneOfMany/parsers":{"fragments":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"parsers","kind":"identifier"},{"text":": [","kind":"text"},{"text":"Parsers","kind":"typeIdentifier"},{"text":"]","kind":"text"}],"abstract":[],"title":"parsers","role":"symbol","url":"\/documentation\/parsing\/parsers\/oneofmany\/parsers","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Parsers\/OneOfMany\/parsers","kind":"symbol","type":"topic"},"doc://co.pointfree.VaporRouting/documentation/Parsing/Parsers/OneOfMany":{"url":"\/documentation\/parsing\/parsers\/oneofmany","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Parsers\/OneOfMany","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"OneOfMany","kind":"identifier"}],"role":"symbol","navigatorTitle":[{"text":"OneOfMany","kind":"identifier"}],"abstract":[{"text":"A parser that attempts to run a number of parsers till one succeeds.","type":"text"}],"title":"Parsers.OneOfMany","kind":"symbol","type":"topic"},"doc://co.pointfree.VaporRouting/documentation/Parsing/ParserPrinter":{"conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"code":"Parsers","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"ParserPrinter","type":"codeVoice"},{"text":".","type":"text"}]},"abstract":[{"text":"A ","type":"text"},{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Parser","isActive":true,"type":"reference"},{"text":" that can incrementally “print” an output value back into an input.","type":"text"}],"title":"ParserPrinter","url":"\/documentation\/parsing\/parserprinter","role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ParserPrinter"}],"type":"topic","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"ParserPrinter"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/ParserPrinter"},"doc://co.pointfree.VaporRouting/documentation/Parsing":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing","type":"topic","kind":"symbol","url":"\/documentation\/parsing","abstract":[],"title":"Parsing","role":"collection"},"doc://co.pointfree.VaporRouting/documentation/Parsing/Parsers/OneOfMany/Parser-Implementations":{"url":"\/documentation\/parsing\/parsers\/oneofmany\/parser-implementations","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Parsers\/OneOfMany\/Parser-Implementations","role":"collectionGroup","abstract":[],"title":"Parser Implementations","kind":"article","type":"topic"},"doc://co.pointfree.VaporRouting/documentation/Parsing/Parsers/OneOfMany/init(_:)":{"role":"symbol","type":"topic","kind":"symbol","fragments":[{"text":"init","kind":"identifier"},{"text":"([","kind":"text"},{"text":"Parsers","kind":"typeIdentifier"},{"text":"])","kind":"text"}],"url":"\/documentation\/parsing\/parsers\/oneofmany\/init(_:)","title":"init(_:)","abstract":[],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Parsers\/OneOfMany\/init(_:)"},"doc://co.pointfree.VaporRouting/documentation/Parsing/Parser":{"abstract":[{"text":"Declares a type that can incrementally parse an ","type":"text"},{"code":"Output","type":"codeVoice"},{"text":" value from an ","type":"text"},{"code":"Input","type":"codeVoice"},{"text":" value.","type":"text"}],"title":"Parser","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Parser","kind":"identifier"}],"url":"\/documentation\/parsing\/parser","type":"topic","kind":"symbol","role":"symbol","navigatorTitle":[{"text":"Parser","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Parser"},"doc://co.pointfree.VaporRouting/documentation/Parsing/Parsers":{"abstract":[{"text":"A namespace for types that serve as parsers.","type":"text"}],"title":"Parsers","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Parsers","kind":"identifier"}],"url":"\/documentation\/parsing\/parsers","type":"topic","kind":"symbol","role":"symbol","navigatorTitle":[{"text":"Parsers","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Parsers"},"doc://co.pointfree.VaporRouting/documentation/Parsing/Parsers/OneOfMany/ParserPrinter-Implementations":{"role":"collectionGroup","url":"\/documentation\/parsing\/parsers\/oneofmany\/parserprinter-implementations","kind":"article","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Parsers\/OneOfMany\/ParserPrinter-Implementations","type":"topic","title":"ParserPrinter Implementations","abstract":[]},"doc://co.pointfree.VaporRouting/documentation/Parsing/Parsers/OneOfMany/parse(_:)":{"title":"parse(_:)","kind":"symbol","url":"\/documentation\/parsing\/parsers\/oneofmany\/parse(_:)","role":"symbol","type":"topic","abstract":[{"type":"text","text":"Attempts to parse a nebulous piece of data into something more well-structured. Typically"},{"type":"text","text":" "},{"type":"text","text":"you only call this from other "},{"code":"Parser","type":"codeVoice"},{"type":"text","text":" conformances, not when you want to parse a concrete"},{"type":"text","text":" "},{"type":"text","text":"input."}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"parse"},{"kind":"text","text":"("},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Parsers"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Parsers"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Output"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Parsers\/OneOfMany\/parse(_:)"}}}