{"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/End","interfaceLanguage":"swift"},"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"End","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Input"},{"kind":"text","text":"> "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":" : "},{"preciseIdentifier":"s:Sl","kind":"typeIdentifier","text":"Collection"}],"languages":["swift"],"platforms":["Linux"]}]},{"kind":"content","content":[{"text":"Overview","level":2,"anchor":"overview","type":"heading"},{"inlineContent":[{"text":"Useful as a final parser in a long sequence of parsers to guarantee that all input has been","type":"text"},{"text":" ","type":"text"},{"text":"consumed, especially as ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Many"},{"text":"’s terminal parser.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"text":"This parser will fail if there are input elements that have not been consumed:","type":"text"}],"type":"paragraph"},{"syntax":"swift","code":["input = \"Hello, Blob!!\"","try parser.parse(&input)","\/\/ error: unexpected input","\/\/  --> input:1:13","\/\/ 1 | Hello, Blob!!","\/\/   |             ^ expected end of input"],"type":"codeListing"},{"style":"note","name":"Note","content":[{"type":"paragraph","inlineContent":[{"text":"This parser is automatically inserted when you invoke the non-incremental","type":"text"},{"text":" ","type":"text"},{"type":"reference","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Parser\/parse(_:)-6h1d0","isActive":true},{"text":" and ","type":"text"},{"type":"reference","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Parser\/parse(_:)-2wzcq","isActive":true},{"text":" methods.","type":"text"}]}],"type":"aside"}]}],"sections":[],"variants":[{"paths":["\/documentation\/parsing\/end"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"roleHeading":"Structure","symbolKind":"struct","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"End"}],"externalID":"s:7Parsing3EndV","navigatorTitle":[{"kind":"identifier","text":"End"}],"role":"symbol","title":"End","modules":[{"name":"Parsing"}]},"topicSections":[{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/End\/init()-2egll","doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/End\/init()-7gmzt","doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/End\/init()-8lvil"],"title":"Initializers"},{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/End\/parse(_:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/End\/print(_:into:)"],"title":"Instance Methods"},{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/End\/Parser-Implementations","doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/End\/ParserPrinter-Implementations"],"generated":true,"title":"Default Implementations"}],"relationshipsSections":[{"type":"conformsTo","kind":"relationships","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Parser","doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/ParserPrinter"],"title":"Conforms To"}],"schemaVersion":{"patch":0,"minor":3,"major":0},"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing"]]},"abstract":[{"type":"text","text":"A parser that succeeds if the input is empty, and fails otherwise."}],"references":{"doc://co.pointfree.VaporRouting/documentation/Parsing/ParserPrinter":{"abstract":[{"text":"A ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Parser"},{"text":" that can incrementally “print” an output value back into an input.","type":"text"}],"title":"ParserPrinter","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"ParserPrinter"}],"url":"\/documentation\/parsing\/parserprinter","type":"topic","kind":"symbol","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"ParserPrinter"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/ParserPrinter"},"doc://co.pointfree.VaporRouting/documentation/Parsing/Parser/parse(_:)-2wzcq":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"parse"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"S"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"S"},{"kind":"text","text":") "},{"kind":"keyword","text":"rethrows"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Output"}],"kind":"symbol","title":"parse(_:)","url":"\/documentation\/parsing\/parser\/parse(_:)-2wzcq","abstract":[{"text":"Parse a ","type":"text"},{"code":"String","type":"codeVoice"},{"type":"text","text":" into an output using a UTF-8 parser. This method is more ergnomic to use"},{"type":"text","text":" "},{"type":"text","text":"than "},{"isActive":true,"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Parser\/parse(_:)-76tcw","type":"reference"},{"type":"text","text":" because it accepts a plain string rather than a collection of"},{"type":"text","text":" "},{"type":"text","text":"UTF-8 code units, and the input does not need to be "},{"code":"inout","type":"codeVoice"},{"type":"text","text":"."}],"type":"topic","role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Parser\/parse(_:)-2wzcq"},"doc://co.pointfree.VaporRouting/documentation/Parsing/End":{"abstract":[{"text":"A parser that succeeds if the input is empty, and fails otherwise.","type":"text"}],"title":"End","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"End","kind":"identifier"}],"url":"\/documentation\/parsing\/end","type":"topic","kind":"symbol","role":"symbol","navigatorTitle":[{"text":"End","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/End"},"doc://co.pointfree.VaporRouting/documentation/Parsing/Many":{"url":"\/documentation\/parsing\/many","abstract":[{"text":"A parser that attempts to run another parser as many times as specified, accumulating the result","type":"text"},{"text":" ","type":"text"},{"text":"of the outputs.","type":"text"}],"title":"Many","role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Many","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Many","kind":"identifier"}],"type":"topic","kind":"symbol","navigatorTitle":[{"text":"Many","kind":"identifier"}]},"doc://co.pointfree.VaporRouting/documentation/Parsing/Parser/parse(_:)-76tcw":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Parser\/parse(_:)-76tcw","title":"parse(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"parse"},{"kind":"text","text":"("},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Output"}],"kind":"symbol","type":"topic","role":"symbol","required":true,"defaultImplementations":3,"abstract":[{"type":"text","text":"Attempts to parse a nebulous piece of data into something more well-structured. Typically"},{"type":"text","text":" "},{"type":"text","text":"you only call this from other "},{"type":"codeVoice","code":"Parser"},{"type":"text","text":" conformances, not when you want to parse a concrete"},{"type":"text","text":" "},{"type":"text","text":"input."}],"url":"\/documentation\/parsing\/parser\/parse(_:)-76tcw"},"doc://co.pointfree.VaporRouting/documentation/Parsing/Parser/parse(_:)-6h1d0":{"url":"\/documentation\/parsing\/parser\/parse(_:)-6h1d0","abstract":[{"text":"Parse a collection into an output using a parser that works on the collection’s ","type":"text"},{"type":"codeVoice","code":"SubSequence"},{"text":".","type":"text"},{"text":" ","type":"text"},{"text":"This method is more ergnomic to use than ","type":"text"},{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Parser\/parse(_:)-76tcw","isActive":true,"type":"reference"},{"text":" because it accepts a","type":"text"},{"text":" ","type":"text"},{"text":"collection directly rather than its subsequence, and the input does not need to be ","type":"text"},{"type":"codeVoice","code":"inout"},{"type":"text","text":"."}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Parser\/parse(_:)-6h1d0","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"parse"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"C"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"C"},{"kind":"text","text":") "},{"kind":"keyword","text":"rethrows"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Output"}],"role":"symbol","title":"parse(_:)","type":"topic"},"doc://co.pointfree.VaporRouting/documentation/Parsing/Parser":{"abstract":[{"text":"Declares a type that can incrementally parse an ","type":"text"},{"code":"Output","type":"codeVoice"},{"text":" value from an ","type":"text"},{"code":"Input","type":"codeVoice"},{"text":" value.","type":"text"}],"title":"Parser","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Parser","kind":"identifier"}],"url":"\/documentation\/parsing\/parser","type":"topic","kind":"symbol","role":"symbol","navigatorTitle":[{"text":"Parser","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Parser"},"doc://co.pointfree.VaporRouting/documentation/Parsing/End/init()-7gmzt":{"title":"init()","role":"symbol","fragments":[{"text":"init","kind":"identifier"},{"text":"()","kind":"text"}],"url":"\/documentation\/parsing\/end\/init()-7gmzt","kind":"symbol","abstract":[],"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/End\/init()-7gmzt"},"doc://co.pointfree.VaporRouting/documentation/Parsing/End/parse(_:)":{"abstract":[{"text":"Attempts to parse a nebulous piece of data into something more well-structured. Typically","type":"text"},{"text":" ","type":"text"},{"text":"you only call this from other ","type":"text"},{"code":"Parser","type":"codeVoice"},{"text":" conformances, not when you want to parse a concrete","type":"text"},{"text":" ","type":"text"},{"text":"input.","type":"text"}],"kind":"symbol","title":"parse(_:)","url":"\/documentation\/parsing\/end\/parse(_:)","role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/End\/parse(_:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"parse"},{"kind":"text","text":"("},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"}],"type":"topic"},"doc://co.pointfree.VaporRouting/documentation/Parsing/End/init()-2egll":{"conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Input"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Substring.UTF8View"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"abstract":[],"kind":"symbol","title":"init()","url":"\/documentation\/parsing\/end\/init()-2egll","role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/End\/init()-2egll","fragments":[{"text":"init","kind":"identifier"},{"text":"()","kind":"text"}],"type":"topic"},"doc://co.pointfree.VaporRouting/documentation/Parsing/End/init()-8lvil":{"conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Input"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Substring"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"abstract":[],"kind":"symbol","title":"init()","url":"\/documentation\/parsing\/end\/init()-8lvil","role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/End\/init()-8lvil","fragments":[{"text":"init","kind":"identifier"},{"text":"()","kind":"text"}],"type":"topic"},"doc://co.pointfree.VaporRouting/documentation/Parsing/End/print(_:into:)":{"abstract":[{"text":"Attempts to print a well-structured piece of data into something more nebulous.","type":"text"}],"kind":"symbol","title":"print(_:into:)","url":"\/documentation\/parsing\/end\/print(_:into:)","role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/End\/print(_:into:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"print","kind":"identifier"},{"text":"((), ","kind":"text"},{"text":"into","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"inout","kind":"keyword"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"}],"type":"topic"},"doc://co.pointfree.VaporRouting/documentation/Parsing/End/Parser-Implementations":{"abstract":[],"title":"Parser Implementations","url":"\/documentation\/parsing\/end\/parser-implementations","type":"topic","kind":"article","role":"collectionGroup","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/End\/Parser-Implementations"},"doc://co.pointfree.VaporRouting/documentation/Parsing":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing","type":"topic","kind":"symbol","url":"\/documentation\/parsing","abstract":[],"title":"Parsing","role":"collection"},"doc://co.pointfree.VaporRouting/documentation/Parsing/End/ParserPrinter-Implementations":{"type":"topic","title":"ParserPrinter Implementations","kind":"article","role":"collectionGroup","abstract":[],"url":"\/documentation\/parsing\/end\/parserprinter-implementations","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/End\/ParserPrinter-Implementations"}}}