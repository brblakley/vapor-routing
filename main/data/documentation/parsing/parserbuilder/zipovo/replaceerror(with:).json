{"sections":[],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/ParserBuilder\/ZipOVO\/replaceError(with:)"},"metadata":{"roleHeading":"Instance Method","title":"replaceError(with:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"replaceError"},{"kind":"text","text":"("},{"kind":"externalParam","text":"with"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Parsing7ParsersO","text":"Parsers"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:7Parsing7ParsersO12ReplaceErrorV","text":"ReplaceError"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":">"}],"role":"symbol","externalID":"s:7Parsing6ParserPAAE12replaceError4withAA7ParsersO07ReplaceD0Vy_xG6OutputQz_tF::SYNTHESIZED::s:7Parsing13ParserBuilderO6ZipOVOV","extendedModule":"Parsing","modules":[{"name":"Parsing"}],"symbolKind":"method"},"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing","doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/ParserBuilder","doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/ParserBuilder\/ZipOVO","doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/ParserBuilder\/ZipOVO\/Parser-Implementations"]]},"primaryContentSections":[{"declarations":[{"platforms":["Linux"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"replaceError","kind":"identifier"},{"text":"(","kind":"text"},{"text":"with","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"output","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Parsers","preciseIdentifier":"s:7Parsing7ParsersO","kind":"typeIdentifier","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Parsers"},{"text":".","kind":"text"},{"text":"ReplaceError","preciseIdentifier":"s:7Parsing7ParsersO12ReplaceErrorV","kind":"typeIdentifier","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Parsers\/ReplaceError"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":">","kind":"text"}],"languages":["swift"]}],"kind":"declarations"},{"parameters":[{"name":"output","content":[{"inlineContent":[{"type":"text","text":"An output to return should the upstream parser fail."}],"type":"paragraph"}]}],"kind":"parameters"},{"content":[{"anchor":"return-value","text":"Return Value","type":"heading","level":2},{"type":"paragraph","inlineContent":[{"text":"A parser that never fails.","type":"text"}]}],"kind":"content"},{"content":[{"anchor":"discussion","level":2,"text":"Discussion","type":"heading"},{"inlineContent":[{"text":"Useful for providing a default output for a parser.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"text":"For example, we could create a parser that parses a plus or minus sign and maps the result to","type":"text"},{"text":" ","type":"text"},{"text":"a positive or negative multiplier respectively, or else defaults to a positive multiplier:","type":"text"}],"type":"paragraph"},{"code":["let sign = OneOf {","  \"+\".map { 1 }","  \"-\".map { -1 }","}",".replaceError(with: 1)"],"type":"codeListing","syntax":"swift"},{"inlineContent":[{"type":"text","text":"Notably this parser is non-throwing:"}],"type":"paragraph"},{"code":["var input = \"-123\"[...]","","\/\/ No `try` required:","sign.parse(&input)  \/\/ -1","input               \/\/ \"123\"","","\/\/ Simply returns the default when parsing fails:","sign.parse(&input)  \/\/ 1"],"type":"codeListing","syntax":"swift"},{"inlineContent":[{"type":"text","text":"This means it can be used to turn throwing parsers into non-throwing ones, which is important"},{"type":"text","text":" "},{"type":"text","text":"for building up complex parsers that cannot fail."}],"type":"paragraph"}],"kind":"content"}],"schemaVersion":{"major":0,"patch":0,"minor":3},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/parsing\/parserbuilder\/zipovo\/replaceerror(with:)"]}],"abstract":[{"text":"A parser that replaces its error with a provided output.","type":"text"}],"kind":"symbol","references":{"doc://co.pointfree.VaporRouting/documentation/Parsing/ParserBuilder/ZipOVO/Parser-Implementations":{"type":"topic","abstract":[],"role":"collectionGroup","kind":"article","title":"Parser Implementations","url":"\/documentation\/parsing\/parserbuilder\/zipovo\/parser-implementations","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/ParserBuilder\/ZipOVO\/Parser-Implementations"},"doc://co.pointfree.VaporRouting/documentation/Parsing/ParserBuilder":{"abstract":[{"text":"A custom parameter attribute that constructs parsers from closures. The constructed parser","type":"text"},{"text":" ","type":"text"},{"text":"runs a number of parsers, one after the other, and accumulates their outputs.","type":"text"}],"url":"\/documentation\/parsing\/parserbuilder","type":"topic","navigatorTitle":[{"text":"ParserBuilder","kind":"identifier"}],"kind":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ParserBuilder","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/ParserBuilder","title":"ParserBuilder","role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/Parsing":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing","type":"topic","kind":"symbol","url":"\/documentation\/parsing","abstract":[],"title":"Parsing","role":"collection"},"doc://co.pointfree.VaporRouting/documentation/Parsing/ParserBuilder/ZipOVO/replaceError(with:)":{"kind":"symbol","title":"replaceError(with:)","type":"topic","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"replaceError","kind":"identifier"},{"text":"(","kind":"text"},{"text":"with","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:7Parsing7ParsersO","text":"Parsers","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:7Parsing7ParsersO12ReplaceErrorV","text":"ReplaceError","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":">","kind":"text"}],"url":"\/documentation\/parsing\/parserbuilder\/zipovo\/replaceerror(with:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/ParserBuilder\/ZipOVO\/replaceError(with:)","abstract":[{"text":"A parser that replaces its error with a provided output.","type":"text"}]},"doc://co.pointfree.VaporRouting/documentation/Parsing/ParserBuilder/ZipOVO":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/ParserBuilder\/ZipOVO","abstract":[],"kind":"symbol","navigatorTitle":[{"text":"ZipOVO","kind":"identifier"}],"role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ZipOVO","kind":"identifier"}],"url":"\/documentation\/parsing\/parserbuilder\/zipovo","type":"topic","title":"ParserBuilder.ZipOVO"},"doc://co.pointfree.VaporRouting/documentation/Parsing/Parsers/ReplaceError":{"abstract":[{"text":"A parser that replaces its error with a provided output.","type":"text"}],"kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ReplaceError","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Parsers\/ReplaceError","role":"symbol","navigatorTitle":[{"text":"ReplaceError","kind":"identifier"}],"url":"\/documentation\/parsing\/parsers\/replaceerror","type":"topic","title":"Parsers.ReplaceError"},"doc://co.pointfree.VaporRouting/documentation/Parsing/Parsers":{"abstract":[{"text":"A namespace for types that serve as parsers.","type":"text"}],"title":"Parsers","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Parsers","kind":"identifier"}],"url":"\/documentation\/parsing\/parsers","type":"topic","kind":"symbol","role":"symbol","navigatorTitle":[{"text":"Parsers","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Parsers"}}}