{"metadata":{"externalID":"s:7Parsing13ParserBuilderO7ZipOOVOV","navigatorTitle":[{"kind":"identifier","text":"ZipOOVO"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ZipOOVO"}],"role":"symbol","title":"ParserBuilder.ZipOOVO","extendedModule":"Parsing","modules":[{"name":"Parsing"}],"roleHeading":"Structure","symbolKind":"struct"},"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/ParserBuilder\/ZipOOVO\/init(_:_:_:_:)"]},{"title":"Instance Properties","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/ParserBuilder\/ZipOOVO\/p0","doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/ParserBuilder\/ZipOOVO\/p1","doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/ParserBuilder\/ZipOOVO\/p2","doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/ParserBuilder\/ZipOOVO\/p3"]},{"title":"Instance Methods","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/ParserBuilder\/ZipOOVO\/parse(_:)"]},{"title":"Default Implementations","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/ParserBuilder\/ZipOOVO\/Parser-Implementations","doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/ParserBuilder\/ZipOOVO\/ParserPrinter-Implementations"],"generated":true}],"schemaVersion":{"major":0,"patch":0,"minor":3},"relationshipsSections":[{"type":"conformsTo","title":"Conforms To","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Parser","doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/ParserPrinter"],"kind":"relationships"}],"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ZipOOVO"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"P0"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"P1"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"P2"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"P3"},{"kind":"text","text":"> "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"P0"},{"kind":"text","text":" : "},{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Parser","kind":"typeIdentifier","text":"Parser","preciseIdentifier":"s:7Parsing6ParserP"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"P1"},{"kind":"text","text":" : "},{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Parser","kind":"typeIdentifier","text":"Parser","preciseIdentifier":"s:7Parsing6ParserP"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"P2"},{"text":" : ","kind":"text"},{"text":"Parser","preciseIdentifier":"s:7Parsing6ParserP","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Parser","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"P3","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"Parser","preciseIdentifier":"s:7Parsing6ParserP","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Parser","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"P0","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":" == ","kind":"text"},{"text":"P1","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"P1","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":" == ","kind":"text"},{"text":"P2","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"P2"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":" == "},{"kind":"typeIdentifier","text":"P3"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"P2"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":" == "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"}],"platforms":["Linux"]}],"kind":"declarations"}],"kind":"symbol","identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/ParserBuilder\/ZipOOVO","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing","doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/ParserBuilder"]]},"sections":[],"variants":[{"paths":["\/documentation\/parsing\/parserbuilder\/zipoovo"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://co.pointfree.VaporRouting/documentation/Parsing/ParserBuilder/ZipOOVO/p1":{"fragments":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"p1","kind":"identifier"},{"text":": ","kind":"text"},{"text":"P1","kind":"typeIdentifier"}],"abstract":[],"role":"symbol","url":"\/documentation\/parsing\/parserbuilder\/zipoovo\/p1","kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/ParserBuilder\/ZipOOVO\/p1","type":"topic","title":"p1"},"doc://co.pointfree.VaporRouting/documentation/Parsing/ParserBuilder/ZipOOVO/ParserPrinter-Implementations":{"abstract":[],"role":"collectionGroup","url":"\/documentation\/parsing\/parserbuilder\/zipoovo\/parserprinter-implementations","kind":"article","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/ParserBuilder\/ZipOOVO\/ParserPrinter-Implementations","type":"topic","title":"ParserPrinter Implementations"},"doc://co.pointfree.VaporRouting/documentation/Parsing/ParserBuilder/ZipOOVO/init(_:_:_:_:)":{"fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"P0","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"P1","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"P2","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"P3","kind":"typeIdentifier"},{"text":")","kind":"text"}],"abstract":[],"role":"symbol","url":"\/documentation\/parsing\/parserbuilder\/zipoovo\/init(_:_:_:_:)","kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/ParserBuilder\/ZipOOVO\/init(_:_:_:_:)","type":"topic","title":"init(_:_:_:_:)"},"doc://co.pointfree.VaporRouting/documentation/Parsing":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing","type":"topic","kind":"symbol","url":"\/documentation\/parsing","abstract":[],"title":"Parsing","role":"collection"},"doc://co.pointfree.VaporRouting/documentation/Parsing/ParserBuilder/ZipOOVO":{"kind":"symbol","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/ParserBuilder\/ZipOOVO","url":"\/documentation\/parsing\/parserbuilder\/zipoovo","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ZipOOVO"}],"abstract":[],"title":"ParserBuilder.ZipOOVO","navigatorTitle":[{"kind":"identifier","text":"ZipOOVO"}]},"doc://co.pointfree.VaporRouting/documentation/Parsing/Parser":{"abstract":[{"text":"Declares a type that can incrementally parse an ","type":"text"},{"code":"Output","type":"codeVoice"},{"text":" value from an ","type":"text"},{"code":"Input","type":"codeVoice"},{"text":" value.","type":"text"}],"title":"Parser","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Parser","kind":"identifier"}],"url":"\/documentation\/parsing\/parser","type":"topic","kind":"symbol","role":"symbol","navigatorTitle":[{"text":"Parser","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Parser"},"doc://co.pointfree.VaporRouting/documentation/Parsing/ParserBuilder/ZipOOVO/Parser-Implementations":{"kind":"article","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/ParserBuilder\/ZipOOVO\/Parser-Implementations","url":"\/documentation\/parsing\/parserbuilder\/zipoovo\/parser-implementations","role":"collectionGroup","abstract":[],"title":"Parser Implementations"},"doc://co.pointfree.VaporRouting/documentation/Parsing/ParserBuilder/ZipOOVO/p3":{"fragments":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"p3","kind":"identifier"},{"text":": ","kind":"text"},{"text":"P3","kind":"typeIdentifier"}],"abstract":[],"role":"symbol","url":"\/documentation\/parsing\/parserbuilder\/zipoovo\/p3","kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/ParserBuilder\/ZipOOVO\/p3","type":"topic","title":"p3"},"doc://co.pointfree.VaporRouting/documentation/Parsing/ParserPrinter":{"navigatorTitle":[{"text":"ParserPrinter","kind":"identifier"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ParserPrinter","kind":"identifier"}],"abstract":[{"type":"text","text":"A "},{"type":"reference","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Parser","isActive":true},{"type":"text","text":" that can incrementally “print” an output value back into an input."}],"conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"code":"P0","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"ParserPrinter"},{"type":"text","text":", "},{"type":"codeVoice","code":"P1"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"ParserPrinter"},{"type":"text","text":", "},{"type":"codeVoice","code":"P2"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"ParserPrinter"},{"type":"text","text":", "},{"type":"codeVoice","code":"P3"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"ParserPrinter"},{"type":"text","text":", "},{"type":"codeVoice","code":"P0.Input"},{"type":"text","text":" is "},{"type":"codeVoice","code":"P1.Input"},{"type":"text","text":", "},{"type":"codeVoice","code":"P1.Input"},{"type":"text","text":" is "},{"type":"codeVoice","code":"P2.Input"},{"type":"text","text":", "},{"type":"codeVoice","code":"P2.Input"},{"type":"text","text":" is "},{"type":"codeVoice","code":"P3.Input"},{"type":"text","text":", and "},{"type":"codeVoice","code":"P2.Output"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Void"},{"type":"text","text":"."}]},"role":"symbol","url":"\/documentation\/parsing\/parserprinter","kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/ParserPrinter","type":"topic","title":"ParserPrinter"},"doc://co.pointfree.VaporRouting/documentation/Parsing/ParserBuilder/ZipOOVO/p2":{"fragments":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"p2","kind":"identifier"},{"text":": ","kind":"text"},{"text":"P2","kind":"typeIdentifier"}],"abstract":[],"role":"symbol","url":"\/documentation\/parsing\/parserbuilder\/zipoovo\/p2","kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/ParserBuilder\/ZipOOVO\/p2","type":"topic","title":"p2"},"doc://co.pointfree.VaporRouting/documentation/Parsing/ParserBuilder/ZipOOVO/parse(_:)":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"parse","kind":"identifier"},{"text":"(","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"P0","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"rethrows","kind":"keyword"},{"text":" -> (","kind":"text"},{"text":"P0","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"P1","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"P3","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":")","kind":"text"}],"abstract":[{"type":"text","text":"Attempts to parse a nebulous piece of data into something more well-structured. Typically"},{"type":"text","text":" "},{"type":"text","text":"you only call this from other "},{"type":"codeVoice","code":"Parser"},{"type":"text","text":" conformances, not when you want to parse a concrete"},{"type":"text","text":" "},{"type":"text","text":"input."}],"role":"symbol","url":"\/documentation\/parsing\/parserbuilder\/zipoovo\/parse(_:)","kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/ParserBuilder\/ZipOOVO\/parse(_:)","type":"topic","title":"parse(_:)"},"doc://co.pointfree.VaporRouting/documentation/Parsing/ParserBuilder":{"abstract":[{"text":"A custom parameter attribute that constructs parsers from closures. The constructed parser","type":"text"},{"text":" ","type":"text"},{"text":"runs a number of parsers, one after the other, and accumulates their outputs.","type":"text"}],"url":"\/documentation\/parsing\/parserbuilder","type":"topic","navigatorTitle":[{"text":"ParserBuilder","kind":"identifier"}],"kind":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ParserBuilder","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/ParserBuilder","title":"ParserBuilder","role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/Parsing/ParserBuilder/ZipOOVO/p0":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/ParserBuilder\/ZipOOVO\/p0","abstract":[],"role":"symbol","url":"\/documentation\/parsing\/parserbuilder\/zipoovo\/p0","title":"p0","type":"topic","fragments":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"p0","kind":"identifier"},{"text":": ","kind":"text"},{"text":"P0","kind":"typeIdentifier"}],"kind":"symbol"}}}