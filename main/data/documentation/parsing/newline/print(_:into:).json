{"abstract":[{"text":"Attempts to print a well-structured piece of data into something more nebulous.","type":"text"}],"sections":[],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Newline\/print(_:into:)"},"metadata":{"modules":[{"name":"Parsing"}],"extendedModule":"Parsing","role":"symbol","platforms":[],"roleHeading":"Instance Method","title":"print(_:into:)","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"InputToBytes","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Conversion","type":"codeVoice"},{"text":", ","type":"text"},{"code":"InputToBytes.Input","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"PrependableCollection","type":"codeVoice"},{"text":", ","type":"text"},{"code":"InputToBytes.Input","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"InputToBytes.Input.SubSequence","type":"codeVoice"},{"text":", ","type":"text"},{"code":"InputToBytes.Output","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"PrependableCollection","type":"codeVoice"},{"text":", ","type":"text"},{"code":"InputToBytes.Output","type":"codeVoice"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"InputToBytes.Output.SubSequence"},{"text":", and ","type":"text"},{"type":"codeVoice","code":"InputToBytes.Output.Element"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"UTF8.CodeUnit"},{"text":".","type":"text"}]},"externalID":"s:7Parsing7NewlineVA2A21PrependableCollection5InputRpzAaD6OutputRpzrlE5print_4intoyyt_AFztKF","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"print","kind":"identifier"},{"text":"((), ","kind":"text"},{"text":"into","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Newline","preciseIdentifier":"s:7Parsing7NewlineV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"InputToBytes","kind":"typeIdentifier"},{"text":">.","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"rethrows","kind":"keyword"}],"symbolKind":"method"},"schemaVersion":{"patch":0,"major":0,"minor":3},"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing","doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Newline","doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Newline\/ParserPrinter-Implementations"]]},"kind":"symbol","variants":[{"paths":["\/documentation\/parsing\/newline\/print(_:into:)"],"traits":[{"interfaceLanguage":"swift"}]}],"deprecationSummary":[{"inlineContent":[{"text":"Use 'Whitespace(1, .vertical)' instead","type":"text"}],"type":"paragraph"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"print","kind":"identifier"},{"text":"(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"output","kind":"internalParam"},{"text":": (), ","kind":"text"},{"text":"into","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"input","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:7Parsing7NewlineV","text":"Newline","kind":"typeIdentifier","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Newline"},{"text":"<","kind":"text"},{"text":"InputToBytes","kind":"typeIdentifier"},{"text":">.","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"rethrows","kind":"keyword"}],"languages":["swift"]}]},{"content":[{"anchor":"discussion","type":"heading","level":2,"text":"Discussion"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"Parameters"}],"type":"paragraph"},{"items":[{"content":[{"inlineContent":[{"text":"output: A well-structured value to be printed to the given input.","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"input: A nebulous, mutable piece of data to be incrementally printed into.","type":"text"}],"type":"paragraph"}]}],"type":"unorderedList"}]}]}],"kind":"content"}],"references":{"doc://co.pointfree.VaporRouting/documentation/Parsing":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing","type":"topic","kind":"symbol","url":"\/documentation\/parsing","abstract":[],"title":"Parsing","role":"collection"},"doc://co.pointfree.VaporRouting/documentation/Parsing/Newline/ParserPrinter-Implementations":{"title":"ParserPrinter Implementations","url":"\/documentation\/parsing\/newline\/parserprinter-implementations","abstract":[],"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Newline\/ParserPrinter-Implementations","role":"collectionGroup","kind":"article"},"doc://co.pointfree.VaporRouting/documentation/Parsing/Newline":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Newline"}],"title":"Newline","url":"\/documentation\/parsing\/newline","type":"topic","deprecated":true,"navigatorTitle":[{"kind":"identifier","text":"Newline"}],"kind":"symbol","role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Newline","abstract":[]},"doc://co.pointfree.VaporRouting/documentation/Parsing/Newline/print(_:into:)":{"deprecated":true,"type":"topic","abstract":[{"text":"Attempts to print a well-structured piece of data into something more nebulous.","type":"text"}],"role":"symbol","title":"print(_:into:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"print"},{"kind":"text","text":"((), "},{"kind":"externalParam","text":"into"},{"kind":"text","text":": "},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:7Parsing7NewlineV","text":"Newline","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"InputToBytes","kind":"typeIdentifier"},{"text":">.","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"rethrows","kind":"keyword"}],"conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"InputToBytes"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Conversion"},{"type":"text","text":", "},{"type":"codeVoice","code":"InputToBytes.Input"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"PrependableCollection"},{"type":"text","text":", "},{"type":"codeVoice","code":"InputToBytes.Input"},{"type":"text","text":" is "},{"type":"codeVoice","code":"InputToBytes.Input.SubSequence"},{"type":"text","text":", "},{"type":"codeVoice","code":"InputToBytes.Output"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"PrependableCollection"},{"type":"text","text":", "},{"type":"codeVoice","code":"InputToBytes.Output"},{"type":"text","text":" is "},{"type":"codeVoice","code":"InputToBytes.Output.SubSequence"},{"type":"text","text":", and "},{"type":"codeVoice","code":"InputToBytes.Output.Element"},{"type":"text","text":" is "},{"type":"codeVoice","code":"UTF8.CodeUnit"},{"type":"text","text":"."}]},"url":"\/documentation\/parsing\/newline\/print(_:into:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Newline\/print(_:into:)","kind":"symbol"}}}