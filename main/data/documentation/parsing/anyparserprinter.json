{"sections":[],"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing"]]},"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/AnyParserPrinter","interfaceLanguage":"swift"},"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"AnyParserPrinter"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Input"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"Output"},{"kind":"text","text":">"}]}]},{"content":[{"type":"heading","text":"Overview","level":2,"anchor":"overview"},{"type":"paragraph","inlineContent":[{"text":"This parser-printer forwards its ","type":"text"},{"type":"codeVoice","code":"parse(_:)"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"print(_:to:)"},{"text":" methods to an arbitrary","type":"text"},{"text":" ","type":"text"},{"text":"underlying parser-printer having the same ","type":"text"},{"type":"codeVoice","code":"Input"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"Output"},{"text":" types, hiding the specifics of","type":"text"},{"text":" ","type":"text"},{"text":"the underlying ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/ParserPrinter"},{"text":".","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Use "},{"type":"codeVoice","code":"AnyParserPrinter"},{"type":"text","text":" to wrap a parser whose type has details you don’t want to expose across"},{"type":"text","text":" "},{"type":"text","text":"API boundaries, such as different modules. When you use type erasure this way, you can change"},{"type":"text","text":" "},{"type":"text","text":"the underlying parser over time without affecting existing clients."}]}],"kind":"content"}],"metadata":{"roleHeading":"Structure","externalID":"s:7Parsing16AnyParserPrinterV","navigatorTitle":[{"kind":"identifier","text":"AnyParserPrinter"}],"title":"AnyParserPrinter","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"AnyParserPrinter"}],"modules":[{"name":"Parsing"}],"symbolKind":"struct","role":"symbol"},"schemaVersion":{"minor":3,"patch":0,"major":0},"relationshipsSections":[{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Parser","doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/ParserPrinter"],"title":"Conforms To","kind":"relationships","type":"conformsTo"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/parsing\/anyparserprinter"]}],"abstract":[{"text":"A type-erased parser-printer of ","type":"text"},{"code":"Output","type":"codeVoice"},{"text":" from ","type":"text"},{"code":"Input","type":"codeVoice"},{"text":".","type":"text"}],"topicSections":[{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/AnyParserPrinter\/init(_:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/AnyParserPrinter\/init(parse:print:)"],"title":"Initializers"},{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/AnyParserPrinter\/parse(_:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/AnyParserPrinter\/print(_:into:)"],"title":"Instance Methods"},{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/AnyParserPrinter\/Parser-Implementations","doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/AnyParserPrinter\/ParserPrinter-Implementations"],"title":"Default Implementations","generated":true}],"references":{"doc://co.pointfree.VaporRouting/documentation/Parsing/ParserPrinter":{"abstract":[{"text":"A ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Parser"},{"text":" that can incrementally “print” an output value back into an input.","type":"text"}],"title":"ParserPrinter","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"ParserPrinter"}],"url":"\/documentation\/parsing\/parserprinter","type":"topic","kind":"symbol","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"ParserPrinter"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/ParserPrinter"},"doc://co.pointfree.VaporRouting/documentation/Parsing/AnyParserPrinter/init(parse:print:)":{"abstract":[{"type":"text","text":"Creates a parser-printer that wraps the given closures in its "},{"isActive":true,"type":"reference","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/AnyParserPrinter\/parse(_:)"},{"type":"text","text":" and"},{"type":"text","text":" "},{"type":"codeVoice","code":"print(_:to:)"},{"type":"text","text":" methods."}],"type":"topic","title":"init(parse:print:)","kind":"symbol","url":"\/documentation\/parsing\/anyparserprinter\/init(parse:print:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/AnyParserPrinter\/init(parse:print:)","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"parse","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"print","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":")"}],"role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/Parsing":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing","type":"topic","kind":"symbol","url":"\/documentation\/parsing","abstract":[],"title":"Parsing","role":"collection"},"doc://co.pointfree.VaporRouting/documentation/Parsing/AnyParserPrinter":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/AnyParserPrinter","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"AnyParserPrinter"}],"navigatorTitle":[{"kind":"identifier","text":"AnyParserPrinter"}],"kind":"symbol","url":"\/documentation\/parsing\/anyparserprinter","abstract":[{"type":"text","text":"A type-erased parser-printer of "},{"type":"codeVoice","code":"Output"},{"type":"text","text":" from "},{"type":"codeVoice","code":"Input"},{"text":".","type":"text"}],"title":"AnyParserPrinter","role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/Parsing/AnyParserPrinter/parse(_:)":{"abstract":[{"text":"Attempts to parse a nebulous piece of data into something more well-structured. Typically","type":"text"},{"text":" ","type":"text"},{"text":"you only call this from other ","type":"text"},{"code":"Parser","type":"codeVoice"},{"text":" conformances, not when you want to parse a concrete","type":"text"},{"text":" ","type":"text"},{"text":"input.","type":"text"}],"type":"topic","title":"parse(_:)","kind":"symbol","url":"\/documentation\/parsing\/anyparserprinter\/parse(_:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/AnyParserPrinter\/parse(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"parse"},{"kind":"text","text":"("},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Output"}],"role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/Parsing/AnyParserPrinter/Parser-Implementations":{"title":"Parser Implementations","url":"\/documentation\/parsing\/anyparserprinter\/parser-implementations","role":"collectionGroup","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/AnyParserPrinter\/Parser-Implementations","abstract":[],"type":"topic","kind":"article"},"doc://co.pointfree.VaporRouting/documentation/Parsing/AnyParserPrinter/init(_:)":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/AnyParserPrinter\/init(_:)","type":"topic","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"P"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"P"},{"kind":"text","text":")"}],"kind":"symbol","url":"\/documentation\/parsing\/anyparserprinter\/init(_:)","abstract":[{"type":"text","text":"Creates a type-erasing parser-printer to wrap the given parser-printer."}],"title":"init(_:)","role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/Parsing/AnyParserPrinter/ParserPrinter-Implementations":{"type":"topic","title":"ParserPrinter Implementations","role":"collectionGroup","abstract":[],"kind":"article","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/AnyParserPrinter\/ParserPrinter-Implementations","url":"\/documentation\/parsing\/anyparserprinter\/parserprinter-implementations"},"doc://co.pointfree.VaporRouting/documentation/Parsing/Parser":{"abstract":[{"text":"Declares a type that can incrementally parse an ","type":"text"},{"code":"Output","type":"codeVoice"},{"text":" value from an ","type":"text"},{"code":"Input","type":"codeVoice"},{"text":" value.","type":"text"}],"title":"Parser","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Parser","kind":"identifier"}],"url":"\/documentation\/parsing\/parser","type":"topic","kind":"symbol","role":"symbol","navigatorTitle":[{"text":"Parser","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Parser"},"doc://co.pointfree.VaporRouting/documentation/Parsing/AnyParserPrinter/print(_:into:)":{"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/AnyParserPrinter\/print(_:into:)","kind":"symbol","title":"print(_:into:)","abstract":[{"type":"text","text":"Attempts to print a well-structured piece of data into something more nebulous."}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"print"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":", "},{"kind":"externalParam","text":"into"},{"kind":"text","text":": "},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"}],"role":"symbol","url":"\/documentation\/parsing\/anyparserprinter\/print(_:into:)"}}}