{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Conversions\/BytesToData\/unapply(_:)"},"abstract":[{"text":"Attempts to transform an output back into an input.","type":"text"}],"metadata":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"unapply","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Data","kind":"typeIdentifier","preciseIdentifier":"s:10Foundation4DataV"},{"text":") -> ","kind":"text"},{"text":"Input","kind":"typeIdentifier"}],"symbolKind":"method","roleHeading":"Instance Method","title":"unapply(_:)","role":"symbol","externalID":"s:7Parsing11ConversionsO11BytesToDataV7unapplyyx10Foundation0E0VF","modules":[{"name":"Parsing"}]},"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing","doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Conversions","doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Conversions\/BytesToData"]]},"kind":"symbol","variants":[{"paths":["\/documentation\/parsing\/conversions\/bytestodata\/unapply(_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"unapply"},{"kind":"text","text":"("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"output"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation4DataV","text":"Data"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Input"}],"languages":["swift"],"platforms":["Linux"]}]},{"parameters":[{"content":[{"type":"paragraph","inlineContent":[{"text":"An output value.","type":"text"}]}],"name":"output"}],"kind":"parameters"},{"kind":"content","content":[{"text":"Return Value","anchor":"return-value","type":"heading","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"An “un”-transformed input value."}]}]},{"kind":"content","content":[{"text":"Discussion","anchor":"discussion","type":"heading","level":2},{"inlineContent":[{"type":"text","text":"The reverse process of "},{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Conversion\/apply(_:)","type":"reference","isActive":true},{"type":"text","text":"."}],"type":"paragraph"}]}],"sections":[],"schemaVersion":{"patch":0,"minor":3,"major":0},"references":{"doc://co.pointfree.VaporRouting/documentation/Parsing":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing","type":"topic","kind":"symbol","url":"\/documentation\/parsing","abstract":[],"title":"Parsing","role":"collection"},"doc://co.pointfree.VaporRouting/documentation/Parsing/PrependableCollection":{"url":"\/documentation\/parsing\/prependablecollection","navigatorTitle":[{"text":"PrependableCollection","kind":"identifier"}],"abstract":[{"type":"text","text":"A collection that supports empty initialization and the ability to prepend a sequence of"},{"type":"text","text":" "},{"type":"text","text":"elements of elements to itself."}],"title":"PrependableCollection","type":"topic","kind":"symbol","role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/PrependableCollection","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"PrependableCollection","kind":"identifier"}]},"doc://co.pointfree.VaporRouting/documentation/Parsing/Conversions/BytesToData/unapply(_:)":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Conversions\/BytesToData\/unapply(_:)","kind":"symbol","url":"\/documentation\/parsing\/conversions\/bytestodata\/unapply(_:)","role":"symbol","type":"topic","title":"unapply(_:)","abstract":[{"text":"Attempts to transform an output back into an input.","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"unapply","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Data","kind":"typeIdentifier","preciseIdentifier":"s:10Foundation4DataV"},{"text":") -> ","kind":"text"},{"text":"Input","kind":"typeIdentifier"}]},"doc://co.pointfree.VaporRouting/documentation/Parsing/Conversion/apply(_:)":{"required":true,"abstract":[{"text":"Attempts to transform an input into an output.","type":"text"}],"title":"apply(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"apply","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Output"}],"url":"\/documentation\/parsing\/conversion\/apply(_:)","type":"topic","kind":"symbol","role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Conversion\/apply(_:)"},"doc://co.pointfree.VaporRouting/documentation/Parsing/Conversions/BytesToData":{"url":"\/documentation\/parsing\/conversions\/bytestodata","navigatorTitle":[{"kind":"identifier","text":"BytesToData"}],"abstract":[{"type":"text","text":"A conversion from a "},{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/PrependableCollection","type":"reference","isActive":true},{"type":"text","text":" of UTF-8 bytes to "},{"type":"codeVoice","code":"Data"},{"type":"text","text":"."}],"title":"Conversions.BytesToData","type":"topic","kind":"symbol","role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Conversions\/BytesToData","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"BytesToData"}]},"doc://co.pointfree.VaporRouting/documentation/Parsing/Conversions":{"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Conversions"}],"url":"\/documentation\/parsing\/conversions","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Conversions","type":"topic","abstract":[{"type":"text","text":"A namespace for types that serve as conversions."}],"title":"Conversions","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"Conversions"}],"kind":"symbol"}}}