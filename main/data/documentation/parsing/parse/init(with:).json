{"schemaVersion":{"major":0,"patch":0,"minor":3},"metadata":{"roleHeading":"Initializer","title":"init(with:)","symbolKind":"init","modules":[{"name":"Parsing"}],"externalID":"s:7Parsing5ParseV4withACyxGxyXE_tcfc","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"with"},{"kind":"text","text":": () -> "},{"kind":"typeIdentifier","text":"Parsers"},{"text":")","kind":"text"}],"role":"symbol"},"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing","doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Parse"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Parse\/init(with:)"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/parsing\/parse\/init(with:)"]}],"abstract":[{"text":"An entry point into ","type":"text"},{"isActive":true,"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/ParserBuilder","type":"reference"},{"text":" syntax.","type":"text"}],"sections":[],"kind":"symbol","primaryContentSections":[{"declarations":[{"platforms":["Linux"],"tokens":[{"text":"init","kind":"keyword"},{"text":"(","kind":"text"},{"text":"with","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"build","kind":"internalParam"},{"text":": () -> ","kind":"text"},{"text":"Parsers","kind":"typeIdentifier"},{"text":")","kind":"text"}],"languages":["swift"]}],"kind":"declarations"},{"parameters":[{"content":[{"inlineContent":[{"text":"A parser builder that will accumulate non-void outputs in a tuple.","type":"text"}],"type":"paragraph"}],"name":"with"}],"kind":"parameters"},{"kind":"content","content":[{"anchor":"discussion","level":2,"text":"Discussion","type":"heading"},{"inlineContent":[{"text":"Used to combine the non-void outputs from multiple parsers into a single output by running","type":"text"},{"text":" ","type":"text"},{"text":"each parser in sequence and bundling the results up into a tuple.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"For example, the following parser parses a double, skips a comma, and then parses another"},{"type":"text","text":" "},{"type":"text","text":"double before returning a tuple of each double."}],"type":"paragraph"},{"code":["let coordinate = Parse {","  Double.parser()","  \",\"","  Double.parser()","}","","try coordinate.parse(\"1,2\")  \/\/ (1.0, 2.0)"],"syntax":"swift","type":"codeListing"}]}],"references":{"doc://co.pointfree.VaporRouting/documentation/Parsing":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing","type":"topic","kind":"symbol","url":"\/documentation\/parsing","abstract":[],"title":"Parsing","role":"collection"},"doc://co.pointfree.VaporRouting/documentation/Parsing/ParserBuilder":{"abstract":[{"text":"A custom parameter attribute that constructs parsers from closures. The constructed parser","type":"text"},{"text":" ","type":"text"},{"text":"runs a number of parsers, one after the other, and accumulates their outputs.","type":"text"}],"url":"\/documentation\/parsing\/parserbuilder","type":"topic","navigatorTitle":[{"text":"ParserBuilder","kind":"identifier"}],"kind":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ParserBuilder","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/ParserBuilder","title":"ParserBuilder","role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/Parsing/Parse":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Parse"}],"title":"Parse","type":"topic","url":"\/documentation\/parsing\/parse","role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Parse","kind":"symbol","abstract":[{"type":"text","text":"A parser that attempts to run a number of parsers to accumulate their outputs."}],"navigatorTitle":[{"kind":"identifier","text":"Parse"}]},"doc://co.pointfree.VaporRouting/documentation/Parsing/Parse/init(with:)":{"fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"with","kind":"externalParam"},{"text":": () -> ","kind":"text"},{"text":"Parsers","kind":"typeIdentifier"},{"text":")","kind":"text"}],"title":"init(with:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Parse\/init(with:)","url":"\/documentation\/parsing\/parse\/init(with:)","abstract":[{"text":"An entry point into ","type":"text"},{"isActive":true,"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/ParserBuilder","type":"reference"},{"text":" syntax.","type":"text"}],"type":"topic","kind":"symbol","role":"symbol"}}}