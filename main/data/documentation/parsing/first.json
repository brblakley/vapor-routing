{"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["Linux"],"tokens":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"First"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Input"},{"kind":"text","text":"> "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sl","text":"Collection"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":" == "},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"SubSequence"}]}],"kind":"declarations"},{"content":[{"text":"Overview","level":2,"anchor":"overview","type":"heading"},{"type":"paragraph","inlineContent":[{"text":"This parser is named after ","type":"text"},{"type":"codeVoice","code":"Sequence.first"},{"text":", and attempts to parse the first element from a","type":"text"},{"text":" ","type":"text"},{"text":"collection of input by calling this property under the hood.","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"For example, it can parse the leading character off a substring:"}]},{"code":["var input = \"Hello\"[...]","try First().parse(&input)  \/\/ \"H\"","input                      \/\/ \"ello\""],"syntax":"swift","type":"codeListing"},{"type":"paragraph","inlineContent":[{"text":"This parser fails if the input collection is empty:","type":"text"}]},{"code":["input = \"\"","try First().parse(&input)","\/\/ error: unexpected input","\/\/  --> input:1:1","\/\/ 1 |","\/\/   | ^ expected element"],"syntax":"swift","type":"codeListing"}],"kind":"content"}],"schemaVersion":{"major":0,"minor":3,"patch":0},"relationshipsSections":[{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Parser","doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/ParserPrinter"],"type":"conformsTo","kind":"relationships","title":"Conforms To"}],"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/First","interfaceLanguage":"swift"},"metadata":{"roleHeading":"Structure","role":"symbol","symbolKind":"struct","navigatorTitle":[{"kind":"identifier","text":"First"}],"externalID":"s:7Parsing5FirstV","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"First"}],"modules":[{"name":"Parsing"}],"title":"First"},"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing"]]},"abstract":[{"text":"A parser that consumes the first element from a collection.","type":"text"}],"topicSections":[{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/First\/init()-1y770","doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/First\/init()-7nnzb","doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/First\/init()-9rmtu"],"title":"Initializers"},{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/First\/parse(_:)"],"title":"Instance Methods"},{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/First\/Parser-Implementations","doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/First\/ParserPrinter-Implementations"],"generated":true,"title":"Default Implementations"}],"kind":"symbol","sections":[],"variants":[{"paths":["\/documentation\/parsing\/first"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://co.pointfree.VaporRouting/documentation/Parsing/First/ParserPrinter-Implementations":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/First\/ParserPrinter-Implementations","type":"topic","abstract":[],"url":"\/documentation\/parsing\/first\/parserprinter-implementations","kind":"article","role":"collectionGroup","title":"ParserPrinter Implementations"},"doc://co.pointfree.VaporRouting/documentation/Parsing/ParserPrinter":{"kind":"symbol","title":"ParserPrinter","navigatorTitle":[{"kind":"identifier","text":"ParserPrinter"}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ParserPrinter"}],"conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Input"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"PrependableCollection"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"Input"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"Input.SubSequence"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"role":"symbol","url":"\/documentation\/parsing\/parserprinter","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/ParserPrinter","type":"topic","abstract":[{"type":"text","text":"A "},{"isActive":true,"type":"reference","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Parser"},{"type":"text","text":" that can incrementally “print” an output value back into an input."}]},"doc://co.pointfree.VaporRouting/documentation/Parsing/First/Parser-Implementations":{"url":"\/documentation\/parsing\/first\/parser-implementations","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/First\/Parser-Implementations","abstract":[],"kind":"article","type":"topic","title":"Parser Implementations","role":"collectionGroup"},"doc://co.pointfree.VaporRouting/documentation/Parsing/First/init()-1y770":{"type":"topic","abstract":[],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/First\/init()-1y770","role":"symbol","kind":"symbol","url":"\/documentation\/parsing\/first\/init()-1y770","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"Input","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"Substring","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"title":"init()","fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"()"}]},"doc://co.pointfree.VaporRouting/documentation/Parsing/Parser":{"abstract":[{"text":"Declares a type that can incrementally parse an ","type":"text"},{"code":"Output","type":"codeVoice"},{"text":" value from an ","type":"text"},{"code":"Input","type":"codeVoice"},{"text":" value.","type":"text"}],"title":"Parser","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Parser","kind":"identifier"}],"url":"\/documentation\/parsing\/parser","type":"topic","kind":"symbol","role":"symbol","navigatorTitle":[{"text":"Parser","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Parser"},"doc://co.pointfree.VaporRouting/documentation/Parsing":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing","type":"topic","kind":"symbol","url":"\/documentation\/parsing","abstract":[],"title":"Parsing","role":"collection"},"doc://co.pointfree.VaporRouting/documentation/Parsing/First/init()-7nnzb":{"type":"topic","abstract":[],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/First\/init()-7nnzb","role":"symbol","kind":"symbol","url":"\/documentation\/parsing\/first\/init()-7nnzb","title":"init()","fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"()"}]},"doc://co.pointfree.VaporRouting/documentation/Parsing/First":{"abstract":[{"text":"A parser that consumes the first element from a collection.","type":"text"}],"type":"topic","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"First","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/First","url":"\/documentation\/parsing\/first","title":"First","navigatorTitle":[{"text":"First","kind":"identifier"}]},"doc://co.pointfree.VaporRouting/documentation/Parsing/First/parse(_:)":{"role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"parse"},{"kind":"text","text":"("},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"}],"title":"parse(_:)","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/First\/parse(_:)","url":"\/documentation\/parsing\/first\/parse(_:)","kind":"symbol","abstract":[{"type":"text","text":"Attempts to parse a nebulous piece of data into something more well-structured. Typically"},{"type":"text","text":" "},{"type":"text","text":"you only call this from other "},{"type":"codeVoice","code":"Parser"},{"type":"text","text":" conformances, not when you want to parse a concrete"},{"type":"text","text":" "},{"type":"text","text":"input."}]},"doc://co.pointfree.VaporRouting/documentation/Parsing/First/init()-9rmtu":{"abstract":[],"kind":"symbol","title":"init()","type":"topic","url":"\/documentation\/parsing\/first\/init()-9rmtu","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/First\/init()-9rmtu","role":"symbol","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"Input","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"Substring.UTF8View","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"()"}]}}}