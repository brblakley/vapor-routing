{"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/ParsePrint"},"relationshipsSections":[{"type":"conformsTo","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Parser","doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/ParserPrinter"],"title":"Conforms To","kind":"relationships"}],"schemaVersion":{"minor":3,"major":0,"patch":0},"metadata":{"navigatorTitle":[{"text":"ParsePrint","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ParsePrint","kind":"identifier"}],"role":"symbol","title":"ParsePrint","externalID":"s:7Parsing10ParsePrintV","modules":[{"name":"Parsing"}],"symbolKind":"struct","roleHeading":"Structure"},"primaryContentSections":[{"declarations":[{"platforms":["Linux"],"tokens":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ParsePrint","kind":"identifier"},{"text":"<","kind":"text"},{"text":"ParserPrinters","kind":"genericParameter"},{"text":"> ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ParserPrinters","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"preciseIdentifier":"s:7Parsing13ParserPrinterP","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/ParserPrinter","text":"ParserPrinter","kind":"typeIdentifier"}],"languages":["swift"]}],"kind":"declarations"},{"content":[{"type":"heading","text":"Overview","level":2,"anchor":"overview"},{"type":"paragraph","inlineContent":[{"text":"Although you can build printers with the ","type":"text"},{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Parse","isActive":true,"type":"reference"},{"text":" entry point, as long as everything in the","type":"text"},{"text":" ","type":"text"},{"text":"builder context is a printer, it doesn’t proper connote its intentions. By using ","type":"text"},{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/ParsePrint","isActive":true,"type":"reference"},{"text":" ","type":"text"},{"text":"you can make your intentions clearer:","type":"text"}]},{"type":"codeListing","syntax":"swift","code":["let welcoming = ParsePrint {","  \"Hello \"","  Int.parser()","  \"!\"","}","","try welcoming.parse(\"Hello 42!\") \/\/ 42","try welcoming.print(1729) \/\/ \"Hello 1729\""]},{"type":"paragraph","inlineContent":[{"text":"The ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/ParsePrint"},{"text":" entry point can also help you catch errors earlier if you accidentally use","type":"text"},{"text":" ","type":"text"},{"text":"an operator that is not printer-friendly:","type":"text"}]},{"type":"codeListing","syntax":"swift","code":["let welcoming = ParsePrint {","  \"Hello \"","  Prefix { $0 != \"!\" }.map(String.init)","  \"!\"","}"]},{"type":"aside","style":"note","name":"Note","content":[{"inlineContent":[{"type":"text","text":"Generic struct "},{"code":"ParsePrint","type":"codeVoice"},{"type":"text","text":" requires that "},{"code":"Parsers.Map<Prefix<Substring>, String>","type":"codeVoice"},{"type":"text","text":" conform"},{"type":"text","text":" "},{"type":"text","text":"to "},{"code":"ParserPrinter","type":"codeVoice"}],"type":"paragraph"}]},{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"ParsePrint"},{"type":"text","text":" is a type alias for the "},{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Parse","type":"reference","isActive":true},{"type":"text","text":" parser with its underlying parser constrained to"},{"type":"text","text":" "},{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/ParserPrinter","type":"reference","isActive":true},{"type":"text","text":"."}]}],"kind":"content"}],"abstract":[{"type":"text","text":"An entry to "},{"type":"reference","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/ParserBuilder","isActive":true},{"type":"text","text":" syntax that requires the builder to be a printer."}],"sections":[],"topicSections":[{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/ParsePrint\/init(_:with:)-4k2am","doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/ParsePrint\/init(_:with:)-8nbrc","doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/ParsePrint\/init(with:)"],"title":"Initializers"},{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/ParsePrint\/parserPrinters"],"title":"Instance Properties"},{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/ParsePrint\/parse(_:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/ParsePrint\/print(_:into:)"],"title":"Instance Methods"},{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/ParsePrint\/Parser-Implementations","doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/ParsePrint\/ParserPrinter-Implementations"],"title":"Default Implementations","generated":true}],"variants":[{"paths":["\/documentation\/parsing\/parseprint"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","references":{"doc://co.pointfree.VaporRouting/documentation/Parsing/ParsePrint":{"url":"\/documentation\/parsing\/parseprint","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/ParsePrint","role":"symbol","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ParsePrint","kind":"identifier"}],"title":"ParsePrint","type":"topic","abstract":[{"text":"An entry to ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/ParserBuilder"},{"text":" syntax that requires the builder to be a printer.","type":"text"}],"navigatorTitle":[{"text":"ParsePrint","kind":"identifier"}]},"doc://co.pointfree.VaporRouting/documentation/Parsing/ParsePrint/init(_:with:)-8nbrc":{"role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/ParsePrint\/init(_:with:)-8nbrc","url":"\/documentation\/parsing\/parseprint\/init(_:with:)-8nbrc","type":"topic","abstract":[],"title":"init(_:with:)","fragments":[{"kind":"identifier","text":"init"},{"text":"<","kind":"text"},{"text":"Upstream","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"NewOutput","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"NewOutput","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"with","kind":"externalParam"},{"text":": () -> ","kind":"text"},{"text":"Upstream","kind":"typeIdentifier"},{"text":")","kind":"text"}],"kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/Parsing/ParserPrinter":{"abstract":[{"text":"A ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Parser"},{"text":" that can incrementally “print” an output value back into an input.","type":"text"}],"title":"ParserPrinter","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"ParserPrinter"}],"url":"\/documentation\/parsing\/parserprinter","type":"topic","kind":"symbol","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"ParserPrinter"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/ParserPrinter"},"doc://co.pointfree.VaporRouting/documentation/Parsing/Parser":{"abstract":[{"text":"Declares a type that can incrementally parse an ","type":"text"},{"code":"Output","type":"codeVoice"},{"text":" value from an ","type":"text"},{"code":"Input","type":"codeVoice"},{"text":" value.","type":"text"}],"title":"Parser","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Parser","kind":"identifier"}],"url":"\/documentation\/parsing\/parser","type":"topic","kind":"symbol","role":"symbol","navigatorTitle":[{"text":"Parser","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Parser"},"doc://co.pointfree.VaporRouting/documentation/Parsing/ParsePrint/parserPrinters":{"role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/ParsePrint\/parserPrinters","url":"\/documentation\/parsing\/parseprint\/parserprinters","type":"topic","abstract":[],"title":"parserPrinters","fragments":[{"kind":"keyword","text":"let"},{"text":" ","kind":"text"},{"text":"parserPrinters","kind":"identifier"},{"text":": ","kind":"text"},{"text":"ParserPrinters","kind":"typeIdentifier"}],"kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/Parsing/ParsePrint/print(_:into:)":{"role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/ParsePrint\/print(_:into:)","url":"\/documentation\/parsing\/parseprint\/print(_:into:)","type":"topic","abstract":[{"type":"text","text":"Attempts to print a well-structured piece of data into something more nebulous."}],"title":"print(_:into:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"print","kind":"identifier"},{"text":"(","kind":"text"},{"text":"ParserPrinters","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"into","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ParserPrinters","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"}],"kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/Parsing/ParsePrint/init(_:with:)-4k2am":{"role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/ParsePrint\/init(_:with:)-4k2am","url":"\/documentation\/parsing\/parseprint\/init(_:with:)-4k2am","type":"topic","abstract":[],"title":"init(_:with:)","fragments":[{"kind":"identifier","text":"init"},{"text":"<","kind":"text"},{"text":"Upstream","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"Downstream","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"Downstream","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"with","kind":"externalParam"},{"text":": () -> ","kind":"text"},{"text":"Upstream","kind":"typeIdentifier"},{"text":")","kind":"text"}],"kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/Parsing/ParsePrint/parse(_:)":{"role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/ParsePrint\/parse(_:)","url":"\/documentation\/parsing\/parseprint\/parse(_:)","type":"topic","abstract":[{"type":"text","text":"Attempts to parse a nebulous piece of data into something more well-structured. Typically"},{"type":"text","text":" "},{"type":"text","text":"you only call this from other "},{"code":"Parser","type":"codeVoice"},{"type":"text","text":" conformances, not when you want to parse a concrete"},{"type":"text","text":" "},{"type":"text","text":"input."}],"title":"parse(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"parse","kind":"identifier"},{"text":"(","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ParserPrinters","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"rethrows","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"ParserPrinters","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"}],"kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/Parsing":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing","type":"topic","kind":"symbol","url":"\/documentation\/parsing","abstract":[],"title":"Parsing","role":"collection"},"doc://co.pointfree.VaporRouting/documentation/Parsing/ParserBuilder":{"abstract":[{"text":"A custom parameter attribute that constructs parsers from closures. The constructed parser","type":"text"},{"text":" ","type":"text"},{"text":"runs a number of parsers, one after the other, and accumulates their outputs.","type":"text"}],"url":"\/documentation\/parsing\/parserbuilder","type":"topic","navigatorTitle":[{"text":"ParserBuilder","kind":"identifier"}],"kind":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ParserBuilder","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/ParserBuilder","title":"ParserBuilder","role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/Parsing/ParsePrint/init(with:)":{"abstract":[],"url":"\/documentation\/parsing\/parseprint\/init(with:)","type":"topic","kind":"symbol","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"with","kind":"externalParam"},{"text":": () -> ","kind":"text"},{"text":"ParserPrinters","kind":"typeIdentifier"},{"text":")","kind":"text"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/ParsePrint\/init(with:)","title":"init(with:)","role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/Parsing/ParsePrint/Parser-Implementations":{"role":"collectionGroup","type":"topic","url":"\/documentation\/parsing\/parseprint\/parser-implementations","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/ParsePrint\/Parser-Implementations","abstract":[],"kind":"article","title":"Parser Implementations"},"doc://co.pointfree.VaporRouting/documentation/Parsing/Parse":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Parse"}],"title":"Parse","type":"topic","url":"\/documentation\/parsing\/parse","role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Parse","kind":"symbol","abstract":[{"type":"text","text":"A parser that attempts to run a number of parsers to accumulate their outputs."}],"navigatorTitle":[{"kind":"identifier","text":"Parse"}]},"doc://co.pointfree.VaporRouting/documentation/Parsing/ParsePrint/ParserPrinter-Implementations":{"kind":"article","type":"topic","role":"collectionGroup","url":"\/documentation\/parsing\/parseprint\/parserprinter-implementations","abstract":[],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/ParsePrint\/ParserPrinter-Implementations","title":"ParserPrinter Implementations"}}}