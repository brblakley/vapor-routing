{"metadata":{"modules":[{"name":"RealModule"}],"title":"reciprocal","symbolKind":"property","required":true,"externalID":"s:10RealModule14AlgebraicFieldP10reciprocalxSgvp","roleHeading":"Instance Property","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"reciprocal"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"?"}],"role":"symbol"},"defaultImplementationsSections":[{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/RealModule\/AlgebraicField\/reciprocal-6sp2m"],"title":"AlgebraicField Implementations"},{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/RealModule\/Real\/reciprocal"],"title":"Real Implementations"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"reciprocal","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":"? { ","kind":"text"},{"text":"get","kind":"keyword"},{"text":" }","kind":"text"}],"languages":["swift"],"platforms":["Linux"]}]},{"content":[{"type":"heading","text":"Discussion","anchor":"discussion","level":2},{"inlineContent":[{"text":"If self is zero and the type has no representation for infinity (as","type":"text"},{"text":" ","type":"text"},{"text":"in a typical finite field implementation), or if a reciprocal would","type":"text"},{"text":" ","type":"text"},{"text":"overflow or underflow such that it cannot be accurately represented,","type":"text"},{"text":" ","type":"text"},{"text":"the result is nil.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"text":"Note that ","type":"text"},{"type":"codeVoice","code":".zero.reciprocal"},{"text":", somewhat surprisingly, is ","type":"text"},{"type":"emphasis","inlineContent":[{"type":"text","text":"not"}]},{"text":" nil","type":"text"},{"text":" ","type":"text"},{"text":"for ","type":"text"},{"type":"codeVoice","code":"Real"},{"text":" or ","type":"text"},{"type":"codeVoice","code":"Complex"},{"text":" types, because these types have an","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":".infinity"},{"text":" value that acts as the reciprocal of ","type":"text"},{"type":"codeVoice","code":".zero"},{"text":".","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"If "},{"type":"codeVoice","code":"x.reciprocal"},{"type":"text","text":" is non-nil, you may be able to replace division by "},{"type":"codeVoice","code":"x"},{"type":"text","text":" "},{"text":"with multiplication by this value. It is not advantageous to do this","type":"text"},{"text":" ","type":"text"},{"text":"for an isolated division unless it is a compile-time constant visible","type":"text"},{"text":" ","type":"text"},{"text":"to the compiler, but if you are dividing many values by a single","type":"text"},{"text":" ","type":"text"},{"text":"denominator, this will often be a significant performance win.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"Note that this will slightly perturb results for some fields with"},{"type":"text","text":" "},{"type":"text","text":"approximate arithmetic, such as real types–using a normal division"},{"type":"text","text":" "},{"type":"text","text":"is generally more accurate–but no catastrophic loss of accuracy will"},{"type":"text","text":" "},{"type":"text","text":"result. For fields with exact arithmetic, or for the Complex types,"},{"type":"text","text":" "},{"type":"text","text":"the results are identical."}],"type":"paragraph"},{"inlineContent":[{"text":"A typical use case looks something like this:","type":"text"}],"type":"paragraph"},{"code":["func divide<T: AlgebraicField>(data: [T], by divisor: T) -> [T] {","  \/\/ If divisor is well-scaled, multiply by reciprocal.","  if let recip = divisor.reciprocal {","    return data.map { $0 * recip }","  }","  \/\/ Fallback on using division.","  return data.map { $0 \/ divisor }","}"],"type":"codeListing","syntax":null}],"kind":"content"}],"schemaVersion":{"patch":0,"major":0,"minor":3},"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/RealModule","doc:\/\/co.pointfree.VaporRouting\/documentation\/RealModule\/AlgebraicField"]]},"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/RealModule\/AlgebraicField\/reciprocal-156o3","interfaceLanguage":"swift"},"sections":[],"variants":[{"paths":["\/documentation\/realmodule\/algebraicfield\/reciprocal-156o3"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","abstract":[{"text":"The (approximate) reciprocal (multiplicative inverse) of this number,","type":"text"},{"text":" ","type":"text"},{"text":"if it is representable.","type":"text"}],"references":{"doc://co.pointfree.VaporRouting/documentation/RealModule/AlgebraicField/reciprocal-156o3":{"type":"topic","url":"\/documentation\/realmodule\/algebraicfield\/reciprocal-156o3","role":"symbol","kind":"symbol","title":"reciprocal","defaultImplementations":2,"abstract":[{"type":"text","text":"The (approximate) reciprocal (multiplicative inverse) of this number,"},{"type":"text","text":" "},{"type":"text","text":"if it is representable."}],"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"reciprocal"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"?"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/RealModule\/AlgebraicField\/reciprocal-156o3","required":true},"https://en.wikipedia.org/wiki/Field_(mathematics)":{"identifier":"https:\/\/en.wikipedia.org\/wiki\/Field_(mathematics)","title":"field","type":"link","url":"https:\/\/en.wikipedia.org\/wiki\/Field_(mathematics)","titleInlineContent":[{"type":"text","text":"field"}]},"doc://co.pointfree.VaporRouting/documentation/RealModule/AlgebraicField":{"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AlgebraicField","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/RealModule\/AlgebraicField","role":"symbol","kind":"symbol","type":"topic","url":"\/documentation\/realmodule\/algebraicfield","title":"AlgebraicField","navigatorTitle":[{"text":"AlgebraicField","kind":"identifier"}],"abstract":[{"text":"A type modeling an algebraic ","type":"text"},{"type":"reference","identifier":"https:\/\/en.wikipedia.org\/wiki\/Field_(mathematics)","isActive":true},{"text":". Refines the ","type":"text"},{"type":"codeVoice","code":"SignedNumeric"},{"text":" protocol,","type":"text"},{"text":" ","type":"text"},{"text":"adding division.","type":"text"}]},"doc://co.pointfree.VaporRouting/documentation/RealModule/AlgebraicField/reciprocal-6sp2m":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/RealModule\/AlgebraicField\/reciprocal-6sp2m","url":"\/documentation\/realmodule\/algebraicfield\/reciprocal-6sp2m","abstract":[{"text":"Implementations should be ","type":"text"},{"inlineContent":[{"type":"text","text":"conservative"}],"type":"emphasis"},{"text":" with the reciprocal property;","type":"text"},{"text":" ","type":"text"},{"text":"it is OK to return ","type":"text"},{"type":"codeVoice","code":"nil"},{"type":"text","text":" even in cases where a reciprocal could be"},{"type":"text","text":" "},{"type":"text","text":"represented. For this reason, a default implementation that simply"},{"type":"text","text":" "},{"type":"text","text":"always returns "},{"type":"codeVoice","code":"nil"},{"type":"text","text":" is correct, but conforming types should provide"},{"type":"text","text":" "},{"type":"text","text":"a better implementation if possible."}],"kind":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"reciprocal"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"?"}],"type":"topic","role":"symbol","title":"reciprocal"},"doc://co.pointfree.VaporRouting/documentation/RealModule/Real/reciprocal":{"type":"topic","url":"\/documentation\/realmodule\/real\/reciprocal","role":"symbol","kind":"symbol","title":"reciprocal","abstract":[{"type":"text","text":"The (approximate) reciprocal (multiplicative inverse) of this number,"},{"type":"text","text":" "},{"type":"text","text":"if it is representable."}],"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"reciprocal"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"?"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/RealModule\/Real\/reciprocal"},"doc://co.pointfree.VaporRouting/documentation/RealModule":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/RealModule","role":"collection","title":"RealModule","url":"\/documentation\/realmodule","kind":"symbol","abstract":[],"type":"topic"}}}