{"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/RealModule","doc:\/\/co.pointfree.VaporRouting\/documentation\/RealModule\/AlgebraicField","doc:\/\/co.pointfree.VaporRouting\/documentation\/RealModule\/AlgebraicField\/reciprocal-156o3"]]},"primaryContentSections":[{"declarations":[{"platforms":["Linux"],"tokens":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"reciprocal","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":"? { ","kind":"text"},{"text":"get","kind":"keyword"},{"text":" }","kind":"text"}],"languages":["swift"]}],"kind":"declarations"},{"kind":"content","content":[{"level":2,"text":"Discussion","type":"heading","anchor":"discussion"},{"inlineContent":[{"type":"text","text":"If "},{"type":"codeVoice","code":"x"},{"type":"text","text":" if finite and nonzero, and "},{"type":"codeVoice","code":"1\/x"},{"type":"text","text":" overflows or underflows,"},{"type":"text","text":" "},{"type":"text","text":"then "},{"type":"codeVoice","code":"x.reciprocal"},{"type":"text","text":" is "},{"type":"codeVoice","code":"nil"},{"type":"text","text":". Otherwise, "},{"type":"codeVoice","code":"a.reciprocal"},{"type":"text","text":" is "},{"type":"codeVoice","code":"1\/x"},{"type":"text","text":"."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"If "},{"type":"codeVoice","code":"x.reciprocal"},{"type":"text","text":" is non-nil, you may be able to replace division by "},{"type":"codeVoice","code":"x"},{"type":"text","text":" "},{"type":"text","text":"with multiplication by this value. It is not advantageous to do this"},{"type":"text","text":" "},{"type":"text","text":"for an isolated division unless it is a compile-time constant visible"},{"type":"text","text":" "},{"type":"text","text":"to the compiler, but if you are dividing many values by a single"},{"type":"text","text":" "},{"type":"text","text":"denominator, this will often be a significant performance win."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"A typical use case looks something like this:"}],"type":"paragraph"},{"type":"codeListing","code":["func divide<T: Real>(data: [T], by divisor: T) -> [T] {","  \/\/ If divisor is well-scaled, multiply by reciprocal.","  if let recip = divisor.reciprocal {","    return data.map { $0 * recip }","  }","  \/\/ Fallback on using division.","  return data.map { $0 \/ divisor }","}"],"syntax":null},{"inlineContent":[{"type":"text","text":"Error Bounds:"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"Multiplying by the reciprocal instead of dividing will slightly"},{"type":"text","text":" "},{"type":"text","text":"perturb results. For example "},{"type":"codeVoice","code":"5.0 \/ 3"},{"type":"text","text":" is 1.6666666666666667, but"},{"type":"text","text":" "},{"type":"codeVoice","code":"5.0 * 3.reciprocal!"},{"type":"text","text":" is 1.6666666666666665."}],"type":"paragraph"},{"inlineContent":[{"text":"The error of a normal division is bounded by half an ulp of the","type":"text"},{"text":" ","type":"text"},{"text":"result; we can derive a quick error bound for multiplication by","type":"text"},{"text":" ","type":"text"},{"text":"the real reciprocal (when it exists) as follows (I will use circle","type":"text"},{"text":" ","type":"text"},{"text":"operators to denote real-number arithmetic, and normal operators","type":"text"},{"text":" ","type":"text"},{"text":"for floating-point arithmetic):","type":"text"}],"type":"paragraph"},{"type":"codeListing","code":["  a * b.reciprocal! = a * (1\/b)","                    = a * (1 ⊘ b)(1 + δ₁)","                    = (a ⊘ b)(1 + δ₁)(1 + δ₂)","                    = (a ⊘ b)(1 + δ₁ + δ₂ + δ₁δ₂)"],"syntax":null},{"inlineContent":[{"type":"text","text":"where "},{"type":"codeVoice","code":"0 < δᵢ <= ulpOfOne\/2"},{"type":"text","text":". This gives a roughly 1-ulp error,"},{"type":"text","text":" "},{"type":"text","text":"about twice the error bound we get using division. For most"},{"type":"text","text":" "},{"type":"text","text":"purposes this is an acceptable error, but if you need to match"},{"type":"text","text":" "},{"type":"text","text":"results obtained using division, you should not use this."}],"type":"paragraph"}]}],"kind":"symbol","variants":[{"paths":["\/documentation\/realmodule\/real\/reciprocal"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"externalID":"s:10RealModule0A0PAAE10reciprocalxSgvp","extendedModule":"RealModule","role":"symbol","title":"reciprocal","modules":[{"name":"RealModule"}],"symbolKind":"property","roleHeading":"Instance Property","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"reciprocal","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"?"}]},"abstract":[{"type":"text","text":"The (approximate) reciprocal (multiplicative inverse) of this number,"},{"type":"text","text":" "},{"type":"text","text":"if it is representable."}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/RealModule\/Real\/reciprocal"},"references":{"doc://co.pointfree.VaporRouting/documentation/RealModule/Real/reciprocal":{"type":"topic","url":"\/documentation\/realmodule\/real\/reciprocal","role":"symbol","kind":"symbol","title":"reciprocal","abstract":[{"type":"text","text":"The (approximate) reciprocal (multiplicative inverse) of this number,"},{"type":"text","text":" "},{"type":"text","text":"if it is representable."}],"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"reciprocal"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"?"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/RealModule\/Real\/reciprocal"},"https://en.wikipedia.org/wiki/Field_(mathematics)":{"type":"link","url":"https:\/\/en.wikipedia.org\/wiki\/Field_(mathematics)","titleInlineContent":[{"type":"text","text":"field"}],"title":"field","identifier":"https:\/\/en.wikipedia.org\/wiki\/Field_(mathematics)"},"doc://co.pointfree.VaporRouting/documentation/RealModule/AlgebraicField/reciprocal-156o3":{"type":"topic","url":"\/documentation\/realmodule\/algebraicfield\/reciprocal-156o3","role":"symbol","kind":"symbol","title":"reciprocal","defaultImplementations":2,"abstract":[{"type":"text","text":"The (approximate) reciprocal (multiplicative inverse) of this number,"},{"type":"text","text":" "},{"type":"text","text":"if it is representable."}],"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"reciprocal"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"?"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/RealModule\/AlgebraicField\/reciprocal-156o3","required":true},"doc://co.pointfree.VaporRouting/documentation/RealModule/AlgebraicField":{"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AlgebraicField","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/RealModule\/AlgebraicField","role":"symbol","kind":"symbol","type":"topic","url":"\/documentation\/realmodule\/algebraicfield","title":"AlgebraicField","navigatorTitle":[{"text":"AlgebraicField","kind":"identifier"}],"abstract":[{"text":"A type modeling an algebraic ","type":"text"},{"type":"reference","identifier":"https:\/\/en.wikipedia.org\/wiki\/Field_(mathematics)","isActive":true},{"text":". Refines the ","type":"text"},{"type":"codeVoice","code":"SignedNumeric"},{"text":" protocol,","type":"text"},{"text":" ","type":"text"},{"text":"adding division.","type":"text"}]},"doc://co.pointfree.VaporRouting/documentation/RealModule":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/RealModule","role":"collection","title":"RealModule","url":"\/documentation\/realmodule","kind":"symbol","abstract":[],"type":"topic"}}}