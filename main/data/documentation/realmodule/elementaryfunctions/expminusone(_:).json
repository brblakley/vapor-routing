{"schemaVersion":{"major":0,"minor":3,"patch":0},"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/RealModule","doc:\/\/co.pointfree.VaporRouting\/documentation\/RealModule\/ElementaryFunctions"]]},"abstract":[{"text":"exp(x) - 1, computed in such a way as to maintain accuracy for small x.","type":"text"}],"kind":"symbol","sections":[],"metadata":{"roleHeading":"Type Method","externalID":"s:10RealModule19ElementaryFunctionsP11expMinusOneyxxFZ","symbolKind":"method","title":"expMinusOne(_:)","modules":[{"name":"RealModule"}],"fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"expMinusOne","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"required":true,"role":"symbol"},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"tokens":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"expMinusOne","kind":"identifier"},{"text":"(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"x","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"languages":["swift"]}]},{"content":[{"level":2,"anchor":"discussion","text":"Discussion","type":"heading"},{"inlineContent":[{"type":"text","text":"When "},{"type":"codeVoice","code":"x"},{"type":"text","text":" is close to zero, the expression "},{"type":"codeVoice","code":".exp(x) - 1"},{"type":"text","text":" suffers from"},{"type":"text","text":" "},{"type":"text","text":"catastrophic cancellation and the result will not have full accuracy."},{"type":"text","text":" "},{"type":"text","text":"The "},{"type":"codeVoice","code":".expMinusOne(x)"},{"type":"text","text":" function gives you a means to address this problem."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"As an example, consider the expression "},{"type":"codeVoice","code":"(x + 1)*exp(x) - 1"},{"type":"text","text":".  When "},{"type":"codeVoice","code":"x"},{"type":"text","text":" "},{"type":"text","text":"is smaller than "},{"type":"codeVoice","code":".ulpOfOne"},{"type":"text","text":", this expression evaluates to "},{"type":"codeVoice","code":"0.0"},{"type":"text","text":", when it"},{"type":"text","text":" "},{"type":"text","text":"should actually round to "},{"type":"codeVoice","code":"2*x"},{"type":"text","text":". We can get a full-accuracy result by"},{"type":"text","text":" "},{"type":"text","text":"using the following instead:"}],"type":"paragraph"},{"syntax":null,"code":["let t = .expMinusOne(x)","return x*(t+1) + t       \/\/ x*exp(x) + (exp(x)-1) = (x+1)*exp(x) - 1"],"type":"codeListing"},{"inlineContent":[{"text":"This re-written expression delivers an accurate result for all values","type":"text"},{"text":" ","type":"text"},{"text":"of ","type":"text"},{"code":"x","type":"codeVoice"},{"text":", not just for small values.","type":"text"}],"type":"paragraph"},{"level":2,"anchor":"See-also","text":"See also:","type":"heading"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"exp()"}]}]},{"content":[{"inlineContent":[{"code":"exp2()","type":"codeVoice"},{"text":" (for types conforming to ","type":"text"},{"code":"RealFunctions","type":"codeVoice"},{"text":")","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"code":"exp10()","type":"codeVoice"},{"type":"text","text":" (for types conforming to "},{"code":"RealFunctions","type":"codeVoice"},{"type":"text","text":")"}]}]}],"type":"unorderedList"}],"kind":"content"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/realmodule\/elementaryfunctions\/expminusone(_:)"]}],"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/RealModule\/ElementaryFunctions\/expMinusOne(_:)","interfaceLanguage":"swift"},"references":{"doc://co.pointfree.VaporRouting/documentation/RealModule":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/RealModule","role":"collection","title":"RealModule","url":"\/documentation\/realmodule","kind":"symbol","abstract":[],"type":"topic"},"doc://co.pointfree.VaporRouting/documentation/RealModule/ElementaryFunctions/expMinusOne(_:)":{"fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"expMinusOne"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"}],"title":"expMinusOne(_:)","required":true,"abstract":[{"text":"exp(x) - 1, computed in such a way as to maintain accuracy for small x.","type":"text"}],"url":"\/documentation\/realmodule\/elementaryfunctions\/expminusone(_:)","kind":"symbol","role":"symbol","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/RealModule\/ElementaryFunctions\/expMinusOne(_:)"},"doc://co.pointfree.VaporRouting/documentation/RealModule/ElementaryFunctions":{"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"ElementaryFunctions"}],"title":"ElementaryFunctions","abstract":[{"type":"text","text":"A type that has elementary functions available."}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/RealModule\/ElementaryFunctions","type":"topic","url":"\/documentation\/realmodule\/elementaryfunctions","role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ElementaryFunctions"}]}}}