{"metadata":{"roleHeading":"Initializer","symbolKind":"init","modules":[{"name":"NIOHPACK"}],"fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"allocator","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7NIOCore19ByteBufferAllocatorV","text":"ByteBufferAllocator","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"useHuffmanEncoding"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"},{"kind":"text","text":", "},{"kind":"externalParam","text":"maxDynamicTableSize"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Si","kind":"typeIdentifier","text":"Int"},{"kind":"text","text":")"}],"role":"symbol","title":"init(allocator:useHuffmanEncoding:maxDynamicTableSize:)","externalID":"s:8NIOHPACK12HPACKEncoderV9allocator18useHuffmanEncoding19maxDynamicTableSizeAC7NIOCore19ByteBufferAllocatorV_SbSitcfc"},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHPACK\/HPACKEncoder\/init(allocator:useHuffmanEncoding:maxDynamicTableSize:)"},"primaryContentSections":[{"declarations":[{"tokens":[{"text":"init","kind":"keyword"},{"text":"(","kind":"text"},{"text":"allocator","kind":"externalParam"},{"text":": ","kind":"text"},{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ByteBufferAllocator","text":"ByteBufferAllocator","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore19ByteBufferAllocatorV"},{"text":", ","kind":"text"},{"text":"useHuffmanEncoding","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"kind":"text","text":" = true, "},{"kind":"externalParam","text":"maxDynamicTableSize"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"},{"kind":"text","text":" = HPACKEncoder.defaultDynamicTableSize)"}],"languages":["swift"],"platforms":["Linux"]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"name":"allocator","content":[{"inlineContent":[{"type":"text","text":"An allocator for "},{"type":"codeVoice","code":"ByteBuffer"},{"type":"text","text":"s."}],"type":"paragraph"}]},{"name":"maxDynamicTableSize","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"An initial maximum size for the encoder’s dynamic header table."}]}]}]}],"variants":[{"paths":["\/documentation\/niohpack\/hpackencoder\/init(allocator:usehuffmanencoding:maxdynamictablesize:)"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHPACK","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHPACK\/HPACKEncoder"]]},"schemaVersion":{"minor":3,"major":0,"patch":0},"kind":"symbol","sections":[],"abstract":[{"text":"Initializer and returns a new HPACK encoder.","type":"text"}],"references":{"doc://co.pointfree.VaporRouting/documentation/NIOCore/ByteBufferAllocator":{"abstract":[{"type":"text","text":"The preferred allocator for "},{"code":"ByteBuffer","type":"codeVoice"},{"type":"text","text":" values. The allocation strategy is opaque but is currently libc’s"},{"type":"text","text":" "},{"code":"malloc","type":"codeVoice"},{"type":"text","text":", "},{"code":"realloc","type":"codeVoice"},{"type":"text","text":" and "},{"code":"free","type":"codeVoice"},{"text":".","type":"text"}],"title":"ByteBufferAllocator","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ByteBufferAllocator"}],"navigatorTitle":[{"kind":"identifier","text":"ByteBufferAllocator"}],"kind":"symbol","url":"\/documentation\/niocore\/bytebufferallocator","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ByteBufferAllocator","role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOHPACK/HPACKEncoder":{"title":"HPACKEncoder","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"HPACKEncoder"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HPACKEncoder"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHPACK\/HPACKEncoder","url":"\/documentation\/niohpack\/hpackencoder","abstract":[{"type":"text","text":"An "},{"type":"codeVoice","code":"HPACKEncoder"},{"type":"text","text":" maintains its own dynamic header table and uses that to"},{"type":"text","text":" "},{"type":"text","text":"encode HTTP headers to an internal byte buffer."}],"role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOHPACK/HPACKEncoder/init(allocator:useHuffmanEncoding:maxDynamicTableSize:)":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHPACK\/HPACKEncoder\/init(allocator:useHuffmanEncoding:maxDynamicTableSize:)","url":"\/documentation\/niohpack\/hpackencoder\/init(allocator:usehuffmanencoding:maxdynamictablesize:)","type":"topic","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"allocator","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"ByteBufferAllocator","preciseIdentifier":"s:7NIOCore19ByteBufferAllocatorV","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"useHuffmanEncoding","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"maxDynamicTableSize","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Int","preciseIdentifier":"s:Si","kind":"typeIdentifier"},{"kind":"text","text":")"}],"role":"symbol","kind":"symbol","title":"init(allocator:useHuffmanEncoding:maxDynamicTableSize:)","abstract":[{"text":"Initializer and returns a new HPACK encoder.","type":"text"}]},"doc://co.pointfree.VaporRouting/documentation/NIOHPACK":{"type":"topic","abstract":[],"role":"collection","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHPACK","url":"\/documentation\/niohpack","kind":"symbol","title":"NIOHPACK"}}}