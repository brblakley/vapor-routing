{"sections":[],"schemaVersion":{"major":0,"patch":0,"minor":3},"kind":"symbol","abstract":[{"text":"Creates a new decoder","type":"text"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/niohpack\/hpackdecoder\/init(allocator:maxdynamictablesize:)"]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHPACK\/HPACKDecoder\/init(allocator:maxDynamicTableSize:)"},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"allocator"},{"kind":"text","text":": "},{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ByteBufferAllocator","preciseIdentifier":"s:7NIOCore19ByteBufferAllocatorV","kind":"typeIdentifier","text":"ByteBufferAllocator"},{"kind":"text","text":", "},{"kind":"externalParam","text":"maxDynamicTableSize"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Si","kind":"typeIdentifier","text":"Int"},{"kind":"text","text":" = HPACKDecoder.maxDynamicTableSize)"}],"languages":["swift"],"platforms":["Linux"]}]},{"kind":"parameters","parameters":[{"name":"maxDynamicTableSize","content":[{"inlineContent":[{"text":"Maximum allowed size of the dynamic header table.","type":"text"}],"type":"paragraph"}]}]}],"metadata":{"roleHeading":"Initializer","externalID":"s:8NIOHPACK12HPACKDecoderV9allocator19maxDynamicTableSizeAC7NIOCore19ByteBufferAllocatorV_Sitcfc","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"allocator"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7NIOCore19ByteBufferAllocatorV","kind":"typeIdentifier","text":"ByteBufferAllocator"},{"kind":"text","text":", "},{"kind":"externalParam","text":"maxDynamicTableSize"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Si","kind":"typeIdentifier","text":"Int"},{"kind":"text","text":")"}],"role":"symbol","title":"init(allocator:maxDynamicTableSize:)","symbolKind":"init","modules":[{"name":"NIOHPACK"}]},"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHPACK","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHPACK\/HPACKDecoder"]]},"references":{"doc://co.pointfree.VaporRouting/documentation/NIOHPACK":{"type":"topic","abstract":[],"role":"collection","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHPACK","url":"\/documentation\/niohpack","kind":"symbol","title":"NIOHPACK"},"doc://co.pointfree.VaporRouting/documentation/NIOHPACK/HPACKDecoder":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHPACK\/HPACKDecoder","navigatorTitle":[{"text":"HPACKDecoder","kind":"identifier"}],"type":"topic","url":"\/documentation\/niohpack\/hpackdecoder","kind":"symbol","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HPACKDecoder","kind":"identifier"}],"title":"HPACKDecoder","abstract":[{"text":"An ","type":"text"},{"code":"HPACKDecoder","type":"codeVoice"},{"text":" maintains its own dynamic header table and uses that to","type":"text"},{"text":" ","type":"text"},{"text":"decode indexed HTTP headers, along with Huffman-encoded strings and","type":"text"},{"text":" ","type":"text"},{"text":"HPACK-encoded integers.","type":"text"}]},"doc://co.pointfree.VaporRouting/documentation/NIOHPACK/HPACKDecoder/init(allocator:maxDynamicTableSize:)":{"abstract":[{"text":"Creates a new decoder","type":"text"}],"type":"topic","url":"\/documentation\/niohpack\/hpackdecoder\/init(allocator:maxdynamictablesize:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHPACK\/HPACKDecoder\/init(allocator:maxDynamicTableSize:)","role":"symbol","kind":"symbol","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"allocator"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7NIOCore19ByteBufferAllocatorV","kind":"typeIdentifier","text":"ByteBufferAllocator"},{"kind":"text","text":", "},{"kind":"externalParam","text":"maxDynamicTableSize"},{"text":": ","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"text":")","kind":"text"}],"title":"init(allocator:maxDynamicTableSize:)"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ByteBufferAllocator":{"abstract":[{"type":"text","text":"The preferred allocator for "},{"code":"ByteBuffer","type":"codeVoice"},{"type":"text","text":" values. The allocation strategy is opaque but is currently libcâ€™s"},{"type":"text","text":" "},{"code":"malloc","type":"codeVoice"},{"type":"text","text":", "},{"code":"realloc","type":"codeVoice"},{"type":"text","text":" and "},{"code":"free","type":"codeVoice"},{"text":".","type":"text"}],"title":"ByteBufferAllocator","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ByteBufferAllocator"}],"navigatorTitle":[{"kind":"identifier","text":"ByteBufferAllocator"}],"kind":"symbol","url":"\/documentation\/niocore\/bytebufferallocator","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ByteBufferAllocator","role":"symbol"}}}