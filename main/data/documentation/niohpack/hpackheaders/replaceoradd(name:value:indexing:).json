{"metadata":{"role":"symbol","title":"replaceOrAdd(name:value:indexing:)","roleHeading":"Instance Method","externalID":"s:8NIOHPACK12HPACKHeadersV12replaceOrAdd4name5value8indexingySS_SSAA13HPACKIndexingOtF","symbolKind":"method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"replaceOrAdd"},{"kind":"text","text":"("},{"kind":"externalParam","text":"name"},{"kind":"text","text":": "},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"kind":"text","text":", "},{"kind":"externalParam","text":"value"},{"kind":"text","text":": "},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"kind":"text","text":", "},{"kind":"externalParam","text":"indexing"},{"kind":"text","text":": "},{"preciseIdentifier":"s:8NIOHPACK13HPACKIndexingO","kind":"typeIdentifier","text":"HPACKIndexing"},{"kind":"text","text":")"}],"modules":[{"name":"NIOHPACK"}]},"kind":"symbol","abstract":[{"type":"text","text":"Add a header name\/value pair to the block, replacing any previous values for the"},{"type":"text","text":" "},{"type":"text","text":"same header name that are already in the block."}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/niohpack\/hpackheaders\/replaceoradd(name:value:indexing:)"]}],"sections":[],"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHPACK","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHPACK\/HPACKHeaders"]]},"schemaVersion":{"major":0,"minor":3,"patch":0},"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHPACK\/HPACKHeaders\/replaceOrAdd(name:value:indexing:)","interfaceLanguage":"swift"},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"mutating"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"replaceOrAdd"},{"kind":"text","text":"("},{"kind":"externalParam","text":"name"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"kind":"externalParam","text":"value"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"kind":"externalParam","text":"indexing"},{"kind":"text","text":": "},{"text":"HPACKIndexing","kind":"typeIdentifier","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHPACK\/HPACKIndexing","preciseIdentifier":"s:8NIOHPACK13HPACKIndexingO"},{"text":" = .indexable)","kind":"text"}],"platforms":["Linux"],"languages":["swift"]}]},{"kind":"parameters","parameters":[{"name":"name","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The header field name. For maximum compatibility this should be an"},{"type":"text","text":" "},{"type":"text","text":"ASCII string. For future-proofing with HTTP\/2 lowercase header names are strongly"},{"type":"text","text":" "},{"type":"text","text":"recommended."}]}]},{"name":"value","content":[{"inlineContent":[{"text":"The header field value to add for the given name.","type":"text"}],"type":"paragraph"}]}]},{"content":[{"text":"Discussion","anchor":"discussion","level":2,"type":"heading"},{"inlineContent":[{"type":"text","text":"This is a supplemental method to "},{"type":"codeVoice","code":"add"},{"type":"text","text":" that essentially combines "},{"type":"codeVoice","code":"remove"},{"type":"text","text":" and "},{"type":"codeVoice","code":"add"},{"type":"text","text":" "},{"type":"text","text":"in a single function. It can be used to ensure that a header block is in a"},{"type":"text","text":" "},{"type":"text","text":"well-defined form without having to check whether the value was previously there."},{"type":"text","text":" "},{"type":"text","text":"Like "},{"type":"codeVoice","code":"add"},{"type":"text","text":", this method performs case-insensitive comparisons of the header field"},{"type":"text","text":" "},{"type":"text","text":"names."}],"type":"paragraph"}],"kind":"content"}],"references":{"doc://co.pointfree.VaporRouting/documentation/NIOHPACK/HPACKIndexing":{"fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HPACKIndexing","kind":"identifier"}],"kind":"symbol","type":"topic","role":"symbol","abstract":[{"type":"text","text":"Defines the types of indexing and rewriting operations a decoder may take with"},{"type":"text","text":" "},{"type":"text","text":"regard to this header."}],"url":"\/documentation\/niohpack\/hpackindexing","title":"HPACKIndexing","navigatorTitle":[{"kind":"identifier","text":"HPACKIndexing"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHPACK\/HPACKIndexing"},"doc://co.pointfree.VaporRouting/documentation/NIOHPACK":{"type":"topic","abstract":[],"role":"collection","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHPACK","url":"\/documentation\/niohpack","kind":"symbol","title":"NIOHPACK"},"doc://co.pointfree.VaporRouting/documentation/NIOHPACK/HPACKHeaders":{"kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HPACKHeaders"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"HPACKHeaders"}],"title":"HPACKHeaders","url":"\/documentation\/niohpack\/hpackheaders","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHPACK\/HPACKHeaders","abstract":[{"text":"Very similar to ","type":"text"},{"code":"NIOHTTP1.HTTPHeaders","type":"codeVoice"},{"text":", but with extra data for storing indexing","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"information."}],"type":"topic"},"doc://co.pointfree.VaporRouting/documentation/NIOHPACK/HPACKHeaders/replaceOrAdd(name:value:indexing:)":{"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHPACK\/HPACKHeaders\/replaceOrAdd(name:value:indexing:)","role":"symbol","abstract":[{"text":"Add a header name\/value pair to the block, replacing any previous values for the","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"same header name that are already in the block."}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"replaceOrAdd","kind":"identifier"},{"text":"(","kind":"text"},{"text":"name","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"value","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"indexing","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"HPACKIndexing","preciseIdentifier":"s:8NIOHPACK13HPACKIndexingO","kind":"typeIdentifier"},{"text":")","kind":"text"}],"title":"replaceOrAdd(name:value:indexing:)","url":"\/documentation\/niohpack\/hpackheaders\/replaceoradd(name:value:indexing:)","kind":"symbol"}}}