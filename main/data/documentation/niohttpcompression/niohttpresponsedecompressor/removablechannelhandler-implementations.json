{"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTPCompression","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTPCompression\/NIOHTTPResponseDecompressor"]]},"kind":"article","metadata":{"title":"RemovableChannelHandler Implementations","role":"collectionGroup","modules":[{"name":"NIOHTTPCompression"}]},"sections":[],"topicSections":[{"title":"Instance Methods","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTPCompression\/NIOHTTPResponseDecompressor\/removeHandler(context:removalToken:)"],"generated":true}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTPCompression\/NIOHTTPResponseDecompressor\/RemovableChannelHandler-Implementations"},"schemaVersion":{"minor":3,"major":0,"patch":0},"references":{"doc://co.pointfree.VaporRouting/documentation/NIOHTTPCompression/NIOHTTPResponseDecompressor":{"title":"NIOHTTPResponseDecompressor","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"NIOHTTPResponseDecompressor"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTPCompression\/NIOHTTPResponseDecompressor","kind":"symbol","abstract":[{"type":"text","text":"Duplex channel handler which will accept deflate and gzip encoded responses and decompress them."}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"NIOHTTPResponseDecompressor"}],"url":"\/documentation\/niohttpcompression\/niohttpresponsedecompressor","type":"topic"},"doc://co.pointfree.VaporRouting/documentation/NIOHTTPCompression":{"title":"NIOHTTPCompression","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTPCompression","kind":"symbol","abstract":[],"role":"collection","url":"\/documentation\/niohttpcompression","type":"topic"},"doc://co.pointfree.VaporRouting/documentation/NIOHTTPCompression/NIOHTTPResponseDecompressor/removeHandler(context:removalToken:)":{"type":"topic","title":"removeHandler(context:removalToken:)","abstract":[{"type":"text","text":"Ask the receiving "},{"code":"RemovableChannelHandler","type":"codeVoice"},{"type":"text","text":" to remove itself from the "},{"code":"ChannelPipeline","type":"codeVoice"},{"text":" as soon as possible.","type":"text"},{"text":" ","type":"text"},{"text":"The receiving ","type":"text"},{"code":"RemovableChannelHandler","type":"codeVoice"},{"text":" may elect to remove itself sometime after this method call, rather than","type":"text"},{"text":" ","type":"text"},{"text":"immediately, but if it does so it must take the necessary precautions to handle events arriving between the","type":"text"},{"text":" ","type":"text"},{"text":"invocation of this method and the call to ","type":"text"},{"code":"ChannelHandlerContext.removeHandler","type":"codeVoice"},{"text":" that triggers the actual","type":"text"},{"text":" ","type":"text"},{"text":"removal.","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"removeHandler","kind":"identifier"},{"text":"(","kind":"text"},{"text":"context","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC","text":"ChannelHandlerContext","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"removalToken","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC","text":"ChannelHandlerContext","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC12RemovalTokenV","text":"RemovalToken","kind":"typeIdentifier"},{"text":")","kind":"text"}],"role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTPCompression\/NIOHTTPResponseDecompressor\/removeHandler(context:removalToken:)","url":"\/documentation\/niohttpcompression\/niohttpresponsedecompressor\/removehandler(context:removaltoken:)","kind":"symbol"}}}