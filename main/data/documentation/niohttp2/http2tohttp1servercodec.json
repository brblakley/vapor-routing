{"metadata":{"navigatorTitle":[{"kind":"identifier","text":"HTTP2ToHTTP1ServerCodec"}],"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"HTTP2ToHTTP1ServerCodec"}],"title":"HTTP2ToHTTP1ServerCodec","symbolKind":"class","role":"symbol","modules":[{"name":"NIOHTTP2"}],"platforms":[],"roleHeading":"Class","externalID":"s:8NIOHTTP223HTTP2ToHTTP1ServerCodecC"},"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2"]]},"relationshipsSections":[{"kind":"relationships","title":"Conforms To","type":"conformsTo","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelHandler","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelInboundHandler","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOutboundHandler"]}],"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/HTTP2ToHTTP1ServerCodec\/init(streamID:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/HTTP2ToHTTP1ServerCodec\/init(streamID:normalizeHTTPHeaders:)"]},{"title":"Instance Methods","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/HTTP2ToHTTP1ServerCodec\/channelRead(context:data:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/HTTP2ToHTTP1ServerCodec\/write(context:data:promise:)"]},{"title":"Type Aliases","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/HTTP2ToHTTP1ServerCodec\/InboundIn","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/HTTP2ToHTTP1ServerCodec\/InboundOut","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/HTTP2ToHTTP1ServerCodec\/OutboundIn","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/HTTP2ToHTTP1ServerCodec\/OutboundOut"]},{"title":"Default Implementations","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/HTTP2ToHTTP1ServerCodec\/ChannelHandler-Implementations","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/HTTP2ToHTTP1ServerCodec\/ChannelInboundHandler-Implementations","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/HTTP2ToHTTP1ServerCodec\/ChannelOutboundHandler-Implementations"],"generated":true}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/HTTP2ToHTTP1ServerCodec"},"kind":"symbol","primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"text":"final","kind":"keyword"},{"text":" ","kind":"text"},{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HTTP2ToHTTP1ServerCodec","kind":"identifier"}],"platforms":["Linux"]}],"kind":"declarations"},{"kind":"content","content":[{"type":"heading","anchor":"overview","text":"Overview","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"This channel handler should be used alongside the "},{"isActive":true,"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/HTTP2StreamMultiplexer","type":"reference"},{"type":"text","text":" to"},{"type":"text","text":" "},{"type":"text","text":"help provide a HTTP\/1.1-like abstraction on top of a HTTP\/2 multiplexed"},{"type":"text","text":" "},{"type":"text","text":"connection."}]}]}],"abstract":[{"text":"A simple channel handler that translates HTTP\/2 concepts into HTTP\/1 data types,","type":"text"},{"text":" ","type":"text"},{"text":"and vice versa, for use on the server side.","type":"text"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/niohttp2\/http2tohttp1servercodec"]}],"sections":[],"schemaVersion":{"major":0,"patch":0,"minor":3},"references":{"doc://co.pointfree.VaporRouting/documentation/NIOHTTP2/HTTP2StreamMultiplexer":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/HTTP2StreamMultiplexer","url":"\/documentation\/niohttp2\/http2streammultiplexer","type":"topic","kind":"symbol","role":"symbol","title":"HTTP2StreamMultiplexer","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HTTP2StreamMultiplexer","kind":"identifier"}],"abstract":[{"text":"A channel handler that creates a child channel for each HTTP\/2 stream.","type":"text"}],"navigatorTitle":[{"text":"HTTP2StreamMultiplexer","kind":"identifier"}]},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP2/HTTP2ToHTTP1ServerCodec/InboundIn":{"kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/HTTP2ToHTTP1ServerCodec\/InboundIn","title":"HTTP2ToHTTP1ServerCodec.InboundIn","url":"\/documentation\/niohttp2\/http2tohttp1servercodec\/inboundin","role":"symbol","abstract":[{"type":"text","text":"The type of the inbound data which is wrapped in "},{"code":"NIOAny","type":"codeVoice"},{"type":"text","text":"."}],"fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"InboundIn"}],"deprecated":true,"type":"topic","navigatorTitle":[{"kind":"identifier","text":"InboundIn"}]},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP2/HTTP2ToHTTP1ServerCodec/ChannelInboundHandler-Implementations":{"url":"\/documentation\/niohttp2\/http2tohttp1servercodec\/channelinboundhandler-implementations","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/HTTP2ToHTTP1ServerCodec\/ChannelInboundHandler-Implementations","title":"ChannelInboundHandler Implementations","role":"collectionGroup","abstract":[],"kind":"article","type":"topic"},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP2/HTTP2ToHTTP1ServerCodec/init(streamID:normalizeHTTPHeaders:)":{"type":"topic","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"streamID"},{"kind":"text","text":": "},{"preciseIdentifier":"s:8NIOHTTP213HTTP2StreamIDV","text":"HTTP2StreamID","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"normalizeHTTPHeaders","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"text":")","kind":"text"}],"url":"\/documentation\/niohttp2\/http2tohttp1servercodec\/init(streamid:normalizehttpheaders:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/HTTP2ToHTTP1ServerCodec\/init(streamID:normalizeHTTPHeaders:)","kind":"symbol","title":"init(streamID:normalizeHTTPHeaders:)","abstract":[{"text":"Initializes a ","type":"text"},{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/HTTP2ToHTTP1ServerCodec","type":"reference","isActive":true},{"text":" for the given ","type":"text"},{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/HTTP2StreamID","type":"reference","isActive":true},{"type":"text","text":"."}],"role":"symbol","deprecated":true},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP2/HTTP2ToHTTP1ServerCodec/init(streamID:)":{"fragments":[{"kind":"keyword","text":"convenience"},{"kind":"text","text":" "},{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"streamID"},{"kind":"text","text":": "},{"preciseIdentifier":"s:8NIOHTTP213HTTP2StreamIDV","kind":"typeIdentifier","text":"HTTP2StreamID"},{"kind":"text","text":")"}],"abstract":[],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/HTTP2ToHTTP1ServerCodec\/init(streamID:)","type":"topic","deprecated":true,"title":"init(streamID:)","role":"symbol","url":"\/documentation\/niohttp2\/http2tohttp1servercodec\/init(streamid:)","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP2/HTTP2StreamID":{"kind":"symbol","abstract":[{"type":"text","text":"A single HTTP\/2 stream ID."}],"type":"topic","url":"\/documentation\/niohttp2\/http2streamid","role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/HTTP2StreamID","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HTTP2StreamID","kind":"identifier"}],"navigatorTitle":[{"text":"HTTP2StreamID","kind":"identifier"}],"title":"HTTP2StreamID"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelHandler":{"title":"ChannelHandler","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ChannelHandler"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelHandler","kind":"symbol","abstract":[{"type":"text","text":"You should "},{"inlineContent":[{"text":"never","type":"text"}],"type":"emphasis"},{"type":"text","text":" implement this protocol directly. Please implement one of its sub-protocols."}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"ChannelHandler"}],"url":"\/documentation\/niocore\/channelhandler","type":"topic"},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP2/HTTP2ToHTTP1ServerCodec/OutboundIn":{"fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"OutboundIn"}],"abstract":[{"type":"text","text":"The type of the outbound data which is wrapped in "},{"type":"codeVoice","code":"NIOAny"},{"type":"text","text":"."}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/HTTP2ToHTTP1ServerCodec\/OutboundIn","type":"topic","deprecated":true,"title":"HTTP2ToHTTP1ServerCodec.OutboundIn","role":"symbol","url":"\/documentation\/niohttp2\/http2tohttp1servercodec\/outboundin","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"OutboundIn"}]},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP2/HTTP2ToHTTP1ServerCodec/channelRead(context:data:)":{"type":"topic","title":"channelRead(context:data:)","abstract":[{"text":"Called when some data has been read from the remote peer.","type":"text"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/HTTP2ToHTTP1ServerCodec\/channelRead(context:data:)","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"channelRead","kind":"identifier"},{"text":"(","kind":"text"},{"text":"context","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC","text":"ChannelHandlerContext","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"data","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7NIOCore6NIOAnyV","text":"NIOAny","kind":"typeIdentifier"},{"text":")","kind":"text"}],"deprecated":true,"url":"\/documentation\/niohttp2\/http2tohttp1servercodec\/channelread(context:data:)","role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP2/HTTP2ToHTTP1ServerCodec/ChannelOutboundHandler-Implementations":{"type":"topic","url":"\/documentation\/niohttp2\/http2tohttp1servercodec\/channeloutboundhandler-implementations","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/HTTP2ToHTTP1ServerCodec\/ChannelOutboundHandler-Implementations","kind":"article","title":"ChannelOutboundHandler Implementations","abstract":[],"role":"collectionGroup"},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP2/HTTP2ToHTTP1ServerCodec/write(context:data:promise:)":{"title":"write(context:data:promise:)","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"write","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"context"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC","kind":"typeIdentifier","text":"ChannelHandlerContext"},{"kind":"text","text":", "},{"kind":"externalParam","text":"data"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7NIOCore6NIOAnyV","kind":"typeIdentifier","text":"NIOAny"},{"kind":"text","text":", "},{"kind":"externalParam","text":"promise"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7NIOCore16EventLoopPromiseV","kind":"typeIdentifier","text":"EventLoopPromise"},{"kind":"text","text":"<"},{"preciseIdentifier":"s:s4Voida","kind":"typeIdentifier","text":"Void"},{"kind":"text","text":">?)"}],"deprecated":true,"url":"\/documentation\/niohttp2\/http2tohttp1servercodec\/write(context:data:promise:)","kind":"symbol","abstract":[{"text":"Called to request a write operation. The write operation will write the messages through the","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"ChannelPipeline"},{"type":"text","text":". Those are then ready to be flushed to the actual "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":" when"},{"type":"text","text":" "},{"type":"codeVoice","code":"Channel.flush"},{"type":"text","text":" or "},{"type":"codeVoice","code":"ChannelHandlerContext.flush"},{"type":"text","text":" is called."}],"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/HTTP2ToHTTP1ServerCodec\/write(context:data:promise:)"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelInboundHandler":{"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ChannelInboundHandler"}],"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelInboundHandler","title":"ChannelInboundHandler","url":"\/documentation\/niocore\/channelinboundhandler","role":"symbol","kind":"symbol","abstract":[{"code":"ChannelHandler","type":"codeVoice"},{"type":"text","text":" which handles inbound I\/O events for a "},{"code":"Channel","type":"codeVoice"},{"type":"text","text":"."}],"navigatorTitle":[{"kind":"identifier","text":"ChannelInboundHandler"}]},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP2/HTTP2ToHTTP1ServerCodec/InboundOut":{"fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"InboundOut"}],"title":"HTTP2ToHTTP1ServerCodec.InboundOut","deprecated":true,"navigatorTitle":[{"kind":"identifier","text":"InboundOut"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/HTTP2ToHTTP1ServerCodec\/InboundOut","url":"\/documentation\/niohttp2\/http2tohttp1servercodec\/inboundout","abstract":[{"type":"text","text":"The type of the inbound data which will be forwarded to the next "},{"type":"codeVoice","code":"ChannelInboundHandler"},{"type":"text","text":" in the "},{"type":"codeVoice","code":"ChannelPipeline"},{"type":"text","text":"."}],"kind":"symbol","role":"symbol","type":"topic"},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP2":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2","title":"NIOHTTP2","kind":"symbol","role":"collection","url":"\/documentation\/niohttp2","type":"topic","abstract":[]},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP2/HTTP2ToHTTP1ServerCodec":{"kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/HTTP2ToHTTP1ServerCodec","title":"HTTP2ToHTTP1ServerCodec","url":"\/documentation\/niohttp2\/http2tohttp1servercodec","role":"symbol","abstract":[{"type":"text","text":"A simple channel handler that translates HTTP\/2 concepts into HTTP\/1 data types,"},{"type":"text","text":" "},{"type":"text","text":"and vice versa, for use on the server side."}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"HTTP2ToHTTP1ServerCodec"}],"deprecated":true,"type":"topic","navigatorTitle":[{"kind":"identifier","text":"HTTP2ToHTTP1ServerCodec"}]},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP2/HTTP2ToHTTP1ServerCodec/ChannelHandler-Implementations":{"title":"ChannelHandler Implementations","url":"\/documentation\/niohttp2\/http2tohttp1servercodec\/channelhandler-implementations","type":"topic","kind":"article","role":"collectionGroup","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/HTTP2ToHTTP1ServerCodec\/ChannelHandler-Implementations","abstract":[]},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP2/HTTP2ToHTTP1ServerCodec/OutboundOut":{"kind":"symbol","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"OutboundOut"}],"navigatorTitle":[{"kind":"identifier","text":"OutboundOut"}],"url":"\/documentation\/niohttp2\/http2tohttp1servercodec\/outboundout","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/HTTP2ToHTTP1ServerCodec\/OutboundOut","role":"symbol","abstract":[{"type":"text","text":"The type of the outbound data which will be forwarded to the next "},{"code":"ChannelOutboundHandler","type":"codeVoice"},{"type":"text","text":" in the "},{"code":"ChannelPipeline","type":"codeVoice"},{"type":"text","text":"."}],"title":"HTTP2ToHTTP1ServerCodec.OutboundOut","deprecated":true,"type":"topic"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelOutboundHandler":{"title":"ChannelOutboundHandler","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ChannelOutboundHandler"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOutboundHandler","kind":"symbol","abstract":[{"code":"ChannelHandler","type":"codeVoice"},{"type":"text","text":" which handles outbound I\/O events or intercept an outbound I\/O operation for a "},{"code":"Channel","type":"codeVoice"},{"type":"text","text":"."}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"ChannelOutboundHandler"}],"url":"\/documentation\/niocore\/channeloutboundhandler","type":"topic"}}}