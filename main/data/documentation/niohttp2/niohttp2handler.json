{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/niohttp2\/niohttp2handler"]}],"topicSections":[{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/NIOHTTP2Handler\/init(mode:initialSettings:headerBlockValidation:contentLengthValidation:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/NIOHTTP2Handler\/init(mode:initialSettings:headerBlockValidation:contentLengthValidation:maximumSequentialEmptyDataFrames:maximumBufferedControlFrames:)"],"title":"Initializers"},{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/NIOHTTP2Handler\/channelActive(context:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/NIOHTTP2Handler\/channelInactive(context:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/NIOHTTP2Handler\/channelRead(context:data:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/NIOHTTP2Handler\/channelReadComplete(context:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/NIOHTTP2Handler\/channelWritabilityChanged(context:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/NIOHTTP2Handler\/flush(context:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/NIOHTTP2Handler\/handlerAdded(context:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/NIOHTTP2Handler\/handlerRemoved(context:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/NIOHTTP2Handler\/write(context:data:promise:)"],"title":"Instance Methods"},{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/NIOHTTP2Handler\/InboundIn","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/NIOHTTP2Handler\/InboundOut","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/NIOHTTP2Handler\/OutboundIn","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/NIOHTTP2Handler\/OutboundOut"],"title":"Type Aliases"},{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/NIOHTTP2Handler\/ParserMode","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/NIOHTTP2Handler\/ValidationState"],"title":"Enumerations"},{"generated":true,"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/NIOHTTP2Handler\/ChannelInboundHandler-Implementations","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/NIOHTTP2Handler\/ChannelOutboundHandler-Implementations","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/NIOHTTP2Handler\/CustomDebugStringConvertible-Implementations","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/NIOHTTP2Handler\/CustomStringConvertible-Implementations"],"title":"Default Implementations"}],"metadata":{"modules":[{"name":"NIOHTTP2"}],"navigatorTitle":[{"text":"NIOHTTP2Handler","kind":"identifier"}],"roleHeading":"Class","role":"symbol","externalID":"s:8NIOHTTP20A7HandlerC","symbolKind":"class","title":"NIOHTTP2Handler","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"NIOHTTP2Handler","kind":"identifier"}]},"relationshipsSections":[{"type":"conformsTo","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelHandler","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelInboundHandler","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOutboundHandler","doc:\/\/co.pointfree.VaporRouting\/s28CustomDebugStringConvertibleP","doc:\/\/co.pointfree.VaporRouting\/s23CustomStringConvertibleP"],"kind":"relationships","title":"Conforms To"}],"schemaVersion":{"minor":3,"patch":0,"major":0},"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/NIOHTTP2Handler"},"sections":[],"abstract":[{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/NIOHTTP2Handler","type":"reference","isActive":true},{"type":"text","text":" implements the HTTP\/2 protocol for a single connection."}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"text":"final","kind":"keyword"},{"text":" ","kind":"text"},{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"NIOHTTP2Handler","kind":"identifier"}]}]},{"content":[{"level":2,"anchor":"overview","type":"heading","text":"Overview"},{"type":"paragraph","inlineContent":[{"text":"This ","type":"text"},{"code":"ChannelHandler","type":"codeVoice"},{"text":" takes a series of bytes and turns them into a sequence of ","type":"text"},{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/HTTP2Frame","isActive":true,"type":"reference"},{"text":" objects.","type":"text"},{"text":" ","type":"text"},{"text":"This type allows implementing a single ","type":"text"},{"code":"ChannelPipeline","type":"codeVoice"},{"text":" that runs a complete HTTP\/2 connection, and","type":"text"},{"text":" ","type":"text"},{"text":"doesnâ€™t deal with managing stream state.","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"Most users should combine this with a ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/HTTP2StreamMultiplexer"},{"text":" to get an easier programming model.","type":"text"}]}],"kind":"content"}],"kind":"symbol","references":{"doc://co.pointfree.VaporRouting/documentation/NIOHTTP2/NIOHTTP2Handler/CustomDebugStringConvertible-Implementations":{"abstract":[],"title":"CustomDebugStringConvertible Implementations","url":"\/documentation\/niohttp2\/niohttp2handler\/customdebugstringconvertible-implementations","type":"topic","kind":"article","role":"collectionGroup","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/NIOHTTP2Handler\/CustomDebugStringConvertible-Implementations"},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP2/NIOHTTP2Handler/handlerRemoved(context:)":{"role":"symbol","title":"handlerRemoved(context:)","url":"\/documentation\/niohttp2\/niohttp2handler\/handlerremoved(context:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/NIOHTTP2Handler\/handlerRemoved(context:)","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"handlerRemoved"},{"kind":"text","text":"("},{"kind":"externalParam","text":"context"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC","text":"ChannelHandlerContext"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Called when this "},{"type":"codeVoice","code":"ChannelHandler"},{"type":"text","text":" is removed from the "},{"type":"codeVoice","code":"ChannelPipeline"},{"type":"text","text":"."}],"kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP2":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2","title":"NIOHTTP2","kind":"symbol","role":"collection","url":"\/documentation\/niohttp2","type":"topic","abstract":[]},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP2/NIOHTTP2Handler/ValidationState":{"role":"symbol","title":"NIOHTTP2Handler.ValidationState","url":"\/documentation\/niohttp2\/niohttp2handler\/validationstate","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/NIOHTTP2Handler\/ValidationState","type":"topic","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"ValidationState"}],"abstract":[{"type":"text","text":"Whether a given operation has validation enabled or not."}],"navigatorTitle":[{"kind":"identifier","text":"ValidationState"}],"kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP2/NIOHTTP2Handler/channelRead(context:data:)":{"role":"symbol","title":"channelRead(context:data:)","url":"\/documentation\/niohttp2\/niohttp2handler\/channelread(context:data:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/NIOHTTP2Handler\/channelRead(context:data:)","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"channelRead"},{"kind":"text","text":"("},{"kind":"externalParam","text":"context"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC","text":"ChannelHandlerContext"},{"kind":"text","text":", "},{"kind":"externalParam","text":"data"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore6NIOAnyV","text":"NIOAny"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Called when some data has been read from the remote peer."}],"kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelOutboundHandler":{"title":"ChannelOutboundHandler","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ChannelOutboundHandler"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOutboundHandler","kind":"symbol","abstract":[{"code":"ChannelHandler","type":"codeVoice"},{"type":"text","text":" which handles outbound I\/O events or intercept an outbound I\/O operation for a "},{"code":"Channel","type":"codeVoice"},{"type":"text","text":"."}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"ChannelOutboundHandler"}],"url":"\/documentation\/niocore\/channeloutboundhandler","type":"topic"},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP2/NIOHTTP2Handler/OutboundIn":{"navigatorTitle":[{"kind":"identifier","text":"OutboundIn"}],"fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"OutboundIn"}],"title":"NIOHTTP2Handler.OutboundIn","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/NIOHTTP2Handler\/OutboundIn","abstract":[{"type":"text","text":"The type of the outbound data which is wrapped in "},{"type":"codeVoice","code":"NIOAny"},{"type":"text","text":"."}],"type":"topic","kind":"symbol","role":"symbol","url":"\/documentation\/niohttp2\/niohttp2handler\/outboundin"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelHandler":{"title":"ChannelHandler","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ChannelHandler"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelHandler","kind":"symbol","abstract":[{"type":"text","text":"You should "},{"inlineContent":[{"text":"never","type":"text"}],"type":"emphasis"},{"type":"text","text":" implement this protocol directly. Please implement one of its sub-protocols."}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"ChannelHandler"}],"url":"\/documentation\/niocore\/channelhandler","type":"topic"},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP2/HTTP2StreamMultiplexer":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/HTTP2StreamMultiplexer","url":"\/documentation\/niohttp2\/http2streammultiplexer","type":"topic","kind":"symbol","role":"symbol","title":"HTTP2StreamMultiplexer","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HTTP2StreamMultiplexer","kind":"identifier"}],"abstract":[{"text":"A channel handler that creates a child channel for each HTTP\/2 stream.","type":"text"}],"navigatorTitle":[{"text":"HTTP2StreamMultiplexer","kind":"identifier"}]},"doc://co.pointfree.VaporRouting/s23CustomStringConvertibleP":{"title":"Swift.CustomStringConvertible","identifier":"doc:\/\/co.pointfree.VaporRouting\/s23CustomStringConvertibleP","type":"unresolvable"},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP2/NIOHTTP2Handler/CustomStringConvertible-Implementations":{"role":"collectionGroup","title":"CustomStringConvertible Implementations","url":"\/documentation\/niohttp2\/niohttp2handler\/customstringconvertible-implementations","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/NIOHTTP2Handler\/CustomStringConvertible-Implementations","type":"topic","abstract":[],"kind":"article"},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP2/NIOHTTP2Handler/write(context:data:promise:)":{"role":"symbol","title":"write(context:data:promise:)","url":"\/documentation\/niohttp2\/niohttp2handler\/write(context:data:promise:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/NIOHTTP2Handler\/write(context:data:promise:)","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"write"},{"kind":"text","text":"("},{"kind":"externalParam","text":"context"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC","text":"ChannelHandlerContext"},{"kind":"text","text":", "},{"kind":"externalParam","text":"data"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore6NIOAnyV","text":"NIOAny"},{"kind":"text","text":", "},{"kind":"externalParam","text":"promise"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore16EventLoopPromiseV","text":"EventLoopPromise"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"kind":"text","text":">?)"}],"abstract":[{"type":"text","text":"Called to request a write operation. The write operation will write the messages through the"},{"type":"text","text":" "},{"type":"codeVoice","code":"ChannelPipeline"},{"type":"text","text":". Those are then ready to be flushed to the actual "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":" when"},{"type":"text","text":" "},{"type":"codeVoice","code":"Channel.flush"},{"type":"text","text":" or "},{"type":"codeVoice","code":"ChannelHandlerContext.flush"},{"type":"text","text":" is called."}],"kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP2/NIOHTTP2Handler/InboundIn":{"role":"symbol","title":"NIOHTTP2Handler.InboundIn","url":"\/documentation\/niohttp2\/niohttp2handler\/inboundin","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/NIOHTTP2Handler\/InboundIn","type":"topic","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"InboundIn"}],"abstract":[{"type":"text","text":"The type of the inbound data which is wrapped in "},{"type":"codeVoice","code":"NIOAny"},{"type":"text","text":"."}],"navigatorTitle":[{"kind":"identifier","text":"InboundIn"}],"kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP2/NIOHTTP2Handler/handlerAdded(context:)":{"role":"symbol","title":"handlerAdded(context:)","url":"\/documentation\/niohttp2\/niohttp2handler\/handleradded(context:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/NIOHTTP2Handler\/handlerAdded(context:)","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"handlerAdded"},{"kind":"text","text":"("},{"kind":"externalParam","text":"context"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC","text":"ChannelHandlerContext"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Called when this "},{"type":"codeVoice","code":"ChannelHandler"},{"type":"text","text":" is added to the "},{"type":"codeVoice","code":"ChannelPipeline"},{"type":"text","text":"."}],"kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP2/HTTP2Frame":{"abstract":[{"text":"A representation of a single HTTP\/2 frame.","type":"text"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HTTP2Frame"}],"type":"topic","title":"HTTP2Frame","role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/HTTP2Frame","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"HTTP2Frame"}],"url":"\/documentation\/niohttp2\/http2frame"},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP2/NIOHTTP2Handler/OutboundOut":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/NIOHTTP2Handler\/OutboundOut","type":"topic","url":"\/documentation\/niohttp2\/niohttp2handler\/outboundout","title":"NIOHTTP2Handler.OutboundOut","kind":"symbol","role":"symbol","navigatorTitle":[{"text":"OutboundOut","kind":"identifier"}],"fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"OutboundOut","kind":"identifier"}],"abstract":[{"type":"text","text":"The type of the outbound data which will be forwarded to the next "},{"type":"codeVoice","code":"ChannelOutboundHandler"},{"text":" in the ","type":"text"},{"code":"ChannelPipeline","type":"codeVoice"},{"text":".","type":"text"}]},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP2/NIOHTTP2Handler/InboundOut":{"role":"symbol","title":"NIOHTTP2Handler.InboundOut","url":"\/documentation\/niohttp2\/niohttp2handler\/inboundout","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/NIOHTTP2Handler\/InboundOut","type":"topic","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"InboundOut"}],"abstract":[{"type":"text","text":"The type of the inbound data which will be forwarded to the next "},{"type":"codeVoice","code":"ChannelInboundHandler"},{"type":"text","text":" in the "},{"type":"codeVoice","code":"ChannelPipeline"},{"type":"text","text":"."}],"navigatorTitle":[{"kind":"identifier","text":"InboundOut"}],"kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP2/NIOHTTP2Handler/channelReadComplete(context:)":{"role":"symbol","title":"channelReadComplete(context:)","url":"\/documentation\/niohttp2\/niohttp2handler\/channelreadcomplete(context:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/NIOHTTP2Handler\/channelReadComplete(context:)","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"channelReadComplete"},{"kind":"text","text":"("},{"kind":"externalParam","text":"context"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC","text":"ChannelHandlerContext"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Called when the "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":" has completed its current read loop, either because no more data is available to read from the transport at this time, or because the "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":" needs to yield to the event loop to process other I\/O events for other "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":"s."},{"type":"text","text":" "},{"type":"text","text":"If "},{"type":"codeVoice","code":"ChannelOptions.autoRead"},{"type":"text","text":" is "},{"type":"codeVoice","code":"false"},{"type":"text","text":" no further read attempt will be made until "},{"type":"codeVoice","code":"ChannelHandlerContext.read"},{"type":"text","text":" or "},{"type":"codeVoice","code":"Channel.read"},{"type":"text","text":" is explicitly called."}],"kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP2/NIOHTTP2Handler/channelActive(context:)":{"kind":"symbol","title":"channelActive(context:)","abstract":[{"text":"Called when the ","type":"text"},{"code":"Channel","type":"codeVoice"},{"text":" has become active, and is able to send and receive data.","type":"text"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/NIOHTTP2Handler\/channelActive(context:)","role":"symbol","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"channelActive","kind":"identifier"},{"text":"(","kind":"text"},{"text":"context","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC","text":"ChannelHandlerContext","kind":"typeIdentifier"},{"text":")","kind":"text"}],"url":"\/documentation\/niohttp2\/niohttp2handler\/channelactive(context:)"},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP2/NIOHTTP2Handler/init(mode:initialSettings:headerBlockValidation:contentLengthValidation:maximumSequentialEmptyDataFrames:maximumBufferedControlFrames:)":{"role":"symbol","title":"init(mode:initialSettings:headerBlockValidation:contentLengthValidation:maximumSequentialEmptyDataFrames:maximumBufferedControlFrames:)","url":"\/documentation\/niohttp2\/niohttp2handler\/init(mode:initialsettings:headerblockvalidation:contentlengthvalidation:maximumsequentialemptydataframes:maximumbufferedcontrolframes:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/NIOHTTP2Handler\/init(mode:initialSettings:headerBlockValidation:contentLengthValidation:maximumSequentialEmptyDataFrames:maximumBufferedControlFrames:)","type":"topic","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"mode"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:8NIOHTTP20A7HandlerC","text":"NIOHTTP2Handler"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:8NIOHTTP20A7HandlerC10ParserModeO","text":"ParserMode"},{"kind":"text","text":", "},{"kind":"externalParam","text":"initialSettings"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:8NIOHTTP213HTTP2Settingsa","text":"HTTP2Settings"},{"kind":"text","text":", "},{"kind":"externalParam","text":"headerBlockValidation"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:8NIOHTTP20A7HandlerC","text":"NIOHTTP2Handler"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:8NIOHTTP20A7HandlerC15ValidationStateO","text":"ValidationState"},{"kind":"text","text":", "},{"kind":"externalParam","text":"contentLengthValidation"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:8NIOHTTP20A7HandlerC","text":"NIOHTTP2Handler"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:8NIOHTTP20A7HandlerC15ValidationStateO","text":"ValidationState"},{"kind":"text","text":", "},{"kind":"externalParam","text":"maximumSequentialEmptyDataFrames"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"},{"kind":"text","text":", "},{"kind":"externalParam","text":"maximumBufferedControlFrames"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Constructs a "},{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/NIOHTTP2Handler","isActive":true,"type":"reference"},{"type":"text","text":"."}],"kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP2/NIOHTTP2Handler/flush(context:)":{"kind":"symbol","title":"flush(context:)","abstract":[{"text":"Called to request that the ","type":"text"},{"code":"Channel","type":"codeVoice"},{"type":"text","text":" flush all pending writes. The flush operation will try to flush out all previous written messages"},{"type":"text","text":" "},{"type":"text","text":"that are pending."}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/NIOHTTP2Handler\/flush(context:)","role":"symbol","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"flush","kind":"identifier"},{"text":"(","kind":"text"},{"text":"context","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC","text":"ChannelHandlerContext","kind":"typeIdentifier"},{"text":")","kind":"text"}],"url":"\/documentation\/niohttp2\/niohttp2handler\/flush(context:)"},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP2/NIOHTTP2Handler/ChannelOutboundHandler-Implementations":{"role":"collectionGroup","title":"ChannelOutboundHandler Implementations","url":"\/documentation\/niohttp2\/niohttp2handler\/channeloutboundhandler-implementations","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/NIOHTTP2Handler\/ChannelOutboundHandler-Implementations","type":"topic","abstract":[],"kind":"article"},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP2/NIOHTTP2Handler/ParserMode":{"url":"\/documentation\/niohttp2\/niohttp2handler\/parsermode","role":"symbol","title":"NIOHTTP2Handler.ParserMode","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ParserMode","kind":"identifier"}],"type":"topic","kind":"symbol","abstract":[{"text":"The mode for this parser to operate in: client or server.","type":"text"}],"navigatorTitle":[{"text":"ParserMode","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/NIOHTTP2Handler\/ParserMode"},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP2/NIOHTTP2Handler/init(mode:initialSettings:headerBlockValidation:contentLengthValidation:)":{"kind":"symbol","title":"init(mode:initialSettings:headerBlockValidation:contentLengthValidation:)","abstract":[{"text":"Constructs a ","type":"text"},{"isActive":true,"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/NIOHTTP2Handler","type":"reference"},{"type":"text","text":"."}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/NIOHTTP2Handler\/init(mode:initialSettings:headerBlockValidation:contentLengthValidation:)","role":"symbol","type":"topic","fragments":[{"text":"convenience","kind":"keyword"},{"text":" ","kind":"text"},{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"mode","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:8NIOHTTP20A7HandlerC","text":"NIOHTTP2Handler","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:8NIOHTTP20A7HandlerC10ParserModeO","text":"ParserMode","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"initialSettings","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:8NIOHTTP213HTTP2Settingsa","text":"HTTP2Settings","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"headerBlockValidation","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:8NIOHTTP20A7HandlerC","text":"NIOHTTP2Handler","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:8NIOHTTP20A7HandlerC15ValidationStateO","text":"ValidationState","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"contentLengthValidation","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:8NIOHTTP20A7HandlerC","text":"NIOHTTP2Handler","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:8NIOHTTP20A7HandlerC15ValidationStateO","text":"ValidationState","kind":"typeIdentifier"},{"text":")","kind":"text"}],"url":"\/documentation\/niohttp2\/niohttp2handler\/init(mode:initialsettings:headerblockvalidation:contentlengthvalidation:)"},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP2/NIOHTTP2Handler":{"abstract":[{"isActive":true,"type":"reference","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/NIOHTTP2Handler"},{"text":" implements the HTTP\/2 protocol for a single connection.","type":"text"}],"title":"NIOHTTP2Handler","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"NIOHTTP2Handler","kind":"identifier"}],"url":"\/documentation\/niohttp2\/niohttp2handler","type":"topic","kind":"symbol","role":"symbol","navigatorTitle":[{"text":"NIOHTTP2Handler","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/NIOHTTP2Handler"},"doc://co.pointfree.VaporRouting/s28CustomDebugStringConvertibleP":{"title":"Swift.CustomDebugStringConvertible","identifier":"doc:\/\/co.pointfree.VaporRouting\/s28CustomDebugStringConvertibleP","type":"unresolvable"},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP2/NIOHTTP2Handler/ChannelInboundHandler-Implementations":{"kind":"article","title":"ChannelInboundHandler Implementations","abstract":[],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/NIOHTTP2Handler\/ChannelInboundHandler-Implementations","role":"collectionGroup","type":"topic","url":"\/documentation\/niohttp2\/niohttp2handler\/channelinboundhandler-implementations"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelInboundHandler":{"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ChannelInboundHandler"}],"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelInboundHandler","title":"ChannelInboundHandler","url":"\/documentation\/niocore\/channelinboundhandler","role":"symbol","kind":"symbol","abstract":[{"code":"ChannelHandler","type":"codeVoice"},{"type":"text","text":" which handles inbound I\/O events for a "},{"code":"Channel","type":"codeVoice"},{"type":"text","text":"."}],"navigatorTitle":[{"kind":"identifier","text":"ChannelInboundHandler"}]},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP2/NIOHTTP2Handler/channelWritabilityChanged(context:)":{"role":"symbol","title":"channelWritabilityChanged(context:)","url":"\/documentation\/niohttp2\/niohttp2handler\/channelwritabilitychanged(context:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/NIOHTTP2Handler\/channelWritabilityChanged(context:)","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"channelWritabilityChanged","kind":"identifier"},{"text":"(","kind":"text"},{"text":"context","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC","text":"ChannelHandlerContext","kind":"typeIdentifier"},{"text":")","kind":"text"}],"abstract":[{"type":"text","text":"The writability state of the "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":" has changed, either because it has buffered more data than the writability high water mark, or because the amount of buffered data has dropped below the writability low water mark."},{"type":"text","text":" "},{"type":"text","text":"You can check the state with "},{"code":"Channel.isWritable","type":"codeVoice"},{"type":"text","text":"."}],"kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP2/NIOHTTP2Handler/channelInactive(context:)":{"kind":"symbol","title":"channelInactive(context:)","abstract":[{"type":"text","text":"Called when the "},{"code":"Channel","type":"codeVoice"},{"type":"text","text":" has become inactive and is no longer able to send and receive data`."}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/NIOHTTP2Handler\/channelInactive(context:)","role":"symbol","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"channelInactive","kind":"identifier"},{"text":"(","kind":"text"},{"text":"context","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC","text":"ChannelHandlerContext","kind":"typeIdentifier"},{"text":")","kind":"text"}],"url":"\/documentation\/niohttp2\/niohttp2handler\/channelinactive(context:)"}}}