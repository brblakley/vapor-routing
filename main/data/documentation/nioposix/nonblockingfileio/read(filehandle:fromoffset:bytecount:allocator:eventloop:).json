{"abstract":[{"type":"text","text":"Read "},{"type":"codeVoice","code":"byteCount"},{"type":"text","text":" bytes starting at "},{"type":"codeVoice","code":"fileOffset"},{"text":" from ","type":"text"},{"code":"fileHandle","type":"codeVoice"},{"text":" in ","type":"text"},{"code":"NonBlockingFileIO","type":"codeVoice"},{"text":"’s private thread pool","type":"text"},{"text":" ","type":"text"},{"text":"which is separate from any ","type":"text"},{"code":"EventLoop","type":"codeVoice"},{"text":" thread.","type":"text"}],"sections":[],"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/NonBlockingFileIO"]]},"metadata":{"role":"symbol","title":"read(fileHandle:fromOffset:byteCount:allocator:eventLoop:)","roleHeading":"Instance Method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"read"},{"kind":"text","text":"("},{"kind":"externalParam","text":"fileHandle"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore13NIOFileHandleC","text":"NIOFileHandle"},{"kind":"text","text":", "},{"kind":"externalParam","text":"fromOffset"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:s5Int64V","text":"Int64"},{"kind":"text","text":", "},{"kind":"externalParam","text":"byteCount"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"},{"kind":"text","text":", "},{"kind":"externalParam","text":"allocator"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore19ByteBufferAllocatorV","text":"ByteBufferAllocator"},{"kind":"text","text":", "},{"kind":"externalParam","text":"eventLoop"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7NIOCore9EventLoopP","text":"EventLoop","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:7NIOCore10ByteBufferV","text":"ByteBuffer","kind":"typeIdentifier"},{"text":">","kind":"text"}],"symbolKind":"method","externalID":"s:8NIOPosix17NonBlockingFileIOV4read10fileHandle10fromOffset9byteCount9allocator9eventLoop7NIOCore05EventO6FutureCyAJ10ByteBufferVGAJ07NIOFileH0C_s5Int64VSiAJ0sT9AllocatorVAJ0qO0_ptF","modules":[{"name":"NIOPosix"}]},"kind":"symbol","identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/NonBlockingFileIO\/read(fileHandle:fromOffset:byteCount:allocator:eventLoop:)"},"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"read"},{"kind":"text","text":"("},{"kind":"externalParam","text":"fileHandle"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7NIOCore13NIOFileHandleC","kind":"typeIdentifier","text":"NIOFileHandle","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/NIOFileHandle"},{"kind":"text","text":", "},{"kind":"externalParam","text":"fromOffset"},{"kind":"text","text":" "},{"kind":"internalParam","text":"fileOffset"},{"kind":"text","text":": "},{"preciseIdentifier":"s:s5Int64V","kind":"typeIdentifier","text":"Int64"},{"kind":"text","text":", "},{"kind":"externalParam","text":"byteCount"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Si","kind":"typeIdentifier","text":"Int"},{"kind":"text","text":", "},{"kind":"externalParam","text":"allocator"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7NIOCore19ByteBufferAllocatorV","kind":"typeIdentifier","text":"ByteBufferAllocator","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ByteBufferAllocator"},{"kind":"text","text":", "},{"kind":"externalParam","text":"eventLoop"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7NIOCore9EventLoopP","kind":"typeIdentifier","text":"EventLoop","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoop"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:7NIOCore15EventLoopFutureC","kind":"typeIdentifier","text":"EventLoopFuture","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture"},{"kind":"text","text":"<"},{"preciseIdentifier":"s:7NIOCore10ByteBufferV","kind":"typeIdentifier","text":"ByteBuffer","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ByteBuffer"},{"kind":"text","text":">"}],"platforms":["Linux"]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"name":"fileHandle","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"code":"NIOFileHandle","type":"codeVoice"},{"type":"text","text":" to read."}]}]},{"name":"fileOffset","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The offset to read from."}]}]},{"name":"byteCount","content":[{"inlineContent":[{"text":"The number of bytes to read from ","type":"text"},{"code":"fileHandle","type":"codeVoice"},{"text":".","type":"text"}],"type":"paragraph"}]},{"name":"allocator","content":[{"type":"paragraph","inlineContent":[{"text":"A ","type":"text"},{"code":"ByteBufferAllocator","type":"codeVoice"},{"text":" used to allocate space for the returned ","type":"text"},{"code":"ByteBuffer","type":"codeVoice"},{"text":".","type":"text"}]}]},{"name":"eventLoop","content":[{"inlineContent":[{"type":"text","text":"The "},{"type":"codeVoice","code":"EventLoop"},{"type":"text","text":" to create the returned "},{"type":"codeVoice","code":"EventLoopFuture"},{"type":"text","text":" from."}],"type":"paragraph"}]}]},{"kind":"content","content":[{"type":"heading","anchor":"return-value","text":"Return Value","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"An "},{"type":"codeVoice","code":"EventLoopFuture"},{"type":"text","text":" which delivers a "},{"type":"codeVoice","code":"ByteBuffer"},{"type":"text","text":" if the read was successful or a failure on error."}]}]},{"kind":"content","content":[{"level":2,"text":"Discussion","anchor":"discussion","type":"heading"},{"inlineContent":[{"type":"text","text":"The returned "},{"type":"codeVoice","code":"ByteBuffer"},{"type":"text","text":" will not have less than "},{"type":"codeVoice","code":"byteCount"},{"type":"text","text":" bytes unless we hit end-of-file in which"},{"type":"text","text":" "},{"type":"text","text":"case the "},{"type":"codeVoice","code":"ByteBuffer"},{"type":"text","text":" will contain the bytes available to read."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"This method will not use the file descriptor’s seek pointer which means there is no danger of reading from the"},{"type":"text","text":" "},{"type":"text","text":"same "},{"type":"codeVoice","code":"fileHandle"},{"type":"text","text":" in multiple threads."}],"type":"paragraph"},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Only use this function for small enough "},{"code":"byteCount","type":"codeVoice"},{"type":"text","text":"s as it will need to allocate enough memory to hold "},{"code":"byteCount","type":"codeVoice"},{"type":"text","text":" bytes."}]}],"name":"Note","style":"note","type":"aside"},{"content":[{"type":"paragraph","inlineContent":[{"text":"","type":"text"},{"code":"read(fileRegion:allocator:eventLoop:)","type":"codeVoice"},{"text":" should be preferred as it uses ","type":"text"},{"code":"FileRegion","type":"codeVoice"},{"text":" object instead of raw ","type":"text"},{"code":"NIOFileHandle","type":"codeVoice"},{"text":"s.","type":"text"}]}],"name":"Note","style":"note","type":"aside"}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/nioposix\/nonblockingfileio\/read(filehandle:fromoffset:bytecount:allocator:eventloop:)"]}],"schemaVersion":{"patch":0,"minor":3,"major":0},"references":{"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoopFuture":{"navigatorTitle":[{"kind":"identifier","text":"EventLoopFuture"}],"abstract":[{"text":"Holder for a result that will be provided later.","type":"text"}],"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"EventLoopFuture"}],"kind":"symbol","url":"\/documentation\/niocore\/eventloopfuture","role":"symbol","title":"EventLoopFuture","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture","type":"topic"},"doc://co.pointfree.VaporRouting/documentation/NIOPosix":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix","type":"topic","abstract":[],"kind":"symbol","url":"\/documentation\/nioposix","role":"collection","title":"NIOPosix"},"doc://co.pointfree.VaporRouting/documentation/NIOPosix/NonBlockingFileIO/read(fileHandle:fromOffset:byteCount:allocator:eventLoop:)":{"abstract":[{"type":"text","text":"Read "},{"type":"codeVoice","code":"byteCount"},{"type":"text","text":" bytes starting at "},{"code":"fileOffset","type":"codeVoice"},{"type":"text","text":" from "},{"code":"fileHandle","type":"codeVoice"},{"type":"text","text":" in "},{"code":"NonBlockingFileIO","type":"codeVoice"},{"type":"text","text":"’s private thread pool"},{"text":" ","type":"text"},{"text":"which is separate from any ","type":"text"},{"code":"EventLoop","type":"codeVoice"},{"text":" thread.","type":"text"}],"role":"symbol","url":"\/documentation\/nioposix\/nonblockingfileio\/read(filehandle:fromoffset:bytecount:allocator:eventloop:)","kind":"symbol","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/NonBlockingFileIO\/read(fileHandle:fromOffset:byteCount:allocator:eventLoop:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"read","kind":"identifier"},{"text":"(","kind":"text"},{"text":"fileHandle","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"NIOFileHandle","preciseIdentifier":"s:7NIOCore13NIOFileHandleC","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"fromOffset","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Int64","preciseIdentifier":"s:s5Int64V","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"byteCount","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"allocator","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7NIOCore19ByteBufferAllocatorV","text":"ByteBufferAllocator","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"eventLoop","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7NIOCore9EventLoopP","text":"EventLoop","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:7NIOCore10ByteBufferV","text":"ByteBuffer","kind":"typeIdentifier"},{"text":">","kind":"text"}],"title":"read(fileHandle:fromOffset:byteCount:allocator:eventLoop:)"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/NIOFileHandle":{"title":"NIOFileHandle","url":"\/documentation\/niocore\/niofilehandle","abstract":[{"type":"text","text":"A "},{"type":"codeVoice","code":"NIOFileHandle"},{"type":"text","text":" is a handle to an open file."}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"NIOFileHandle","kind":"identifier"}],"navigatorTitle":[{"text":"NIOFileHandle","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/NIOFileHandle","kind":"symbol","type":"topic","role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoop":{"kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"EventLoop","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoop","type":"topic","navigatorTitle":[{"text":"EventLoop","kind":"identifier"}],"title":"EventLoop","role":"symbol","url":"\/documentation\/niocore\/eventloop","abstract":[{"text":"An EventLoop processes IO \/ tasks in an endless loop for ","type":"text"},{"code":"Channel","type":"codeVoice"},{"type":"text","text":"s until it’s closed."}]},"doc://co.pointfree.VaporRouting/documentation/NIOPosix/NonBlockingFileIO":{"navigatorTitle":[{"kind":"identifier","text":"NonBlockingFileIO"}],"type":"topic","role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/NonBlockingFileIO","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"NonBlockingFileIO"}],"url":"\/documentation\/nioposix\/nonblockingfileio","kind":"symbol","title":"NonBlockingFileIO","abstract":[{"code":"NonBlockingFileIO","type":"codeVoice"},{"type":"text","text":" is a helper that allows you to read files without blocking the calling thread."}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ByteBuffer":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ByteBuffer"}],"url":"\/documentation\/niocore\/bytebuffer","title":"ByteBuffer","kind":"symbol","type":"topic","abstract":[{"type":"codeVoice","code":"ByteBuffer"},{"type":"text","text":" stores contiguously allocated raw bytes. It is a random and sequential accessible sequence of zero or"},{"type":"text","text":" "},{"type":"text","text":"more bytes (octets)."}],"navigatorTitle":[{"kind":"identifier","text":"ByteBuffer"}],"role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ByteBuffer"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ByteBufferAllocator":{"abstract":[{"type":"text","text":"The preferred allocator for "},{"code":"ByteBuffer","type":"codeVoice"},{"type":"text","text":" values. The allocation strategy is opaque but is currently libc’s"},{"type":"text","text":" "},{"code":"malloc","type":"codeVoice"},{"type":"text","text":", "},{"code":"realloc","type":"codeVoice"},{"type":"text","text":" and "},{"code":"free","type":"codeVoice"},{"text":".","type":"text"}],"title":"ByteBufferAllocator","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ByteBufferAllocator"}],"navigatorTitle":[{"kind":"identifier","text":"ByteBufferAllocator"}],"kind":"symbol","url":"\/documentation\/niocore\/bytebufferallocator","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ByteBufferAllocator","role":"symbol"}}}