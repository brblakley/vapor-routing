{"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/ClientBootstrap"]]},"schemaVersion":{"major":0,"minor":3,"patch":0},"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/ClientBootstrap\/protocolHandlers(_:)","interfaceLanguage":"swift"},"primaryContentSections":[{"declarations":[{"platforms":["Linux"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"protocolHandlers"},{"kind":"text","text":"("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"handlers"},{"kind":"text","text":": "},{"kind":"keyword","text":"@escaping"},{"kind":"text","text":" () -> ["},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore14ChannelHandlerP","text":"ChannelHandler","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelHandler"},{"kind":"text","text":"]) -> "},{"kind":"typeIdentifier","text":"Self"}],"languages":["swift"]}],"kind":"declarations"},{"content":[{"anchor":"discussion","text":"Discussion","type":"heading","level":2},{"inlineContent":[{"text":"Per bootstrap, you can only set the ","type":"text"},{"code":"protocolHandlers","type":"codeVoice"},{"text":" once. Typically, ","type":"text"},{"code":"protocolHandlers","type":"codeVoice"},{"text":" are used for the TLS","type":"text"},{"text":" ","type":"text"},{"text":"implementation. Most notably, ","type":"text"},{"code":"NIOClientTCPBootstrap","type":"codeVoice"},{"text":", NIO’s “universal bootstrap” abstraction, uses","type":"text"},{"text":" ","type":"text"},{"code":"protocolHandlers","type":"codeVoice"},{"text":" to add the required ","type":"text"},{"code":"ChannelHandler","type":"codeVoice"},{"text":"s for many TLS implementations.","type":"text"}],"type":"paragraph"}],"kind":"content"}],"metadata":{"title":"protocolHandlers(_:)","roleHeading":"Instance Method","role":"symbol","externalID":"s:8NIOPosix15ClientBootstrapC16protocolHandlersyACXDSay7NIOCore14ChannelHandler_pGycF","symbolKind":"method","modules":[{"name":"NIOPosix"}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"protocolHandlers"},{"text":"(() -> [","kind":"text"},{"preciseIdentifier":"s:7NIOCore14ChannelHandlerP","text":"ChannelHandler","kind":"typeIdentifier"},{"text":"]) -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/nioposix\/clientbootstrap\/protocolhandlers(_:)"]}],"abstract":[{"text":"Sets the protocol handlers that will be added to the front of the ","type":"text"},{"type":"codeVoice","code":"ChannelPipeline"},{"text":" right after the","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"channelInitializer"},{"type":"text","text":" has been called."}],"kind":"symbol","sections":[],"references":{"doc://co.pointfree.VaporRouting/documentation/NIOPosix/ClientBootstrap":{"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ClientBootstrap","kind":"identifier"}],"abstract":[{"text":"A ","type":"text"},{"code":"ClientBootstrap","type":"codeVoice"},{"text":" is an easy way to bootstrap a ","type":"text"},{"code":"SocketChannel","type":"codeVoice"},{"text":" when creating network clients.","type":"text"}],"role":"symbol","navigatorTitle":[{"text":"ClientBootstrap","kind":"identifier"}],"type":"topic","kind":"symbol","title":"ClientBootstrap","url":"\/documentation\/nioposix\/clientbootstrap","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/ClientBootstrap"},"doc://co.pointfree.VaporRouting/documentation/NIOPosix/ClientBootstrap/protocolHandlers(_:)":{"title":"protocolHandlers(_:)","role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/ClientBootstrap\/protocolHandlers(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"protocolHandlers","kind":"identifier"},{"text":"(() -> [","kind":"text"},{"preciseIdentifier":"s:7NIOCore14ChannelHandlerP","text":"ChannelHandler","kind":"typeIdentifier"},{"text":"]) -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"abstract":[{"text":"Sets the protocol handlers that will be added to the front of the ","type":"text"},{"type":"codeVoice","code":"ChannelPipeline"},{"text":" right after the","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"channelInitializer"},{"text":" has been called.","type":"text"}],"url":"\/documentation\/nioposix\/clientbootstrap\/protocolhandlers(_:)","kind":"symbol","type":"topic"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelHandler":{"title":"ChannelHandler","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ChannelHandler"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelHandler","kind":"symbol","abstract":[{"type":"text","text":"You should "},{"inlineContent":[{"text":"never","type":"text"}],"type":"emphasis"},{"type":"text","text":" implement this protocol directly. Please implement one of its sub-protocols."}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"ChannelHandler"}],"url":"\/documentation\/niocore\/channelhandler","type":"topic"},"doc://co.pointfree.VaporRouting/documentation/NIOPosix":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix","type":"topic","abstract":[],"kind":"symbol","url":"\/documentation\/nioposix","role":"collection","title":"NIOPosix"}}}