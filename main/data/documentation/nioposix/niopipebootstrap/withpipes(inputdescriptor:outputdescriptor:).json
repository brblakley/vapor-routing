{"sections":[],"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/NIOPipeBootstrap"]]},"abstract":[{"type":"text","text":"Create the "},{"type":"codeVoice","code":"PipeChannel"},{"type":"text","text":" with the provided input and output file descriptors."}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/nioposix\/niopipebootstrap\/withpipes(inputdescriptor:outputdescriptor:)"]}],"metadata":{"modules":[{"name":"NIOPosix"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"withPipes","kind":"identifier"},{"text":"(","kind":"text"},{"text":"inputDescriptor","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"CInt","preciseIdentifier":"s:s4CInta","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"outputDescriptor","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"CInt","preciseIdentifier":"s:s4CInta","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"EventLoopFuture","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Channel","preciseIdentifier":"s:7NIOCore7ChannelP","kind":"typeIdentifier"},{"text":">","kind":"text"}],"role":"symbol","roleHeading":"Instance Method","title":"withPipes(inputDescriptor:outputDescriptor:)","symbolKind":"method","externalID":"s:8NIOPosix16NIOPipeBootstrapC9withPipes15inputDescriptor06outputG07NIOCore15EventLoopFutureCyAG7Channel_pGs5Int32V_AMtF"},"schemaVersion":{"patch":0,"major":0,"minor":3},"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"withPipes","kind":"identifier"},{"text":"(","kind":"text"},{"text":"inputDescriptor","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"CInt","kind":"typeIdentifier","preciseIdentifier":"s:s4CInta"},{"text":", ","kind":"text"},{"text":"outputDescriptor","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"CInt","kind":"typeIdentifier","preciseIdentifier":"s:s4CInta"},{"text":") -> ","kind":"text"},{"text":"EventLoopFuture","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15EventLoopFutureC"},{"text":"<","kind":"text"},{"text":"Channel","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/Channel","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore7ChannelP"},{"text":">","kind":"text"}],"platforms":["Linux"]}],"kind":"declarations"},{"parameters":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"type":"emphasis","inlineContent":[{"text":"Unix file descriptor","type":"text"}]},{"type":"text","text":" for the input (ie. the read side)."}]}],"name":"inputDescriptor"},{"content":[{"inlineContent":[{"text":"The ","type":"text"},{"inlineContent":[{"text":"Unix file descriptor","type":"text"}],"type":"emphasis"},{"text":" for the output (ie. the write side).","type":"text"}],"type":"paragraph"}],"name":"outputDescriptor"}],"kind":"parameters"},{"content":[{"text":"Return Value","level":2,"anchor":"return-value","type":"heading"},{"inlineContent":[{"text":"an ","type":"text"},{"type":"codeVoice","code":"EventLoopFuture<Channel>"},{"text":" to deliver the ","type":"text"},{"type":"codeVoice","code":"Channel"},{"text":".","type":"text"}],"type":"paragraph"}],"kind":"content"},{"content":[{"text":"Discussion","anchor":"discussion","type":"heading","level":2},{"inlineContent":[{"text":"The input and output file descriptors must be distinct. If you have a single file descriptor, consider using","type":"text"},{"text":" ","type":"text"},{"code":"ClientBootstrap.withConnectedSocket(descriptor:)","type":"codeVoice"},{"text":" if itâ€™s a socket or","type":"text"},{"text":" ","type":"text"},{"code":"NIOPipeBootstrap.withInputOutputDescriptor","type":"codeVoice"},{"text":" if it is not a socket.","type":"text"}],"type":"paragraph"},{"name":"Note","style":"note","content":[{"type":"paragraph","inlineContent":[{"text":"If this method returns a succeeded future, SwiftNIO will close ","type":"text"},{"code":"inputDescriptor","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"outputDescriptor","type":"codeVoice"},{"text":" ","type":"text"},{"text":"when the ","type":"text"},{"code":"Channel","type":"codeVoice"},{"text":" becomes inactive. You ","type":"text"},{"inlineContent":[{"type":"text","text":"must not"}],"type":"emphasis"},{"text":" do any further operations ","type":"text"},{"code":"inputDescriptor","type":"codeVoice"},{"text":" or","type":"text"},{"text":" ","type":"text"},{"code":"outputDescriptor","type":"codeVoice"},{"text":", including ","type":"text"},{"code":"close","type":"codeVoice"},{"text":".","type":"text"},{"text":" ","type":"text"},{"text":"If this method returns a failed future, you still own the file descriptors and are responsible for","type":"text"},{"text":" ","type":"text"},{"text":"closing them.","type":"text"}]}],"type":"aside"}],"kind":"content"}],"kind":"symbol","identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/NIOPipeBootstrap\/withPipes(inputDescriptor:outputDescriptor:)"},"references":{"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoopFuture":{"navigatorTitle":[{"kind":"identifier","text":"EventLoopFuture"}],"abstract":[{"text":"Holder for a result that will be provided later.","type":"text"}],"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"EventLoopFuture"}],"kind":"symbol","url":"\/documentation\/niocore\/eventloopfuture","role":"symbol","title":"EventLoopFuture","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture","type":"topic"},"doc://co.pointfree.VaporRouting/documentation/NIOPosix/NIOPipeBootstrap":{"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"NIOPipeBootstrap"}],"title":"NIOPipeBootstrap","abstract":[{"type":"text","text":"A "},{"type":"codeVoice","code":"NIOPipeBootstrap"},{"type":"text","text":" is an easy way to bootstrap a "},{"type":"codeVoice","code":"PipeChannel"},{"type":"text","text":" which uses two (uni-directional) UNIX pipes"},{"type":"text","text":" "},{"type":"text","text":"and makes a "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":" out of them."}],"role":"symbol","url":"\/documentation\/nioposix\/niopipebootstrap","navigatorTitle":[{"kind":"identifier","text":"NIOPipeBootstrap"}],"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/NIOPipeBootstrap","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/Channel":{"url":"\/documentation\/niocore\/channel","navigatorTitle":[{"kind":"identifier","text":"Channel"}],"title":"Channel","role":"symbol","abstract":[{"type":"text","text":"A "},{"code":"Channel","type":"codeVoice"},{"type":"text","text":" is easiest thought of as a network socket. But it can be anything that is capable of I\/O operations such"},{"type":"text","text":" "},{"type":"text","text":"as read, write, connect, and bind."}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/Channel","kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Channel"}],"type":"topic"},"doc://co.pointfree.VaporRouting/documentation/NIOPosix":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix","type":"topic","abstract":[],"kind":"symbol","url":"\/documentation\/nioposix","role":"collection","title":"NIOPosix"},"doc://co.pointfree.VaporRouting/documentation/NIOPosix/NIOPipeBootstrap/withPipes(inputDescriptor:outputDescriptor:)":{"abstract":[{"type":"text","text":"Create the "},{"type":"codeVoice","code":"PipeChannel"},{"type":"text","text":" with the provided input and output file descriptors."}],"role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"withPipes"},{"kind":"text","text":"("},{"kind":"externalParam","text":"inputDescriptor"},{"kind":"text","text":": "},{"preciseIdentifier":"s:s4CInta","kind":"typeIdentifier","text":"CInt"},{"kind":"text","text":", "},{"kind":"externalParam","text":"outputDescriptor"},{"kind":"text","text":": "},{"preciseIdentifier":"s:s4CInta","kind":"typeIdentifier","text":"CInt"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:7NIOCore15EventLoopFutureC","kind":"typeIdentifier","text":"EventLoopFuture"},{"kind":"text","text":"<"},{"preciseIdentifier":"s:7NIOCore7ChannelP","kind":"typeIdentifier","text":"Channel"},{"kind":"text","text":">"}],"kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/NIOPipeBootstrap\/withPipes(inputDescriptor:outputDescriptor:)","type":"topic","title":"withPipes(inputDescriptor:outputDescriptor:)","url":"\/documentation\/nioposix\/niopipebootstrap\/withpipes(inputdescriptor:outputdescriptor:)"}}}