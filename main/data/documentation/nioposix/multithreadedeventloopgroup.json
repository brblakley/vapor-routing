{"topicSections":[{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/MultiThreadedEventLoopGroup\/init(numberOfThreads:)"],"title":"Initializers"},{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/MultiThreadedEventLoopGroup\/any()","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/MultiThreadedEventLoopGroup\/makeIterator()","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/MultiThreadedEventLoopGroup\/next()","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/MultiThreadedEventLoopGroup\/shutdownGracefully(queue:_:)"],"title":"Instance Methods"},{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/MultiThreadedEventLoopGroup\/currentEventLoop"],"title":"Type Properties"},{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/MultiThreadedEventLoopGroup\/withCurrentThreadAsEventLoop(_:)"],"title":"Type Methods"},{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/MultiThreadedEventLoopGroup\/CustomStringConvertible-Implementations","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/MultiThreadedEventLoopGroup\/EventLoopGroup-Implementations"],"generated":true,"title":"Default Implementations"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/MultiThreadedEventLoopGroup"},"sections":[],"metadata":{"title":"MultiThreadedEventLoopGroup","modules":[{"name":"NIOPosix"}],"roleHeading":"Class","externalID":"s:8NIOPosix27MultiThreadedEventLoopGroupC","navigatorTitle":[{"kind":"identifier","text":"MultiThreadedEventLoopGroup"}],"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"MultiThreadedEventLoopGroup"}],"role":"symbol","symbolKind":"class"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/nioposix\/multithreadedeventloopgroup"]}],"abstract":[{"type":"text","text":"An "},{"type":"codeVoice","code":"EventLoopGroup"},{"type":"text","text":" which will create multiple "},{"type":"codeVoice","code":"EventLoop"},{"type":"text","text":"s, each tied to its own "},{"type":"codeVoice","code":"NIOThread"},{"type":"text","text":"."}],"schemaVersion":{"minor":3,"patch":0,"major":0},"relationshipsSections":[{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopGroup","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/NIOPreconcurrencySendable","doc:\/\/co.pointfree.VaporRouting\/s23CustomStringConvertibleP","doc:\/\/co.pointfree.VaporRouting\/s8SendableP"],"title":"Conforms To","type":"conformsTo","kind":"relationships"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"text":"final","kind":"keyword"},{"text":" ","kind":"text"},{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"MultiThreadedEventLoopGroup","kind":"identifier"}],"platforms":["Linux"]}]},{"kind":"content","content":[{"type":"heading","text":"Overview","level":2,"anchor":"overview"},{"inlineContent":[{"type":"text","text":"The effect of initializing a "},{"code":"MultiThreadedEventLoopGroup","type":"codeVoice"},{"type":"text","text":" is to spawn "},{"code":"numberOfThreads","type":"codeVoice"},{"type":"text","text":" fresh threads which will"},{"type":"text","text":" "},{"type":"text","text":"all run their own "},{"code":"EventLoop","type":"codeVoice"},{"type":"text","text":". Those threads will not be shut down until "},{"code":"shutdownGracefully","type":"codeVoice"},{"type":"text","text":" or"},{"type":"text","text":" "},{"code":"syncShutdownGracefully","type":"codeVoice"},{"type":"text","text":" is called."}],"type":"paragraph"},{"type":"aside","style":"note","name":"Note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"It’s good style to call "},{"type":"codeVoice","code":"MultiThreadedEventLoopGroup.shutdownGracefully"},{"type":"text","text":" or"},{"type":"text","text":" "},{"type":"codeVoice","code":"MultiThreadedEventLoopGroup.syncShutdownGracefully"},{"type":"text","text":" when you no longer need this "},{"type":"codeVoice","code":"EventLoopGroup"},{"type":"text","text":". In"},{"type":"text","text":" "},{"type":"text","text":"many cases that is just before your program exits."}]}]},{"type":"aside","style":"warning","name":"Warning","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Unit tests often spawn one "},{"code":"MultiThreadedEventLoopGroup","type":"codeVoice"},{"type":"text","text":" per unit test to force isolation between the"},{"type":"text","text":" "},{"type":"text","text":"tests. In those cases it’s important to shut the "},{"code":"MultiThreadedEventLoopGroup","type":"codeVoice"},{"type":"text","text":" down at the end of the"},{"type":"text","text":" "},{"type":"text","text":"test. A good place to start a "},{"code":"MultiThreadedEventLoopGroup","type":"codeVoice"},{"type":"text","text":" is the "},{"code":"setUp","type":"codeVoice"},{"type":"text","text":" method of your "},{"code":"XCTestCase","type":"codeVoice"},{"type":"text","text":" "},{"type":"text","text":"subclass, a good place to shut it down is the "},{"code":"tearDown","type":"codeVoice"},{"type":"text","text":" method."}]}]}]}],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix"]]},"references":{"doc://co.pointfree.VaporRouting/documentation/NIOPosix/MultiThreadedEventLoopGroup/next()":{"title":"next()","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/MultiThreadedEventLoopGroup\/next()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"next"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"EventLoop","preciseIdentifier":"s:7NIOCore9EventLoopP"}],"url":"\/documentation\/nioposix\/multithreadedeventloopgroup\/next()","abstract":[{"type":"text","text":"Returns the next "},{"type":"codeVoice","code":"EventLoop"},{"type":"text","text":" from this "},{"type":"codeVoice","code":"MultiThreadedEventLoopGroup"},{"type":"text","text":"."}],"type":"topic","role":"symbol","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOPosix/MultiThreadedEventLoopGroup/currentEventLoop":{"title":"currentEventLoop","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/MultiThreadedEventLoopGroup\/currentEventLoop","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"currentEventLoop","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7NIOCore9EventLoopP","text":"EventLoop","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"url":"\/documentation\/nioposix\/multithreadedeventloopgroup\/currenteventloop","abstract":[{"type":"text","text":"Returns the "},{"type":"codeVoice","code":"EventLoop"},{"type":"text","text":" for the calling thread."}],"type":"topic","role":"symbol","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOPosix/MultiThreadedEventLoopGroup/shutdownGracefully(queue:_:)":{"title":"shutdownGracefully(queue:_:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/MultiThreadedEventLoopGroup\/shutdownGracefully(queue:_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"shutdownGracefully"},{"kind":"text","text":"("},{"kind":"externalParam","text":"queue"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"DispatchQueue","preciseIdentifier":"s:8Dispatch0A5QueueC"},{"kind":"text","text":", ("},{"kind":"typeIdentifier","text":"Error","preciseIdentifier":"s:s5ErrorP"},{"kind":"text","text":"?) -> "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":")"}],"url":"\/documentation\/nioposix\/multithreadedeventloopgroup\/shutdowngracefully(queue:_:)","abstract":[{"type":"text","text":"Shut this "},{"type":"codeVoice","code":"MultiThreadedEventLoopGroup"},{"type":"text","text":" down which causes the "},{"type":"codeVoice","code":"EventLoop"},{"type":"text","text":"s and their associated threads to be"},{"type":"text","text":" "},{"type":"text","text":"shut down and release their resources."}],"type":"topic","role":"symbol","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOPosix":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix","type":"topic","abstract":[],"kind":"symbol","url":"\/documentation\/nioposix","role":"collection","title":"NIOPosix"},"doc://co.pointfree.VaporRouting/documentation/NIOPosix/MultiThreadedEventLoopGroup/EventLoopGroup-Implementations":{"role":"collectionGroup","title":"EventLoopGroup Implementations","abstract":[],"kind":"article","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/MultiThreadedEventLoopGroup\/EventLoopGroup-Implementations","url":"\/documentation\/nioposix\/multithreadedeventloopgroup\/eventloopgroup-implementations"},"doc://co.pointfree.VaporRouting/s23CustomStringConvertibleP":{"title":"Swift.CustomStringConvertible","type":"unresolvable","identifier":"doc:\/\/co.pointfree.VaporRouting\/s23CustomStringConvertibleP"},"doc://co.pointfree.VaporRouting/documentation/NIOPosix/MultiThreadedEventLoopGroup":{"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"MultiThreadedEventLoopGroup"}],"kind":"symbol","role":"symbol","type":"topic","title":"MultiThreadedEventLoopGroup","url":"\/documentation\/nioposix\/multithreadedeventloopgroup","abstract":[{"type":"text","text":"An "},{"type":"codeVoice","code":"EventLoopGroup"},{"type":"text","text":" which will create multiple "},{"type":"codeVoice","code":"EventLoop"},{"type":"text","text":"s, each tied to its own "},{"type":"codeVoice","code":"NIOThread"},{"type":"text","text":"."}],"navigatorTitle":[{"kind":"identifier","text":"MultiThreadedEventLoopGroup"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/MultiThreadedEventLoopGroup"},"doc://co.pointfree.VaporRouting/s8SendableP":{"title":"Swift.Sendable","type":"unresolvable","identifier":"doc:\/\/co.pointfree.VaporRouting\/s8SendableP"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/NIOPreconcurrencySendable":{"title":"NIOPreconcurrencySendable","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"NIOPreconcurrencySendable"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/NIOPreconcurrencySendable","kind":"symbol","abstract":[],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"NIOPreconcurrencySendable"}],"url":"\/documentation\/niocore\/niopreconcurrencysendable","type":"topic"},"doc://co.pointfree.VaporRouting/documentation/NIOPosix/MultiThreadedEventLoopGroup/CustomStringConvertible-Implementations":{"kind":"article","url":"\/documentation\/nioposix\/multithreadedeventloopgroup\/customstringconvertible-implementations","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/MultiThreadedEventLoopGroup\/CustomStringConvertible-Implementations","type":"topic","role":"collectionGroup","abstract":[],"title":"CustomStringConvertible Implementations"},"doc://co.pointfree.VaporRouting/documentation/NIOPosix/MultiThreadedEventLoopGroup/withCurrentThreadAsEventLoop(_:)":{"abstract":[{"text":"Convert the calling thread into an ","type":"text"},{"code":"EventLoop","type":"codeVoice"},{"text":".","type":"text"}],"kind":"symbol","role":"symbol","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/MultiThreadedEventLoopGroup\/withCurrentThreadAsEventLoop(_:)","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"withCurrentThreadAsEventLoop","kind":"identifier"},{"text":"((","kind":"text"},{"kind":"typeIdentifier","text":"EventLoop","preciseIdentifier":"s:7NIOCore9EventLoopP"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":")"}],"url":"\/documentation\/nioposix\/multithreadedeventloopgroup\/withcurrentthreadaseventloop(_:)","title":"withCurrentThreadAsEventLoop(_:)"},"doc://co.pointfree.VaporRouting/documentation/NIOPosix/MultiThreadedEventLoopGroup/any()":{"role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"any"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore9EventLoopP","text":"EventLoop"}],"title":"any()","url":"\/documentation\/nioposix\/multithreadedeventloopgroup\/any()","kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/MultiThreadedEventLoopGroup\/any()","type":"topic","abstract":[{"text":"Returns the current ","type":"text"},{"code":"EventLoop","type":"codeVoice"},{"text":" if we are on an ","type":"text"},{"code":"EventLoop","type":"codeVoice"},{"text":" of this ","type":"text"},{"code":"MultiThreadedEventLoopGroup","type":"codeVoice"},{"text":" instance.","type":"text"}]},"doc://co.pointfree.VaporRouting/documentation/NIOPosix/MultiThreadedEventLoopGroup/init(numberOfThreads:)":{"role":"symbol","title":"init(numberOfThreads:)","fragments":[{"kind":"keyword","text":"convenience"},{"kind":"text","text":" "},{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"numberOfThreads"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":")"}],"abstract":[{"text":"Creates a ","type":"text"},{"type":"codeVoice","code":"MultiThreadedEventLoopGroup"},{"type":"text","text":" instance which uses "},{"type":"codeVoice","code":"numberOfThreads"},{"type":"text","text":"."}],"kind":"symbol","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/MultiThreadedEventLoopGroup\/init(numberOfThreads:)","url":"\/documentation\/nioposix\/multithreadedeventloopgroup\/init(numberofthreads:)"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoopGroup":{"type":"topic","kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"EventLoopGroup"}],"url":"\/documentation\/niocore\/eventloopgroup","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"EventLoopGroup"}],"title":"EventLoopGroup","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopGroup","abstract":[{"type":"text","text":"Provides an endless stream of "},{"type":"codeVoice","code":"EventLoop"},{"type":"text","text":"s to use."}]},"doc://co.pointfree.VaporRouting/documentation/NIOPosix/MultiThreadedEventLoopGroup/makeIterator()":{"role":"symbol","title":"makeIterator()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"makeIterator"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"EventLoopIterator","preciseIdentifier":"s:7NIOCore17EventLoopIteratorV"}],"abstract":[{"text":"Returns an ","type":"text"},{"type":"codeVoice","code":"EventLoopIterator"},{"type":"text","text":" over the "},{"type":"codeVoice","code":"EventLoop"},{"type":"text","text":"s in this "},{"type":"codeVoice","code":"MultiThreadedEventLoopGroup"},{"type":"text","text":"."}],"kind":"symbol","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/MultiThreadedEventLoopGroup\/makeIterator()","url":"\/documentation\/nioposix\/multithreadedeventloopgroup\/makeiterator()"}}}