{"abstract":[{"text":"Convert the calling thread into an ","type":"text"},{"code":"EventLoop","type":"codeVoice"},{"text":".","type":"text"}],"schemaVersion":{"major":0,"patch":0,"minor":3},"sections":[],"kind":"symbol","metadata":{"modules":[{"name":"NIOPosix"}],"title":"withCurrentThreadAsEventLoop(_:)","role":"symbol","symbolKind":"method","externalID":"s:8NIOPosix27MultiThreadedEventLoopGroupC019withCurrentThreadAsdE0yyy7NIOCore0dE0_pcFZ","roleHeading":"Type Method","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"withCurrentThreadAsEventLoop"},{"kind":"text","text":"(("},{"kind":"typeIdentifier","text":"EventLoop","preciseIdentifier":"s:7NIOCore9EventLoopP"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":")"}]},"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/MultiThreadedEventLoopGroup"]]},"variants":[{"paths":["\/documentation\/nioposix\/multithreadedeventloopgroup\/withcurrentthreadaseventloop(_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"withCurrentThreadAsEventLoop"},{"kind":"text","text":"("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"callback"},{"kind":"text","text":": "},{"kind":"keyword","text":"@escaping"},{"kind":"text","text":" ("},{"preciseIdentifier":"s:7NIOCore9EventLoopP","kind":"typeIdentifier","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoop","text":"EventLoop"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:s4Voida","kind":"typeIdentifier","text":"Void"},{"text":")","kind":"text"}],"platforms":["Linux"],"languages":["swift"]}]},{"kind":"parameters","parameters":[{"name":"callback","content":[{"inlineContent":[{"type":"text","text":"Called "},{"inlineContent":[{"type":"text","text":"on"}],"type":"emphasis"},{"type":"text","text":" the "},{"code":"EventLoop","type":"codeVoice"},{"type":"text","text":" that the calling thread was converted to, providing you the"},{"type":"text","text":" "},{"code":"EventLoop","type":"codeVoice"},{"type":"text","text":" reference. Just like usually on the "},{"code":"EventLoop","type":"codeVoice"},{"type":"text","text":", do not block in "},{"code":"callback","type":"codeVoice"},{"type":"text","text":"."}],"type":"paragraph"}]}]},{"content":[{"anchor":"discussion","level":2,"text":"Discussion","type":"heading"},{"inlineContent":[{"type":"text","text":"This function will not return until the "},{"type":"codeVoice","code":"EventLoop"},{"type":"text","text":" has stopped. You can initiate stopping the "},{"type":"codeVoice","code":"EventLoop"},{"type":"text","text":" by"},{"type":"text","text":" "},{"type":"text","text":"calling "},{"type":"codeVoice","code":"eventLoop.shutdownGracefully"},{"type":"text","text":" which will eventually make this function return."}],"type":"paragraph"}],"kind":"content"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/MultiThreadedEventLoopGroup\/withCurrentThreadAsEventLoop(_:)"},"references":{"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoop":{"kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"EventLoop","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoop","type":"topic","navigatorTitle":[{"text":"EventLoop","kind":"identifier"}],"title":"EventLoop","role":"symbol","url":"\/documentation\/niocore\/eventloop","abstract":[{"text":"An EventLoop processes IO \/ tasks in an endless loop for ","type":"text"},{"code":"Channel","type":"codeVoice"},{"type":"text","text":"s until itâ€™s closed."}]},"doc://co.pointfree.VaporRouting/documentation/NIOPosix":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix","type":"topic","abstract":[],"kind":"symbol","url":"\/documentation\/nioposix","role":"collection","title":"NIOPosix"},"doc://co.pointfree.VaporRouting/documentation/NIOPosix/MultiThreadedEventLoopGroup":{"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"MultiThreadedEventLoopGroup"}],"kind":"symbol","role":"symbol","type":"topic","title":"MultiThreadedEventLoopGroup","url":"\/documentation\/nioposix\/multithreadedeventloopgroup","abstract":[{"type":"text","text":"An "},{"type":"codeVoice","code":"EventLoopGroup"},{"type":"text","text":" which will create multiple "},{"type":"codeVoice","code":"EventLoop"},{"type":"text","text":"s, each tied to its own "},{"type":"codeVoice","code":"NIOThread"},{"type":"text","text":"."}],"navigatorTitle":[{"kind":"identifier","text":"MultiThreadedEventLoopGroup"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/MultiThreadedEventLoopGroup"},"doc://co.pointfree.VaporRouting/documentation/NIOPosix/MultiThreadedEventLoopGroup/withCurrentThreadAsEventLoop(_:)":{"abstract":[{"text":"Convert the calling thread into an ","type":"text"},{"code":"EventLoop","type":"codeVoice"},{"text":".","type":"text"}],"kind":"symbol","role":"symbol","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/MultiThreadedEventLoopGroup\/withCurrentThreadAsEventLoop(_:)","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"withCurrentThreadAsEventLoop","kind":"identifier"},{"text":"((","kind":"text"},{"kind":"typeIdentifier","text":"EventLoop","preciseIdentifier":"s:7NIOCore9EventLoopP"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":")"}],"url":"\/documentation\/nioposix\/multithreadedeventloopgroup\/withcurrentthreadaseventloop(_:)","title":"withCurrentThreadAsEventLoop(_:)"}}}