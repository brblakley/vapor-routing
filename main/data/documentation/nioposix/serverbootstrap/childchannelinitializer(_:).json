{"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"childChannelInitializer","kind":"identifier"},{"text":"(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"initializer","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"@escaping","kind":"keyword"},{"text":" (","kind":"text"},{"text":"Channel","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/Channel","preciseIdentifier":"s:7NIOCore7ChannelP","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"EventLoopFuture","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Void","preciseIdentifier":"s:s4Voida","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"platforms":["Linux"]}],"kind":"declarations"},{"parameters":[{"content":[{"inlineContent":[{"text":"A closure that initializes the provided ","type":"text"},{"code":"Channel","type":"codeVoice"},{"text":".","type":"text"}],"type":"paragraph"}],"name":"initializer"}],"kind":"parameters"},{"kind":"content","content":[{"text":"Discussion","type":"heading","level":2,"anchor":"discussion"},{"type":"aside","name":"Warning","content":[{"type":"paragraph","inlineContent":[{"text":"The ","type":"text"},{"type":"codeVoice","code":"initializer"},{"text":" will be invoked once for every accepted connection. Therefore itâ€™s usually the","type":"text"},{"text":" ","type":"text"},{"text":"right choice to instantiate stateful ","type":"text"},{"type":"codeVoice","code":"ChannelHandler"},{"text":"s within the closure to make sure they are not","type":"text"},{"text":" ","type":"text"},{"text":"accidentally shared across ","type":"text"},{"type":"codeVoice","code":"Channel"},{"text":"s. There are expert use-cases where stateful handler need to be","type":"text"},{"text":" ","type":"text"},{"text":"shared across ","type":"text"},{"type":"codeVoice","code":"Channel"},{"text":"s in which case the user is responsible to synchronise the state access","type":"text"},{"text":" ","type":"text"},{"text":"appropriately.","type":"text"}]}],"style":"warning"},{"type":"paragraph","inlineContent":[{"text":"The accepted ","type":"text"},{"code":"Channel","type":"codeVoice"},{"text":" will operate on ","type":"text"},{"code":"ByteBuffer","type":"codeVoice"},{"text":" as inbound and ","type":"text"},{"code":"IOData","type":"codeVoice"},{"text":" as outbound messages.","type":"text"}]}]}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/ServerBootstrap"]]},"sections":[],"kind":"symbol","abstract":[{"type":"text","text":"Initialize the accepted "},{"type":"codeVoice","code":"SocketChannel"},{"type":"text","text":"s with "},{"type":"codeVoice","code":"initializer"},{"type":"text","text":". The most common task in initializer is to add"},{"type":"text","text":" "},{"type":"codeVoice","code":"ChannelHandler"},{"type":"text","text":"s to the "},{"type":"codeVoice","code":"ChannelPipeline"},{"type":"text","text":". Note that if the "},{"type":"codeVoice","code":"initializer"},{"type":"text","text":" fails then the error will be"},{"type":"text","text":" "},{"text":"fired in the ","type":"text"},{"inlineContent":[{"text":"parent","type":"text"}],"type":"emphasis"},{"text":" channel.","type":"text"}],"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/ServerBootstrap\/childChannelInitializer(_:)","interfaceLanguage":"swift"},"variants":[{"paths":["\/documentation\/nioposix\/serverbootstrap\/childchannelinitializer(_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"minor":3,"major":0,"patch":0},"metadata":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"childChannelInitializer","kind":"identifier"},{"text":"((","kind":"text"},{"preciseIdentifier":"s:7NIOCore7ChannelP","text":"Channel","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"title":"childChannelInitializer(_:)","modules":[{"name":"NIOPosix"}],"externalID":"s:8NIOPosix15ServerBootstrapC23childChannelInitializeryACXD7NIOCore15EventLoopFutureCyytGAE0E0_pcF","role":"symbol","symbolKind":"method","roleHeading":"Instance Method"},"references":{"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoopFuture":{"navigatorTitle":[{"kind":"identifier","text":"EventLoopFuture"}],"abstract":[{"text":"Holder for a result that will be provided later.","type":"text"}],"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"EventLoopFuture"}],"kind":"symbol","url":"\/documentation\/niocore\/eventloopfuture","role":"symbol","title":"EventLoopFuture","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture","type":"topic"},"doc://co.pointfree.VaporRouting/documentation/NIOPosix/ServerBootstrap/childChannelInitializer(_:)":{"url":"\/documentation\/nioposix\/serverbootstrap\/childchannelinitializer(_:)","role":"symbol","title":"childChannelInitializer(_:)","kind":"symbol","abstract":[{"text":"Initialize the accepted ","type":"text"},{"code":"SocketChannel","type":"codeVoice"},{"text":"s with ","type":"text"},{"code":"initializer","type":"codeVoice"},{"text":". The most common task in initializer is to add","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"ChannelHandler"},{"type":"text","text":"s to the "},{"type":"codeVoice","code":"ChannelPipeline"},{"type":"text","text":". Note that if the "},{"type":"codeVoice","code":"initializer"},{"type":"text","text":" fails then the error will be"},{"type":"text","text":" "},{"type":"text","text":"fired in the "},{"type":"emphasis","inlineContent":[{"type":"text","text":"parent"}]},{"type":"text","text":" channel."}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/ServerBootstrap\/childChannelInitializer(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"childChannelInitializer","kind":"identifier"},{"text":"((","kind":"text"},{"preciseIdentifier":"s:7NIOCore7ChannelP","text":"Channel","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"type":"topic"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/Channel":{"url":"\/documentation\/niocore\/channel","navigatorTitle":[{"kind":"identifier","text":"Channel"}],"title":"Channel","role":"symbol","abstract":[{"type":"text","text":"A "},{"code":"Channel","type":"codeVoice"},{"type":"text","text":" is easiest thought of as a network socket. But it can be anything that is capable of I\/O operations such"},{"type":"text","text":" "},{"type":"text","text":"as read, write, connect, and bind."}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/Channel","kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Channel"}],"type":"topic"},"doc://co.pointfree.VaporRouting/documentation/NIOPosix/ServerBootstrap":{"title":"ServerBootstrap","abstract":[{"type":"text","text":"A "},{"code":"ServerBootstrap","type":"codeVoice"},{"type":"text","text":" is an easy way to bootstrap a "},{"code":"ServerSocketChannel","type":"codeVoice"},{"type":"text","text":" when creating network servers."}],"kind":"symbol","role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/ServerBootstrap","url":"\/documentation\/nioposix\/serverbootstrap","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"ServerBootstrap"}],"navigatorTitle":[{"text":"ServerBootstrap","kind":"identifier"}],"type":"topic"},"doc://co.pointfree.VaporRouting/documentation/NIOPosix":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix","type":"topic","abstract":[],"kind":"symbol","url":"\/documentation\/nioposix","role":"collection","title":"NIOPosix"}}}