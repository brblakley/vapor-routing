{"sections":[],"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOTLS"]]},"metadata":{"roleHeading":"Class","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"ApplicationProtocolNegotiationHandler"}],"modules":[{"name":"NIOTLS"}],"symbolKind":"class","navigatorTitle":[{"kind":"identifier","text":"ApplicationProtocolNegotiationHandler"}],"externalID":"s:6NIOTLS37ApplicationProtocolNegotiationHandlerC","title":"ApplicationProtocolNegotiationHandler","role":"symbol"},"relationshipsSections":[{"title":"Conforms To","kind":"relationships","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelHandler","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelInboundHandler","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/RemovableChannelHandler"],"type":"conformsTo"}],"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOTLS\/ApplicationProtocolNegotiationHandler\/init(alpnCompleteHandler:)-1b0z6","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOTLS\/ApplicationProtocolNegotiationHandler\/init(alpnCompleteHandler:)-8h9zw"]},{"title":"Instance Methods","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOTLS\/ApplicationProtocolNegotiationHandler\/channelRead(context:data:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOTLS\/ApplicationProtocolNegotiationHandler\/userInboundEventTriggered(context:event:)"]},{"title":"Type Aliases","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOTLS\/ApplicationProtocolNegotiationHandler\/InboundIn","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOTLS\/ApplicationProtocolNegotiationHandler\/InboundOut"]},{"title":"Default Implementations","generated":true,"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOTLS\/ApplicationProtocolNegotiationHandler\/ChannelHandler-Implementations","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOTLS\/ApplicationProtocolNegotiationHandler\/ChannelInboundHandler-Implementations","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOTLS\/ApplicationProtocolNegotiationHandler\/RemovableChannelHandler-Implementations"]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["Linux"],"tokens":[{"text":"final","kind":"keyword"},{"text":" ","kind":"text"},{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ApplicationProtocolNegotiationHandler","kind":"identifier"}]}]},{"kind":"content","content":[{"text":"Overview","type":"heading","level":2,"anchor":"overview"},{"inlineContent":[{"text":"The standard pattern used by applications that want to use ALPN is to select","type":"text"},{"text":" ","type":"text"},{"text":"an application protocol based on the result, optionally falling back to some","type":"text"},{"text":" ","type":"text"},{"text":"default protocol. To do this in SwiftNIO requires that the channel pipeline be","type":"text"},{"text":" ","type":"text"},{"text":"reconfigured based on the result of the ALPN negotiation. This channel handler","type":"text"},{"text":" ","type":"text"},{"text":"encapsulates that logic in a generic form that doesnâ€™t depend on the specific","type":"text"},{"text":" ","type":"text"},{"text":"TLS implementation in use by using ","type":"text"},{"type":"codeVoice","code":"TLSUserEvent"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"The user of this channel handler provides a single closure that is called with"},{"type":"text","text":" "},{"type":"text","text":"an "},{"type":"codeVoice","code":"ALPNResult"},{"type":"text","text":" when the ALPN negotiation is complete. Based on that result"},{"type":"text","text":" "},{"type":"text","text":"the user is free to reconfigure the "},{"type":"codeVoice","code":"ChannelPipeline"},{"type":"text","text":" as required, and should"},{"type":"text","text":" "},{"type":"text","text":"return an "},{"type":"codeVoice","code":"EventLoopFuture"},{"type":"text","text":" that will complete when the pipeline is reconfigured."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"Until the "},{"code":"EventLoopFuture","type":"codeVoice"},{"text":" completes, this channel handler will buffer inbound","type":"text"},{"text":" ","type":"text"},{"text":"data. When the ","type":"text"},{"code":"EventLoopFuture","type":"codeVoice"},{"text":" completes, the buffered data will be replayed","type":"text"},{"text":" ","type":"text"},{"text":"down the channel. Then, finally, this channel handler will automatically remove","type":"text"},{"text":" ","type":"text"},{"text":"itself from the channel pipeline, leaving the pipeline in its final","type":"text"},{"text":" ","type":"text"},{"text":"configuration.","type":"text"}],"type":"paragraph"}]}],"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOTLS\/ApplicationProtocolNegotiationHandler","interfaceLanguage":"swift"},"variants":[{"paths":["\/documentation\/niotls\/applicationprotocolnegotiationhandler"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","schemaVersion":{"major":0,"minor":3,"patch":0},"abstract":[{"text":"A helper ","type":"text"},{"code":"ChannelInboundHandler","type":"codeVoice"},{"text":" that makes it easy to swap channel pipelines","type":"text"},{"text":" ","type":"text"},{"text":"based on the result of an ALPN negotiation.","type":"text"}],"references":{"doc://co.pointfree.VaporRouting/documentation/NIOTLS/ApplicationProtocolNegotiationHandler/RemovableChannelHandler-Implementations":{"title":"RemovableChannelHandler Implementations","kind":"article","url":"\/documentation\/niotls\/applicationprotocolnegotiationhandler\/removablechannelhandler-implementations","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOTLS\/ApplicationProtocolNegotiationHandler\/RemovableChannelHandler-Implementations","abstract":[],"role":"collectionGroup"},"doc://co.pointfree.VaporRouting/documentation/NIOTLS/ApplicationProtocolNegotiationHandler/init(alpnCompleteHandler:)-1b0z6":{"title":"init(alpnCompleteHandler:)","fragments":[{"kind":"keyword","text":"convenience"},{"kind":"text","text":" "},{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"alpnCompleteHandler"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"ALPNResult","preciseIdentifier":"s:6NIOTLS10ALPNResultO"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"EventLoopFuture","preciseIdentifier":"s:7NIOCore15EventLoopFutureC"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"},{"text":">)","kind":"text"}],"url":"\/documentation\/niotls\/applicationprotocolnegotiationhandler\/init(alpncompletehandler:)-1b0z6","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOTLS\/ApplicationProtocolNegotiationHandler\/init(alpnCompleteHandler:)-1b0z6","kind":"symbol","abstract":[{"type":"text","text":"Create an "},{"type":"codeVoice","code":"ApplicationProtocolNegotiationHandler"},{"type":"text","text":" with the given completion"},{"type":"text","text":" "},{"type":"text","text":"callback."}],"role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOTLS/ApplicationProtocolNegotiationHandler/InboundOut":{"abstract":[{"text":"The type of the inbound data which will be forwarded to the next ","type":"text"},{"type":"codeVoice","code":"ChannelInboundHandler"},{"text":" in the ","type":"text"},{"type":"codeVoice","code":"ChannelPipeline"},{"text":".","type":"text"}],"fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"InboundOut","kind":"identifier"}],"navigatorTitle":[{"text":"InboundOut","kind":"identifier"}],"type":"topic","role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOTLS\/ApplicationProtocolNegotiationHandler\/InboundOut","url":"\/documentation\/niotls\/applicationprotocolnegotiationhandler\/inboundout","title":"ApplicationProtocolNegotiationHandler.InboundOut","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelHandler":{"title":"ChannelHandler","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ChannelHandler"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelHandler","kind":"symbol","abstract":[{"type":"text","text":"You should "},{"inlineContent":[{"text":"never","type":"text"}],"type":"emphasis"},{"type":"text","text":" implement this protocol directly. Please implement one of its sub-protocols."}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"ChannelHandler"}],"url":"\/documentation\/niocore\/channelhandler","type":"topic"},"doc://co.pointfree.VaporRouting/documentation/NIOTLS":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOTLS","abstract":[],"type":"topic","url":"\/documentation\/niotls","kind":"symbol","title":"NIOTLS","role":"collection"},"doc://co.pointfree.VaporRouting/documentation/NIOTLS/ApplicationProtocolNegotiationHandler/ChannelInboundHandler-Implementations":{"url":"\/documentation\/niotls\/applicationprotocolnegotiationhandler\/channelinboundhandler-implementations","title":"ChannelInboundHandler Implementations","kind":"article","abstract":[],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOTLS\/ApplicationProtocolNegotiationHandler\/ChannelInboundHandler-Implementations","role":"collectionGroup","type":"topic"},"doc://co.pointfree.VaporRouting/documentation/NIOTLS/ApplicationProtocolNegotiationHandler/ChannelHandler-Implementations":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOTLS\/ApplicationProtocolNegotiationHandler\/ChannelHandler-Implementations","role":"collectionGroup","abstract":[],"type":"topic","url":"\/documentation\/niotls\/applicationprotocolnegotiationhandler\/channelhandler-implementations","kind":"article","title":"ChannelHandler Implementations"},"doc://co.pointfree.VaporRouting/documentation/NIOTLS/ApplicationProtocolNegotiationHandler/init(alpnCompleteHandler:)-8h9zw":{"title":"init(alpnCompleteHandler:)","url":"\/documentation\/niotls\/applicationprotocolnegotiationhandler\/init(alpncompletehandler:)-8h9zw","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOTLS\/ApplicationProtocolNegotiationHandler\/init(alpnCompleteHandler:)-8h9zw","abstract":[{"type":"text","text":"Create an "},{"type":"codeVoice","code":"ApplicationProtocolNegotiationHandler"},{"type":"text","text":" with the given completion"},{"type":"text","text":" "},{"type":"text","text":"callback."}],"type":"topic","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"text":"alpnCompleteHandler","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"ALPNResult","preciseIdentifier":"s:6NIOTLS10ALPNResultO","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Channel","preciseIdentifier":"s:7NIOCore7ChannelP","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"EventLoopFuture","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Void","preciseIdentifier":"s:s4Voida","kind":"typeIdentifier"},{"text":">)","kind":"text"}],"role":"symbol","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOTLS/ApplicationProtocolNegotiationHandler":{"abstract":[{"text":"A helper ","type":"text"},{"code":"ChannelInboundHandler","type":"codeVoice"},{"text":" that makes it easy to swap channel pipelines","type":"text"},{"text":" ","type":"text"},{"text":"based on the result of an ALPN negotiation.","type":"text"}],"url":"\/documentation\/niotls\/applicationprotocolnegotiationhandler","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOTLS\/ApplicationProtocolNegotiationHandler","title":"ApplicationProtocolNegotiationHandler","type":"topic","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"ApplicationProtocolNegotiationHandler"}],"fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"ApplicationProtocolNegotiationHandler"}],"role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOTLS/ApplicationProtocolNegotiationHandler/channelRead(context:data:)":{"title":"channelRead(context:data:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOTLS\/ApplicationProtocolNegotiationHandler\/channelRead(context:data:)","type":"topic","kind":"symbol","abstract":[{"text":"Called when some data has been read from the remote peer.","type":"text"}],"url":"\/documentation\/niotls\/applicationprotocolnegotiationhandler\/channelread(context:data:)","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"channelRead","kind":"identifier"},{"text":"(","kind":"text"},{"text":"context","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"ChannelHandlerContext","preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"data","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7NIOCore6NIOAnyV","text":"NIOAny","kind":"typeIdentifier"},{"text":")","kind":"text"}]},"doc://co.pointfree.VaporRouting/documentation/NIOTLS/ApplicationProtocolNegotiationHandler/InboundIn":{"abstract":[{"type":"text","text":"The type of the inbound data which is wrapped in "},{"code":"NIOAny","type":"codeVoice"},{"type":"text","text":"."}],"navigatorTitle":[{"kind":"identifier","text":"InboundIn"}],"title":"ApplicationProtocolNegotiationHandler.InboundIn","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOTLS\/ApplicationProtocolNegotiationHandler\/InboundIn","kind":"symbol","url":"\/documentation\/niotls\/applicationprotocolnegotiationhandler\/inboundin","role":"symbol","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"InboundIn"}],"type":"topic"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelInboundHandler":{"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ChannelInboundHandler"}],"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelInboundHandler","title":"ChannelInboundHandler","url":"\/documentation\/niocore\/channelinboundhandler","role":"symbol","kind":"symbol","abstract":[{"code":"ChannelHandler","type":"codeVoice"},{"type":"text","text":" which handles inbound I\/O events for a "},{"code":"Channel","type":"codeVoice"},{"type":"text","text":"."}],"navigatorTitle":[{"kind":"identifier","text":"ChannelInboundHandler"}]},"doc://co.pointfree.VaporRouting/documentation/NIOTLS/ApplicationProtocolNegotiationHandler/userInboundEventTriggered(context:event:)":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"userInboundEventTriggered","kind":"identifier"},{"text":"(","kind":"text"},{"text":"context","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"ChannelHandlerContext","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC"},{"text":", ","kind":"text"},{"text":"event","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Any","kind":"keyword"},{"text":")","kind":"text"}],"url":"\/documentation\/niotls\/applicationprotocolnegotiationhandler\/userinboundeventtriggered(context:event:)","abstract":[{"type":"text","text":"Called when a user inbound event has been triggered."}],"role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOTLS\/ApplicationProtocolNegotiationHandler\/userInboundEventTriggered(context:event:)","type":"topic","kind":"symbol","title":"userInboundEventTriggered(context:event:)"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/RemovableChannelHandler":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/RemovableChannelHandler","title":"RemovableChannelHandler","kind":"symbol","type":"topic","url":"\/documentation\/niocore\/removablechannelhandler","role":"symbol","abstract":[{"type":"text","text":"A "},{"code":"RemovableChannelHandler","type":"codeVoice"},{"text":" is a ","type":"text"},{"code":"ChannelHandler","type":"codeVoice"},{"text":" that can be dynamically removed from a ","type":"text"},{"code":"ChannelPipeline","type":"codeVoice"},{"text":" whilst","type":"text"},{"text":" ","type":"text"},{"text":"the ","type":"text"},{"code":"Channel","type":"codeVoice"},{"text":" is operating normally.","type":"text"},{"text":" ","type":"text"},{"text":"A ","type":"text"},{"code":"RemovableChannelHandler","type":"codeVoice"},{"text":" is required to remove itself from the ","type":"text"},{"code":"ChannelPipeline","type":"codeVoice"},{"text":" (using","type":"text"},{"text":" ","type":"text"},{"code":"ChannelHandlerContext.removeHandler","type":"codeVoice"},{"text":") as soon as possible.","type":"text"}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"RemovableChannelHandler"}],"navigatorTitle":[{"kind":"identifier","text":"RemovableChannelHandler"}]}}}