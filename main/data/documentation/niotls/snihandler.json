{"kind":"symbol","identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOTLS\/SNIHandler"},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"text":"final","kind":"keyword"},{"text":" ","kind":"text"},{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SNIHandler","kind":"identifier"}],"platforms":["Linux"]}]},{"kind":"content","content":[{"anchor":"overview","type":"heading","text":"Overview","level":2},{"inlineContent":[{"type":"text","text":"This handler is most commonly used when configuring TLS, to control"},{"type":"text","text":" "},{"type":"text","text":"which certificates are going to be shown to the client. It can also be used"},{"type":"text","text":" "},{"type":"text","text":"to ensure that only the resources required to serve a given virtual host are"},{"type":"text","text":" "},{"type":"text","text":"actually present in the channel pipeline."}],"type":"paragraph"},{"inlineContent":[{"text":"This handler does not depend on any specific TLS implementation. Instead, it parses","type":"text"},{"text":" ","type":"text"},{"text":"the Client Hello itself, directly. This allows it to be generic across all possible","type":"text"},{"text":" ","type":"text"},{"text":"TLS backends that can be used with NIO. It also allows for the pipeline change to","type":"text"},{"text":" ","type":"text"},{"text":"be done asynchronously, providing more flexibility about how the user configures the","type":"text"},{"text":" ","type":"text"},{"text":"pipeline.","type":"text"}],"type":"paragraph"}]}],"schemaVersion":{"patch":0,"major":0,"minor":3},"metadata":{"navigatorTitle":[{"kind":"identifier","text":"SNIHandler"}],"title":"SNIHandler","modules":[{"name":"NIOTLS"}],"roleHeading":"Class","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SNIHandler","kind":"identifier"}],"externalID":"s:6NIOTLS10SNIHandlerC","symbolKind":"class","role":"symbol"},"abstract":[{"type":"text","text":"A channel handler that can be used to arbitrarily edit a channel"},{"type":"text","text":" "},{"type":"text","text":"pipeline based on the hostname requested in the Server Name Indication"},{"type":"text","text":" "},{"type":"text","text":"portion of the TLS Client Hello."}],"relationshipsSections":[{"kind":"relationships","title":"Conforms To","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ByteToMessageDecoder"],"type":"conformsTo"}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOTLS"]]},"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOTLS\/SNIHandler\/init(sniCompleteHandler:)"]},{"title":"Instance Properties","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOTLS\/SNIHandler\/cumulationBuffer"]},{"title":"Instance Methods","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOTLS\/SNIHandler\/decode(context:buffer:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOTLS\/SNIHandler\/decodeLast(context:buffer:seenEOF:)"]},{"title":"Type Aliases","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOTLS\/SNIHandler\/InboundIn","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOTLS\/SNIHandler\/InboundOut"]},{"title":"Default Implementations","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOTLS\/SNIHandler\/ByteToMessageDecoder-Implementations"],"generated":true}],"sections":[],"variants":[{"paths":["\/documentation\/niotls\/snihandler"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://co.pointfree.VaporRouting/documentation/NIOTLS":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOTLS","abstract":[],"type":"topic","url":"\/documentation\/niotls","kind":"symbol","title":"NIOTLS","role":"collection"},"doc://co.pointfree.VaporRouting/documentation/NIOTLS/SNIHandler/cumulationBuffer":{"role":"symbol","kind":"symbol","title":"cumulationBuffer","abstract":[],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOTLS\/SNIHandler\/cumulationBuffer","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"cumulationBuffer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Optional","preciseIdentifier":"s:Sq"},{"kind":"text","text":"<"},{"text":"ByteBuffer","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore10ByteBufferV"},{"text":">","kind":"text"}],"type":"topic","url":"\/documentation\/niotls\/snihandler\/cumulationbuffer"},"doc://co.pointfree.VaporRouting/documentation/NIOTLS/SNIHandler":{"navigatorTitle":[{"text":"SNIHandler","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOTLS\/SNIHandler","abstract":[{"text":"A channel handler that can be used to arbitrarily edit a channel","type":"text"},{"text":" ","type":"text"},{"text":"pipeline based on the hostname requested in the Server Name Indication","type":"text"},{"text":" ","type":"text"},{"text":"portion of the TLS Client Hello.","type":"text"}],"type":"topic","url":"\/documentation\/niotls\/snihandler","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SNIHandler","kind":"identifier"}],"kind":"symbol","title":"SNIHandler","role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOTLS/SNIHandler/init(sniCompleteHandler:)":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOTLS\/SNIHandler\/init(sniCompleteHandler:)","type":"topic","url":"\/documentation\/niotls\/snihandler\/init(snicompletehandler:)","abstract":[],"kind":"symbol","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"sniCompleteHandler"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","preciseIdentifier":"s:6NIOTLS9SNIResultO","text":"SNIResult"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"kind":"text","text":">)"}],"title":"init(sniCompleteHandler:)","role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOTLS/SNIHandler/InboundIn":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOTLS\/SNIHandler\/InboundIn","type":"topic","url":"\/documentation\/niotls\/snihandler\/inboundin","abstract":[],"title":"SNIHandler.InboundIn","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"InboundIn","kind":"identifier"}],"role":"symbol","navigatorTitle":[{"text":"InboundIn","kind":"identifier"}],"kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOTLS/SNIHandler/ByteToMessageDecoder-Implementations":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOTLS\/SNIHandler\/ByteToMessageDecoder-Implementations","role":"collectionGroup","abstract":[],"type":"topic","title":"ByteToMessageDecoder Implementations","url":"\/documentation\/niotls\/snihandler\/bytetomessagedecoder-implementations","kind":"article"},"doc://co.pointfree.VaporRouting/documentation/NIOTLS/SNIHandler/decode(context:buffer:)":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"decode","kind":"identifier"},{"text":"(","kind":"text"},{"text":"context","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"ChannelHandlerContext","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC"},{"text":", ","kind":"text"},{"text":"buffer","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ByteBuffer","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore10ByteBufferV"},{"text":") -> ","kind":"text"},{"text":"DecodingState","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore13DecodingStateO"}],"role":"symbol","url":"\/documentation\/niotls\/snihandler\/decode(context:buffer:)","kind":"symbol","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOTLS\/SNIHandler\/decode(context:buffer:)","abstract":[{"text":"Decode from a ","type":"text"},{"code":"ByteBuffer","type":"codeVoice"},{"text":".","type":"text"}],"title":"decode(context:buffer:)"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ByteToMessageDecoder":{"url":"\/documentation\/niocore\/bytetomessagedecoder","role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"ByteToMessageDecoder","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ByteToMessageDecoder","navigatorTitle":[{"text":"ByteToMessageDecoder","kind":"identifier"}],"abstract":[{"code":"ByteToMessageDecoder","type":"codeVoice"},{"type":"text","text":"s decode bytes in a stream-like fashion from "},{"code":"ByteBuffer","type":"codeVoice"},{"type":"text","text":" to another message type."}],"type":"topic","title":"ByteToMessageDecoder","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOTLS/SNIHandler/InboundOut":{"role":"symbol","type":"topic","url":"\/documentation\/niotls\/snihandler\/inboundout","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"InboundOut"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOTLS\/SNIHandler\/InboundOut","abstract":[{"type":"text","text":"The type of the messages this "},{"type":"codeVoice","code":"ByteToMessageDecoder"},{"type":"text","text":" decodes to."}],"navigatorTitle":[{"kind":"identifier","text":"InboundOut"}],"kind":"symbol","title":"SNIHandler.InboundOut"},"doc://co.pointfree.VaporRouting/documentation/NIOTLS/SNIHandler/decodeLast(context:buffer:seenEOF:)":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"decodeLast","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"context"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC","kind":"typeIdentifier","text":"ChannelHandlerContext"},{"kind":"text","text":", "},{"kind":"externalParam","text":"buffer"},{"kind":"text","text":": "},{"kind":"keyword","text":"inout"},{"text":" ","kind":"text"},{"text":"ByteBuffer","preciseIdentifier":"s:7NIOCore10ByteBufferV","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"seenEOF","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"DecodingState","preciseIdentifier":"s:7NIOCore13DecodingStateO","kind":"typeIdentifier"}],"kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOTLS\/SNIHandler\/decodeLast(context:buffer:seenEOF:)","abstract":[{"type":"text","text":"Decode from a "},{"code":"ByteBuffer","type":"codeVoice"},{"type":"text","text":" when no more data is incoming and the "},{"code":"ByteToMessageDecoder","type":"codeVoice"},{"type":"text","text":" is about to leave"},{"type":"text","text":" "},{"type":"text","text":"the pipeline."}],"url":"\/documentation\/niotls\/snihandler\/decodelast(context:buffer:seeneof:)","type":"topic","title":"decodeLast(context:buffer:seenEOF:)","role":"symbol"}}}