{"abstract":[{"text":"An object that implements ","type":"text"},{"code":"HTTPServerProtocolUpgrader","type":"codeVoice"},{"text":" knows how to handle HTTP upgrade to","type":"text"},{"text":" ","type":"text"},{"text":"a protocol on a server-side channel.","type":"text"}],"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["Linux"],"tokens":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HTTPServerProtocolUpgrader"}]}],"kind":"declarations"}],"sections":[],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/HTTPServerProtocolUpgrader"},"metadata":{"externalID":"s:8NIOHTTP126HTTPServerProtocolUpgraderP","title":"HTTPServerProtocolUpgrader","role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HTTPServerProtocolUpgrader"}],"roleHeading":"Protocol","modules":[{"name":"NIOHTTP1"}],"symbolKind":"protocol","navigatorTitle":[{"kind":"identifier","text":"HTTPServerProtocolUpgrader"}]},"schemaVersion":{"major":0,"patch":0,"minor":3},"kind":"symbol","relationshipsSections":[{"title":"Conforming Types","kind":"relationships","type":"conformingTypes","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/NIOWebSocketServerUpgrader"]}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1"]]},"topicSections":[{"title":"Instance Properties","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/HTTPServerProtocolUpgrader\/requiredUpgradeHeaders","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/HTTPServerProtocolUpgrader\/supportedProtocol"]},{"title":"Instance Methods","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/HTTPServerProtocolUpgrader\/buildUpgradeResponse(channel:upgradeRequest:initialResponseHeaders:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/HTTPServerProtocolUpgrader\/upgrade(context:upgradeRequest:)"]}],"variants":[{"paths":["\/documentation\/niohttp1\/httpserverprotocolupgrader"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://co.pointfree.VaporRouting/documentation/NIOHTTP1/HTTPServerProtocolUpgrader":{"navigatorTitle":[{"text":"HTTPServerProtocolUpgrader","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/HTTPServerProtocolUpgrader","title":"HTTPServerProtocolUpgrader","kind":"symbol","abstract":[{"text":"An object that implements ","type":"text"},{"code":"HTTPServerProtocolUpgrader","type":"codeVoice"},{"text":" knows how to handle HTTP upgrade to","type":"text"},{"text":" ","type":"text"},{"text":"a protocol on a server-side channel.","type":"text"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HTTPServerProtocolUpgrader","kind":"identifier"}],"role":"symbol","url":"\/documentation\/niohttp1\/httpserverprotocolupgrader","type":"topic"},"doc://co.pointfree.VaporRouting/documentation/NIOWebSocket/NIOWebSocketServerUpgrader":{"abstract":[{"text":"A ","type":"text"},{"type":"codeVoice","code":"HTTPServerProtocolUpgrader"},{"text":" that knows how to do the WebSocket upgrade dance.","type":"text"}],"kind":"symbol","url":"\/documentation\/niowebsocket\/niowebsocketserverupgrader","navigatorTitle":[{"text":"NIOWebSocketServerUpgrader","kind":"identifier"}],"title":"NIOWebSocketServerUpgrader","role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"NIOWebSocketServerUpgrader","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/NIOWebSocketServerUpgrader"},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP1/HTTPServerProtocolUpgrader/supportedProtocol":{"abstract":[{"text":"The protocol this upgrader knows how to support.","type":"text"}],"required":true,"role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"supportedProtocol"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/HTTPServerProtocolUpgrader\/supportedProtocol","kind":"symbol","title":"supportedProtocol","url":"\/documentation\/niohttp1\/httpserverprotocolupgrader\/supportedprotocol"},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP1/HTTPServerProtocolUpgrader/buildUpgradeResponse(channel:upgradeRequest:initialResponseHeaders:)":{"abstract":[{"text":"Builds the upgrade response headers. Should return any headers that need to be supplied to the client","type":"text"},{"text":" ","type":"text"},{"text":"in the 101 Switching Protocols response. If upgrade cannot proceed for any reason, this function should","type":"text"},{"text":" ","type":"text"},{"text":"fail the future.","type":"text"}],"required":true,"role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"buildUpgradeResponse"},{"kind":"text","text":"("},{"kind":"externalParam","text":"channel"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Channel","preciseIdentifier":"s:7NIOCore7ChannelP"},{"kind":"text","text":", "},{"kind":"externalParam","text":"upgradeRequest"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"HTTPRequestHead","preciseIdentifier":"s:8NIOHTTP115HTTPRequestHeadV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"initialResponseHeaders"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"HTTPHeaders","preciseIdentifier":"s:8NIOHTTP111HTTPHeadersV"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"EventLoopFuture","preciseIdentifier":"s:7NIOCore15EventLoopFutureC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"HTTPHeaders","preciseIdentifier":"s:8NIOHTTP111HTTPHeadersV"},{"kind":"text","text":">"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/HTTPServerProtocolUpgrader\/buildUpgradeResponse(channel:upgradeRequest:initialResponseHeaders:)","kind":"symbol","title":"buildUpgradeResponse(channel:upgradeRequest:initialResponseHeaders:)","url":"\/documentation\/niohttp1\/httpserverprotocolupgrader\/buildupgraderesponse(channel:upgraderequest:initialresponseheaders:)"},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP1/HTTPServerProtocolUpgrader/upgrade(context:upgradeRequest:)":{"title":"upgrade(context:upgradeRequest:)","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"upgrade"},{"kind":"text","text":"("},{"kind":"externalParam","text":"context"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ChannelHandlerContext","preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC"},{"kind":"text","text":", "},{"kind":"externalParam","text":"upgradeRequest"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"HTTPRequestHead","preciseIdentifier":"s:8NIOHTTP115HTTPRequestHeadV"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"EventLoopFuture","preciseIdentifier":"s:7NIOCore15EventLoopFutureC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":">"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/HTTPServerProtocolUpgrader\/upgrade(context:upgradeRequest:)","kind":"symbol","abstract":[{"text":"Called when the upgrade response has been flushed. At this time it is safe to mutate the channel pipeline","type":"text"},{"text":" ","type":"text"},{"text":"to add whatever channel handlers are required. Until the returned ","type":"text"},{"code":"EventLoopFuture","type":"codeVoice"},{"text":" succeeds, all received","type":"text"},{"text":" ","type":"text"},{"text":"data will be buffered.","type":"text"}],"url":"\/documentation\/niohttp1\/httpserverprotocolupgrader\/upgrade(context:upgraderequest:)","type":"topic","required":true},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP1":{"role":"collection","url":"\/documentation\/niohttp1","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1","type":"topic","abstract":[],"title":"NIOHTTP1","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP1/HTTPServerProtocolUpgrader/requiredUpgradeHeaders":{"title":"requiredUpgradeHeaders","role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"requiredUpgradeHeaders"},{"kind":"text","text":": ["},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":"]"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/HTTPServerProtocolUpgrader\/requiredUpgradeHeaders","kind":"symbol","abstract":[{"text":"All the header fields the protocol needs in the request to successfully upgrade. These header fields","type":"text"},{"text":" ","type":"text"},{"text":"will be provided to the handler when it is asked to handle the upgrade. They will also be validated","type":"text"},{"text":" ","type":"text"},{"text":"against the inbound requestâ€™s Connection header field.","type":"text"}],"url":"\/documentation\/niohttp1\/httpserverprotocolupgrader\/requiredupgradeheaders","type":"topic","required":true}}}