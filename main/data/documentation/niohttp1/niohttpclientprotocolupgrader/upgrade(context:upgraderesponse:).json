{"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/NIOHTTPClientProtocolUpgrader"]]},"sections":[],"metadata":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"upgrade"},{"kind":"text","text":"("},{"kind":"externalParam","text":"context"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC","kind":"typeIdentifier","text":"ChannelHandlerContext"},{"kind":"text","text":", "},{"kind":"externalParam","text":"upgradeResponse"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:8NIOHTTP116HTTPResponseHeadV","text":"HTTPResponseHead"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"kind":"text","text":">"}],"role":"symbol","roleHeading":"Instance Method","externalID":"s:8NIOHTTP129NIOHTTPClientProtocolUpgraderP7upgrade7context0E8Response7NIOCore15EventLoopFutureCyytGAG21ChannelHandlerContextC_AA16HTTPResponseHeadVtF","symbolKind":"method","modules":[{"name":"NIOHTTP1"}],"title":"upgrade(context:upgradeResponse:)","required":true},"kind":"symbol","identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/NIOHTTPClientProtocolUpgrader\/upgrade(context:upgradeResponse:)","interfaceLanguage":"swift"},"schemaVersion":{"minor":3,"major":0,"patch":0},"primaryContentSections":[{"declarations":[{"platforms":["Linux"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"upgrade"},{"kind":"text","text":"("},{"kind":"externalParam","text":"context"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelHandlerContext","kind":"typeIdentifier","text":"ChannelHandlerContext"},{"kind":"text","text":", "},{"kind":"externalParam","text":"upgradeResponse"},{"kind":"text","text":": "},{"preciseIdentifier":"s:8NIOHTTP116HTTPResponseHeadV","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/HTTPResponseHead","kind":"typeIdentifier","text":"HTTPResponseHead"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:7NIOCore15EventLoopFutureC","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture","kind":"typeIdentifier","text":"EventLoopFuture"},{"kind":"text","text":"<"},{"preciseIdentifier":"s:s4Voida","kind":"typeIdentifier","text":"Void"},{"kind":"text","text":">"}],"languages":["swift"]}],"kind":"declarations"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/niohttp1\/niohttpclientprotocolupgrader\/upgrade(context:upgraderesponse:)"]}],"abstract":[{"text":"Called when the upgrade response has been flushed. At this time it is safe to mutate the channel","type":"text"},{"text":" ","type":"text"},{"text":"pipeline to add whatever channel handlers are required.","type":"text"},{"text":" ","type":"text"},{"text":"Until the returned ","type":"text"},{"code":"EventLoopFuture","type":"codeVoice"},{"text":" succeeds, all received data will be buffered.","type":"text"}],"references":{"doc://co.pointfree.VaporRouting/documentation/NIOHTTP1":{"role":"collection","url":"\/documentation\/niohttp1","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1","type":"topic","abstract":[],"title":"NIOHTTP1","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelHandlerContext":{"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ChannelHandlerContext","kind":"identifier"}],"url":"\/documentation\/niocore\/channelhandlercontext","type":"topic","role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelHandlerContext","title":"ChannelHandlerContext","navigatorTitle":[{"text":"ChannelHandlerContext","kind":"identifier"}],"abstract":[{"text":"Every ","type":"text"},{"type":"codeVoice","code":"ChannelHandler"},{"text":" has – when added to a ","type":"text"},{"type":"codeVoice","code":"ChannelPipeline"},{"text":" – a corresponding ","type":"text"},{"type":"codeVoice","code":"ChannelHandlerContext"},{"text":" which is","type":"text"},{"text":" ","type":"text"},{"text":"the way ","type":"text"},{"type":"codeVoice","code":"ChannelHandler"},{"text":"s can interact with other ","type":"text"},{"type":"codeVoice","code":"ChannelHandler"},{"text":"s in the pipeline.","type":"text"}],"kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP1/HTTPResponseHead":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/HTTPResponseHead","type":"topic","abstract":[{"text":"A representation of the status line and header fields of a HTTP response.","type":"text"}],"role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HTTPResponseHead","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/niohttp1\/httpresponsehead","navigatorTitle":[{"text":"HTTPResponseHead","kind":"identifier"}],"title":"HTTPResponseHead"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoopFuture":{"navigatorTitle":[{"kind":"identifier","text":"EventLoopFuture"}],"abstract":[{"text":"Holder for a result that will be provided later.","type":"text"}],"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"EventLoopFuture"}],"kind":"symbol","url":"\/documentation\/niocore\/eventloopfuture","role":"symbol","title":"EventLoopFuture","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture","type":"topic"},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP1/NIOHTTPClientProtocolUpgrader/upgrade(context:upgradeResponse:)":{"required":true,"title":"upgrade(context:upgradeResponse:)","kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/NIOHTTPClientProtocolUpgrader\/upgrade(context:upgradeResponse:)","url":"\/documentation\/niohttp1\/niohttpclientprotocolupgrader\/upgrade(context:upgraderesponse:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"upgrade","kind":"identifier"},{"text":"(","kind":"text"},{"text":"context","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC","text":"ChannelHandlerContext"},{"kind":"text","text":", "},{"kind":"externalParam","text":"upgradeResponse"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:8NIOHTTP116HTTPResponseHeadV","text":"HTTPResponseHead"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"kind":"text","text":">"}],"role":"symbol","type":"topic","abstract":[{"text":"Called when the upgrade response has been flushed. At this time it is safe to mutate the channel","type":"text"},{"text":" ","type":"text"},{"text":"pipeline to add whatever channel handlers are required.","type":"text"},{"text":" ","type":"text"},{"text":"Until the returned ","type":"text"},{"code":"EventLoopFuture","type":"codeVoice"},{"text":" succeeds, all received data will be buffered.","type":"text"}]},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP1/NIOHTTPClientProtocolUpgrader":{"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"NIOHTTPClientProtocolUpgrader","kind":"identifier"}],"role":"symbol","url":"\/documentation\/niohttp1\/niohttpclientprotocolupgrader","abstract":[{"text":"An object that implements ","type":"text"},{"type":"codeVoice","code":"NIOHTTPClientProtocolUpgrader"},{"text":" knows how to handle HTTP upgrade to","type":"text"},{"text":" ","type":"text"},{"text":"a protocol on a client-side channel.","type":"text"},{"text":" ","type":"text"},{"text":"It has the option of denying this upgrade based upon the server response.","type":"text"}],"kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/NIOHTTPClientProtocolUpgrader","navigatorTitle":[{"text":"NIOHTTPClientProtocolUpgrader","kind":"identifier"}],"title":"NIOHTTPClientProtocolUpgrader","type":"topic"}}}