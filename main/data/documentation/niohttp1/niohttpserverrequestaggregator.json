{"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["Linux"],"tokens":[{"kind":"keyword","text":"final"},{"kind":"text","text":" "},{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"NIOHTTPServerRequestAggregator"}]}]},{"content":[{"anchor":"overview","level":2,"text":"Overview","type":"heading"},{"type":"paragraph","inlineContent":[{"text":"This is achieved by buffering the contents of all received ","type":"text"},{"code":"HTTPServerRequestPart","type":"codeVoice"},{"text":" ","type":"text"},{"text":"messages until ","type":"text"},{"code":"HTTPServerRequestPart.end","type":"codeVoice"},{"text":" is received, then assembling the","type":"text"},{"text":" ","type":"text"},{"text":"full message and firing a channel read upstream with it. It is useful for when you do not","type":"text"},{"text":" ","type":"text"},{"text":"want to deal with chunked messages and just want to receive everything at once, and","type":"text"},{"text":" ","type":"text"},{"text":"are happy with the additional memory used and delay handling of the message until","type":"text"},{"text":" ","type":"text"},{"text":"everything has been received.","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"NIOHTTPServerRequestAggregator"},{"type":"text","text":" may end up sending a "},{"type":"codeVoice","code":"HTTPResponseHead"},{"type":"text","text":":"}]},{"items":[{"content":[{"inlineContent":[{"text":"Response status ","type":"text"},{"type":"codeVoice","code":"413 Request Entity Too Large"},{"text":" when either the","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"content-length"},{"text":" or the bytes received so far exceed ","type":"text"},{"type":"codeVoice","code":"maxContentLength"},{"text":".","type":"text"}],"type":"paragraph"}]}],"type":"unorderedList"},{"type":"paragraph","inlineContent":[{"code":"NIOHTTPServerRequestAggregator","type":"codeVoice"},{"type":"text","text":" may close the connection if it is impossible"},{"type":"text","text":" "},{"type":"text","text":"to recover:"}]},{"items":[{"content":[{"inlineContent":[{"type":"text","text":"If "},{"type":"codeVoice","code":"content-length"},{"type":"text","text":" is too large and "},{"type":"codeVoice","code":"keep-alive"},{"type":"text","text":" is off."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"If the bytes received exceed ","type":"text"},{"type":"codeVoice","code":"maxContentLength"},{"text":" and the client didnâ€™t signal","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"content-length"}],"type":"paragraph"}]}],"type":"unorderedList"}],"kind":"content"}],"metadata":{"externalID":"s:8NIOHTTP130NIOHTTPServerRequestAggregatorC","symbolKind":"class","modules":[{"name":"NIOHTTP1"}],"title":"NIOHTTPServerRequestAggregator","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"NIOHTTPServerRequestAggregator"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"NIOHTTPServerRequestAggregator"}],"roleHeading":"Class"},"relationshipsSections":[{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelHandler","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelInboundHandler","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/RemovableChannelHandler"],"kind":"relationships","title":"Conforms To","type":"conformsTo"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/niohttp1\/niohttpserverrequestaggregator"]}],"sections":[],"abstract":[{"text":"A ","type":"text"},{"code":"ChannelInboundHandler","type":"codeVoice"},{"text":" that handles HTTP chunked ","type":"text"},{"code":"HTTPServerRequestPart","type":"codeVoice"},{"text":" ","type":"text"},{"text":"messages by aggregating individual message chunks into a single","type":"text"},{"text":" ","type":"text"},{"code":"NIOHTTPServerRequestFull","type":"codeVoice"},{"text":".","type":"text"}],"topicSections":[{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/NIOHTTPServerRequestAggregator\/init(maxContentLength:closeOnExpectationFailed:)"],"title":"Initializers"},{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/NIOHTTPServerRequestAggregator\/channelRead(context:data:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/NIOHTTPServerRequestAggregator\/handlerAdded(context:)"],"title":"Instance Methods"},{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/NIOHTTPServerRequestAggregator\/InboundIn","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/NIOHTTPServerRequestAggregator\/InboundOut","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/NIOHTTPServerRequestAggregator\/OutboundOut"],"title":"Type Aliases"},{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/NIOHTTPServerRequestAggregator\/ChannelHandler-Implementations","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/NIOHTTPServerRequestAggregator\/ChannelInboundHandler-Implementations","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/NIOHTTPServerRequestAggregator\/RemovableChannelHandler-Implementations"],"generated":true,"title":"Default Implementations"}],"kind":"symbol","schemaVersion":{"minor":3,"major":0,"patch":0},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/NIOHTTPServerRequestAggregator"},"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1"]]},"references":{"doc://co.pointfree.VaporRouting/documentation/NIOHTTP1/NIOHTTPServerRequestAggregator/InboundOut":{"type":"topic","navigatorTitle":[{"text":"InboundOut","kind":"identifier"}],"role":"symbol","title":"NIOHTTPServerRequestAggregator.InboundOut","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"InboundOut","kind":"identifier"}],"abstract":[{"text":"The type of the inbound data which will be forwarded to the next ","type":"text"},{"type":"codeVoice","code":"ChannelInboundHandler"},{"text":" in the ","type":"text"},{"type":"codeVoice","code":"ChannelPipeline"},{"text":".","type":"text"}],"kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/NIOHTTPServerRequestAggregator\/InboundOut","url":"\/documentation\/niohttp1\/niohttpserverrequestaggregator\/inboundout"},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP1/NIOHTTPServerRequestAggregator/handlerAdded(context:)":{"type":"topic","role":"symbol","title":"handlerAdded(context:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"handlerAdded","kind":"identifier"},{"text":"(","kind":"text"},{"text":"context","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"ChannelHandlerContext","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC"},{"text":")","kind":"text"}],"abstract":[{"text":"Called when this ","type":"text"},{"type":"codeVoice","code":"ChannelHandler"},{"text":" is added to the ","type":"text"},{"type":"codeVoice","code":"ChannelPipeline"},{"text":".","type":"text"}],"kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/NIOHTTPServerRequestAggregator\/handlerAdded(context:)","url":"\/documentation\/niohttp1\/niohttpserverrequestaggregator\/handleradded(context:)"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelHandler":{"title":"ChannelHandler","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ChannelHandler"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelHandler","kind":"symbol","abstract":[{"type":"text","text":"You should "},{"inlineContent":[{"text":"never","type":"text"}],"type":"emphasis"},{"type":"text","text":" implement this protocol directly. Please implement one of its sub-protocols."}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"ChannelHandler"}],"url":"\/documentation\/niocore\/channelhandler","type":"topic"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/RemovableChannelHandler":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/RemovableChannelHandler","title":"RemovableChannelHandler","kind":"symbol","type":"topic","url":"\/documentation\/niocore\/removablechannelhandler","role":"symbol","abstract":[{"type":"text","text":"A "},{"code":"RemovableChannelHandler","type":"codeVoice"},{"text":" is a ","type":"text"},{"code":"ChannelHandler","type":"codeVoice"},{"text":" that can be dynamically removed from a ","type":"text"},{"code":"ChannelPipeline","type":"codeVoice"},{"text":" whilst","type":"text"},{"text":" ","type":"text"},{"text":"the ","type":"text"},{"code":"Channel","type":"codeVoice"},{"text":" is operating normally.","type":"text"},{"text":" ","type":"text"},{"text":"A ","type":"text"},{"code":"RemovableChannelHandler","type":"codeVoice"},{"text":" is required to remove itself from the ","type":"text"},{"code":"ChannelPipeline","type":"codeVoice"},{"text":" (using","type":"text"},{"text":" ","type":"text"},{"code":"ChannelHandlerContext.removeHandler","type":"codeVoice"},{"text":") as soon as possible.","type":"text"}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"RemovableChannelHandler"}],"navigatorTitle":[{"kind":"identifier","text":"RemovableChannelHandler"}]},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP1/NIOHTTPServerRequestAggregator/ChannelInboundHandler-Implementations":{"type":"topic","role":"collectionGroup","title":"ChannelInboundHandler Implementations","abstract":[],"kind":"article","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/NIOHTTPServerRequestAggregator\/ChannelInboundHandler-Implementations","url":"\/documentation\/niohttp1\/niohttpserverrequestaggregator\/channelinboundhandler-implementations"},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP1/NIOHTTPServerRequestAggregator/init(maxContentLength:closeOnExpectationFailed:)":{"type":"topic","role":"symbol","title":"init(maxContentLength:closeOnExpectationFailed:)","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"maxContentLength","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"text":", ","kind":"text"},{"text":"closeOnExpectationFailed","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"text":")","kind":"text"}],"abstract":[],"kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/NIOHTTPServerRequestAggregator\/init(maxContentLength:closeOnExpectationFailed:)","url":"\/documentation\/niohttp1\/niohttpserverrequestaggregator\/init(maxcontentlength:closeonexpectationfailed:)"},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP1":{"role":"collection","url":"\/documentation\/niohttp1","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1","type":"topic","abstract":[],"title":"NIOHTTP1","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP1/NIOHTTPServerRequestAggregator/channelRead(context:data:)":{"type":"topic","role":"symbol","title":"channelRead(context:data:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"channelRead","kind":"identifier"},{"text":"(","kind":"text"},{"text":"context","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"ChannelHandlerContext","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC"},{"text":", ","kind":"text"},{"text":"data","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"NIOAny","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore6NIOAnyV"},{"text":")","kind":"text"}],"abstract":[{"text":"Called when some data has been read from the remote peer.","type":"text"}],"kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/NIOHTTPServerRequestAggregator\/channelRead(context:data:)","url":"\/documentation\/niohttp1\/niohttpserverrequestaggregator\/channelread(context:data:)"},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP1/NIOHTTPServerRequestAggregator/ChannelHandler-Implementations":{"role":"collectionGroup","title":"ChannelHandler Implementations","kind":"article","type":"topic","abstract":[],"url":"\/documentation\/niohttp1\/niohttpserverrequestaggregator\/channelhandler-implementations","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/NIOHTTPServerRequestAggregator\/ChannelHandler-Implementations"},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP1/NIOHTTPServerRequestAggregator/RemovableChannelHandler-Implementations":{"type":"topic","role":"collectionGroup","title":"RemovableChannelHandler Implementations","abstract":[],"kind":"article","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/NIOHTTPServerRequestAggregator\/RemovableChannelHandler-Implementations","url":"\/documentation\/niohttp1\/niohttpserverrequestaggregator\/removablechannelhandler-implementations"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelInboundHandler":{"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ChannelInboundHandler"}],"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelInboundHandler","title":"ChannelInboundHandler","url":"\/documentation\/niocore\/channelinboundhandler","role":"symbol","kind":"symbol","abstract":[{"code":"ChannelHandler","type":"codeVoice"},{"type":"text","text":" which handles inbound I\/O events for a "},{"code":"Channel","type":"codeVoice"},{"type":"text","text":"."}],"navigatorTitle":[{"kind":"identifier","text":"ChannelInboundHandler"}]},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP1/NIOHTTPServerRequestAggregator/InboundIn":{"type":"topic","navigatorTitle":[{"text":"InboundIn","kind":"identifier"}],"role":"symbol","title":"NIOHTTPServerRequestAggregator.InboundIn","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"InboundIn","kind":"identifier"}],"abstract":[{"text":"The type of the inbound data which is wrapped in ","type":"text"},{"type":"codeVoice","code":"NIOAny"},{"text":".","type":"text"}],"kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/NIOHTTPServerRequestAggregator\/InboundIn","url":"\/documentation\/niohttp1\/niohttpserverrequestaggregator\/inboundin"},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP1/NIOHTTPServerRequestAggregator/OutboundOut":{"type":"topic","navigatorTitle":[{"text":"OutboundOut","kind":"identifier"}],"role":"symbol","title":"NIOHTTPServerRequestAggregator.OutboundOut","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"OutboundOut","kind":"identifier"}],"abstract":[{"text":"The type of the outbound data which will be forwarded to the next ","type":"text"},{"type":"codeVoice","code":"ChannelOutboundHandler"},{"text":" in the ","type":"text"},{"type":"codeVoice","code":"ChannelPipeline"},{"text":".","type":"text"}],"kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/NIOHTTPServerRequestAggregator\/OutboundOut","url":"\/documentation\/niohttp1\/niohttpserverrequestaggregator\/outboundout"},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP1/NIOHTTPServerRequestAggregator":{"abstract":[{"text":"A ","type":"text"},{"code":"ChannelInboundHandler","type":"codeVoice"},{"text":" that handles HTTP chunked ","type":"text"},{"code":"HTTPServerRequestPart","type":"codeVoice"},{"text":" ","type":"text"},{"text":"messages by aggregating individual message chunks into a single","type":"text"},{"text":" ","type":"text"},{"code":"NIOHTTPServerRequestFull","type":"codeVoice"},{"text":".","type":"text"}],"url":"\/documentation\/niohttp1\/niohttpserverrequestaggregator","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/NIOHTTPServerRequestAggregator","title":"NIOHTTPServerRequestAggregator","type":"topic","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"NIOHTTPServerRequestAggregator"}],"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"NIOHTTPServerRequestAggregator"}],"role":"symbol"}}}