{"schemaVersion":{"minor":3,"patch":0,"major":0},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/niohttp1\/niohttpclientprotocolupgrader"]}],"topicSections":[{"title":"Instance Properties","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/NIOHTTPClientProtocolUpgrader\/requiredUpgradeHeaders","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/NIOHTTPClientProtocolUpgrader\/supportedProtocol"]},{"title":"Instance Methods","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/NIOHTTPClientProtocolUpgrader\/addCustom(upgradeRequestHeaders:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/NIOHTTPClientProtocolUpgrader\/shouldAllowUpgrade(upgradeResponse:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/NIOHTTPClientProtocolUpgrader\/upgrade(context:upgradeResponse:)"]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/NIOHTTPClientProtocolUpgrader"},"relationshipsSections":[{"title":"Conforming Types","kind":"relationships","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/NIOWebSocketClientUpgrader"],"type":"conformingTypes"}],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1"]]},"sections":[],"abstract":[{"text":"An object that implements ","type":"text"},{"code":"NIOHTTPClientProtocolUpgrader","type":"codeVoice"},{"text":" knows how to handle HTTP upgrade to","type":"text"},{"text":" ","type":"text"},{"text":"a protocol on a client-side channel.","type":"text"},{"text":" ","type":"text"},{"text":"It has the option of denying this upgrade based upon the server response.","type":"text"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"NIOHTTPClientProtocolUpgrader","kind":"identifier"}]}]}],"metadata":{"roleHeading":"Protocol","role":"symbol","symbolKind":"protocol","modules":[{"name":"NIOHTTP1"}],"title":"NIOHTTPClientProtocolUpgrader","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"NIOHTTPClientProtocolUpgrader"}],"navigatorTitle":[{"kind":"identifier","text":"NIOHTTPClientProtocolUpgrader"}],"externalID":"s:8NIOHTTP129NIOHTTPClientProtocolUpgraderP"},"references":{"doc://co.pointfree.VaporRouting/documentation/NIOHTTP1/NIOHTTPClientProtocolUpgrader/supportedProtocol":{"title":"supportedProtocol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/NIOHTTPClientProtocolUpgrader\/supportedProtocol","required":true,"type":"topic","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"supportedProtocol","kind":"identifier"},{"text":": ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"}],"url":"\/documentation\/niohttp1\/niohttpclientprotocolupgrader\/supportedprotocol","abstract":[{"text":"The protocol this upgrader knows how to support.","type":"text"}],"kind":"symbol","role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP1/NIOHTTPClientProtocolUpgrader/shouldAllowUpgrade(upgradeResponse:)":{"title":"shouldAllowUpgrade(upgradeResponse:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/NIOHTTPClientProtocolUpgrader\/shouldAllowUpgrade(upgradeResponse:)","required":true,"type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"shouldAllowUpgrade","kind":"identifier"},{"text":"(","kind":"text"},{"text":"upgradeResponse","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:8NIOHTTP116HTTPResponseHeadV","kind":"typeIdentifier","text":"HTTPResponseHead"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"}],"url":"\/documentation\/niohttp1\/niohttpclientprotocolupgrader\/shouldallowupgrade(upgraderesponse:)","abstract":[{"text":"Gives the receiving upgrader the chance to deny the upgrade based on the upgrade HTTP response.","type":"text"}],"kind":"symbol","role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP1":{"role":"collection","url":"\/documentation\/niohttp1","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1","type":"topic","abstract":[],"title":"NIOHTTP1","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP1/NIOHTTPClientProtocolUpgrader/requiredUpgradeHeaders":{"title":"requiredUpgradeHeaders","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/NIOHTTPClientProtocolUpgrader\/requiredUpgradeHeaders","required":true,"type":"topic","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"requiredUpgradeHeaders"},{"kind":"text","text":": ["},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"kind":"text","text":"]"}],"url":"\/documentation\/niohttp1\/niohttpclientprotocolupgrader\/requiredupgradeheaders","abstract":[{"text":"All the header fields the protocol requires in the request to successfully upgrade.","type":"text"},{"text":" ","type":"text"},{"text":"These header fields will be added to the outbound request’s “Connection” header field.","type":"text"},{"text":" ","type":"text"},{"text":"It is the responsibility of the custom headers call to actually add these required headers.","type":"text"}],"kind":"symbol","role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP1/NIOHTTPClientProtocolUpgrader/addCustom(upgradeRequestHeaders:)":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"addCustom"},{"kind":"text","text":"("},{"kind":"externalParam","text":"upgradeRequestHeaders"},{"kind":"text","text":": "},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"preciseIdentifier":"s:8NIOHTTP111HTTPHeadersV","kind":"typeIdentifier","text":"HTTPHeaders"},{"kind":"text","text":")"}],"url":"\/documentation\/niohttp1\/niohttpclientprotocolupgrader\/addcustom(upgraderequestheaders:)","role":"symbol","abstract":[{"type":"text","text":"Additional headers to be added to the request, beyond the “Upgrade” and “Connection” headers."}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/NIOHTTPClientProtocolUpgrader\/addCustom(upgradeRequestHeaders:)","type":"topic","required":true,"title":"addCustom(upgradeRequestHeaders:)","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP1/NIOHTTPClientProtocolUpgrader/upgrade(context:upgradeResponse:)":{"required":true,"title":"upgrade(context:upgradeResponse:)","kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/NIOHTTPClientProtocolUpgrader\/upgrade(context:upgradeResponse:)","url":"\/documentation\/niohttp1\/niohttpclientprotocolupgrader\/upgrade(context:upgraderesponse:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"upgrade","kind":"identifier"},{"text":"(","kind":"text"},{"text":"context","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC","text":"ChannelHandlerContext"},{"kind":"text","text":", "},{"kind":"externalParam","text":"upgradeResponse"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:8NIOHTTP116HTTPResponseHeadV","text":"HTTPResponseHead"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"kind":"text","text":">"}],"role":"symbol","type":"topic","abstract":[{"text":"Called when the upgrade response has been flushed. At this time it is safe to mutate the channel","type":"text"},{"text":" ","type":"text"},{"text":"pipeline to add whatever channel handlers are required.","type":"text"},{"text":" ","type":"text"},{"text":"Until the returned ","type":"text"},{"code":"EventLoopFuture","type":"codeVoice"},{"text":" succeeds, all received data will be buffered.","type":"text"}]},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP1/NIOHTTPClientProtocolUpgrader":{"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"NIOHTTPClientProtocolUpgrader","kind":"identifier"}],"role":"symbol","url":"\/documentation\/niohttp1\/niohttpclientprotocolupgrader","abstract":[{"text":"An object that implements ","type":"text"},{"type":"codeVoice","code":"NIOHTTPClientProtocolUpgrader"},{"text":" knows how to handle HTTP upgrade to","type":"text"},{"text":" ","type":"text"},{"text":"a protocol on a client-side channel.","type":"text"},{"text":" ","type":"text"},{"text":"It has the option of denying this upgrade based upon the server response.","type":"text"}],"kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/NIOHTTPClientProtocolUpgrader","navigatorTitle":[{"text":"NIOHTTPClientProtocolUpgrader","kind":"identifier"}],"title":"NIOHTTPClientProtocolUpgrader","type":"topic"},"doc://co.pointfree.VaporRouting/documentation/NIOWebSocket/NIOWebSocketClientUpgrader":{"navigatorTitle":[{"text":"NIOWebSocketClientUpgrader","kind":"identifier"}],"title":"NIOWebSocketClientUpgrader","abstract":[{"type":"text","text":"A "},{"code":"HTTPClientProtocolUpgrader","type":"codeVoice"},{"type":"text","text":" that knows how to do the WebSocket upgrade dance."}],"url":"\/documentation\/niowebsocket\/niowebsocketclientupgrader","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/NIOWebSocketClientUpgrader","role":"symbol","type":"topic","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"NIOWebSocketClientUpgrader","kind":"identifier"}],"kind":"symbol"}}}