{"sections":[],"abstract":[{"text":"Connected to an address.","type":"text"}],"metadata":{"roleHeading":"Case","role":"symbol","title":"DebugOutboundEventsHandler.Event.connect(address:)","symbolKind":"case","externalID":"s:9NIOExtras26DebugOutboundEventsHandlerC5EventO7connectyAE7NIOCore13SocketAddressO_tcAEmF","modules":[{"name":"NIOExtras"}],"fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"connect","kind":"identifier"},{"text":"(","kind":"text"},{"text":"address","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7NIOCore13SocketAddressO","text":"SocketAddress","kind":"typeIdentifier"},{"text":")","kind":"text"}]},"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"connect","kind":"identifier"},{"text":"(","kind":"text"},{"text":"address","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"SocketAddress","kind":"typeIdentifier","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/SocketAddress","preciseIdentifier":"s:7NIOCore13SocketAddressO"},{"text":")","kind":"text"}]}]}],"schemaVersion":{"patch":0,"major":0,"minor":3},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/nioextras\/debugoutboundeventshandler\/event\/connect(address:)"]}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/DebugOutboundEventsHandler","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/DebugOutboundEventsHandler\/Event"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/DebugOutboundEventsHandler\/Event\/connect(address:)"},"references":{"doc://co.pointfree.VaporRouting/documentation/NIOExtras":{"role":"collection","url":"\/documentation\/nioextras","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras","kind":"symbol","title":"NIOExtras","abstract":[]},"doc://co.pointfree.VaporRouting/documentation/NIOExtras/DebugOutboundEventsHandler/Event/connect(address:)":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/DebugOutboundEventsHandler\/Event\/connect(address:)","url":"\/documentation\/nioextras\/debugoutboundeventshandler\/event\/connect(address:)","role":"symbol","type":"topic","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"connect","kind":"identifier"},{"text":"(","kind":"text"},{"text":"address","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"SocketAddress","preciseIdentifier":"s:7NIOCore13SocketAddressO","kind":"typeIdentifier"},{"text":")","kind":"text"}],"abstract":[{"text":"Connected to an address.","type":"text"}],"kind":"symbol","title":"DebugOutboundEventsHandler.Event.connect(address:)"},"doc://co.pointfree.VaporRouting/documentation/NIOExtras/DebugOutboundEventsHandler/Event":{"kind":"symbol","abstract":[{"text":"All possible outbound events which could occur.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"Event"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/DebugOutboundEventsHandler\/Event","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"Event"}],"title":"DebugOutboundEventsHandler.Event","type":"topic","role":"symbol","url":"\/documentation\/nioextras\/debugoutboundeventshandler\/event"},"doc://co.pointfree.VaporRouting/documentation/NIOExtras/DebugInboundEventsHandler":{"kind":"symbol","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"DebugInboundEventsHandler"}],"abstract":[{"type":"codeVoice","code":"ChannelInboundHandler"},{"type":"text","text":" that prints all inbound events that pass through the pipeline by default,"},{"type":"text","text":" "},{"type":"text","text":"overridable by providing your own closure for custom logging. See "},{"type":"reference","isActive":true,"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/DebugOutboundEventsHandler"},{"type":"text","text":" for outbound events."}],"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"DebugInboundEventsHandler"}],"url":"\/documentation\/nioextras\/debuginboundeventshandler","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/DebugInboundEventsHandler","title":"DebugInboundEventsHandler"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/SocketAddress":{"type":"topic","abstract":[{"text":"Represent a socket address to which we may want to connect or bind.","type":"text"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/SocketAddress","navigatorTitle":[{"kind":"identifier","text":"SocketAddress"}],"url":"\/documentation\/niocore\/socketaddress","title":"SocketAddress","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"SocketAddress"}]},"doc://co.pointfree.VaporRouting/documentation/NIOExtras/DebugOutboundEventsHandler":{"kind":"symbol","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"DebugOutboundEventsHandler"}],"abstract":[{"type":"text","text":"ChannelOutboundHandler that prints all outbound events that pass through the pipeline by default,"},{"type":"text","text":" "},{"type":"text","text":"overridable by providing your own closure for custom logging. See "},{"type":"reference","isActive":true,"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/DebugInboundEventsHandler"},{"type":"text","text":" for inbound events."}],"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"DebugOutboundEventsHandler"}],"url":"\/documentation\/nioextras\/debugoutboundeventshandler","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/DebugOutboundEventsHandler","title":"DebugOutboundEventsHandler"}}}