{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/DebugOutboundEventsHandler\/Event\/bind(address:)"},"sections":[],"variants":[{"paths":["\/documentation\/nioextras\/debugoutboundeventshandler\/event\/bind(address:)"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/DebugOutboundEventsHandler","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/DebugOutboundEventsHandler\/Event"]]},"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"bind"},{"kind":"text","text":"("},{"kind":"externalParam","text":"address"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7NIOCore13SocketAddressO","kind":"typeIdentifier","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/SocketAddress","text":"SocketAddress"},{"kind":"text","text":")"}],"platforms":["Linux"]}],"kind":"declarations"}],"abstract":[{"text":"Bound to a ","type":"text"},{"code":"SocketAddress","type":"codeVoice"}],"kind":"symbol","schemaVersion":{"patch":0,"minor":3,"major":0},"metadata":{"symbolKind":"case","externalID":"s:9NIOExtras26DebugOutboundEventsHandlerC5EventO4bindyAE7NIOCore13SocketAddressO_tcAEmF","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"bind"},{"kind":"text","text":"("},{"kind":"externalParam","text":"address"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"SocketAddress","preciseIdentifier":"s:7NIOCore13SocketAddressO"},{"kind":"text","text":")"}],"title":"DebugOutboundEventsHandler.Event.bind(address:)","role":"symbol","roleHeading":"Case","modules":[{"name":"NIOExtras"}]},"references":{"doc://co.pointfree.VaporRouting/documentation/NIOExtras/DebugOutboundEventsHandler/Event/bind(address:)":{"fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"bind","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"address"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7NIOCore13SocketAddressO","kind":"typeIdentifier","text":"SocketAddress"},{"kind":"text","text":")"}],"abstract":[{"text":"Bound to a ","type":"text"},{"code":"SocketAddress","type":"codeVoice"}],"role":"symbol","title":"DebugOutboundEventsHandler.Event.bind(address:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/DebugOutboundEventsHandler\/Event\/bind(address:)","kind":"symbol","url":"\/documentation\/nioextras\/debugoutboundeventshandler\/event\/bind(address:)","type":"topic"},"doc://co.pointfree.VaporRouting/documentation/NIOExtras/DebugOutboundEventsHandler":{"kind":"symbol","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"DebugOutboundEventsHandler"}],"abstract":[{"type":"text","text":"ChannelOutboundHandler that prints all outbound events that pass through the pipeline by default,"},{"type":"text","text":" "},{"type":"text","text":"overridable by providing your own closure for custom logging. See "},{"type":"reference","isActive":true,"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/DebugInboundEventsHandler"},{"type":"text","text":" for inbound events."}],"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"DebugOutboundEventsHandler"}],"url":"\/documentation\/nioextras\/debugoutboundeventshandler","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/DebugOutboundEventsHandler","title":"DebugOutboundEventsHandler"},"doc://co.pointfree.VaporRouting/documentation/NIOExtras":{"role":"collection","url":"\/documentation\/nioextras","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras","kind":"symbol","title":"NIOExtras","abstract":[]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/SocketAddress":{"type":"topic","abstract":[{"text":"Represent a socket address to which we may want to connect or bind.","type":"text"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/SocketAddress","navigatorTitle":[{"kind":"identifier","text":"SocketAddress"}],"url":"\/documentation\/niocore\/socketaddress","title":"SocketAddress","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"SocketAddress"}]},"doc://co.pointfree.VaporRouting/documentation/NIOExtras/DebugInboundEventsHandler":{"kind":"symbol","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"DebugInboundEventsHandler"}],"abstract":[{"type":"codeVoice","code":"ChannelInboundHandler"},{"type":"text","text":" that prints all inbound events that pass through the pipeline by default,"},{"type":"text","text":" "},{"type":"text","text":"overridable by providing your own closure for custom logging. See "},{"type":"reference","isActive":true,"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/DebugOutboundEventsHandler"},{"type":"text","text":" for outbound events."}],"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"DebugInboundEventsHandler"}],"url":"\/documentation\/nioextras\/debuginboundeventshandler","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/DebugInboundEventsHandler","title":"DebugInboundEventsHandler"},"doc://co.pointfree.VaporRouting/documentation/NIOExtras/DebugOutboundEventsHandler/Event":{"kind":"symbol","abstract":[{"text":"All possible outbound events which could occur.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"Event"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/DebugOutboundEventsHandler\/Event","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"Event"}],"title":"DebugOutboundEventsHandler.Event","type":"topic","role":"symbol","url":"\/documentation\/nioextras\/debugoutboundeventshandler\/event"}}}