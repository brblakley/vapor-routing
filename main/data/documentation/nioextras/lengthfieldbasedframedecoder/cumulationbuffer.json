{"schemaVersion":{"patch":0,"minor":3,"major":0},"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/LengthFieldBasedFrameDecoder"]]},"metadata":{"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cumulationBuffer","kind":"identifier"},{"text":": ","kind":"text"},{"text":"ByteBuffer","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore10ByteBufferV"},{"text":"?","kind":"text"}],"modules":[{"name":"NIOExtras"}],"platforms":[],"symbolKind":"property","role":"symbol","roleHeading":"Instance Property","title":"cumulationBuffer","externalID":"s:9NIOExtras28LengthFieldBasedFrameDecoderC16cumulationBuffer7NIOCore04ByteH0VSgvp"},"primaryContentSections":[{"declarations":[{"platforms":["Linux"],"tokens":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"cumulationBuffer","kind":"identifier"},{"text":": ","kind":"text"},{"text":"ByteBuffer","preciseIdentifier":"s:7NIOCore10ByteBufferV","kind":"typeIdentifier","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ByteBuffer"},{"text":"?","kind":"text"}],"languages":["swift"]}],"kind":"declarations"}],"sections":[],"deprecationSummary":[{"type":"paragraph","inlineContent":[{"type":"text","text":"No longer used"}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/nioextras\/lengthfieldbasedframedecoder\/cumulationbuffer"]}],"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/LengthFieldBasedFrameDecoder\/cumulationBuffer","interfaceLanguage":"swift"},"kind":"symbol","references":{"doc://co.pointfree.VaporRouting/documentation/NIOExtras/LengthFieldBasedFrameDecoder/cumulationBuffer":{"title":"cumulationBuffer","type":"topic","url":"\/documentation\/nioextras\/lengthfieldbasedframedecoder\/cumulationbuffer","abstract":[],"deprecated":true,"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/LengthFieldBasedFrameDecoder\/cumulationBuffer","kind":"symbol","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cumulationBuffer","kind":"identifier"},{"text":": ","kind":"text"},{"text":"ByteBuffer","preciseIdentifier":"s:7NIOCore10ByteBufferV","kind":"typeIdentifier"},{"text":"?","kind":"text"}]},"doc://co.pointfree.VaporRouting/documentation/NIOExtras":{"role":"collection","url":"\/documentation\/nioextras","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras","kind":"symbol","title":"NIOExtras","abstract":[]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ByteBuffer":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ByteBuffer"}],"url":"\/documentation\/niocore\/bytebuffer","title":"ByteBuffer","kind":"symbol","type":"topic","abstract":[{"type":"codeVoice","code":"ByteBuffer"},{"type":"text","text":" stores contiguously allocated raw bytes. It is a random and sequential accessible sequence of zero or"},{"type":"text","text":" "},{"type":"text","text":"more bytes (octets)."}],"navigatorTitle":[{"kind":"identifier","text":"ByteBuffer"}],"role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ByteBuffer"},"doc://co.pointfree.VaporRouting/documentation/NIOExtras/LengthFieldBasedFrameDecoder":{"abstract":[{"text":"A decoder that splits the received ","type":"text"},{"code":"ByteBuffer","type":"codeVoice"},{"text":" by the number of bytes specified in a fixed length header","type":"text"},{"text":" ","type":"text"},{"text":"contained within the buffer.","type":"text"}],"type":"topic","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LengthFieldBasedFrameDecoder","kind":"identifier"}],"title":"LengthFieldBasedFrameDecoder","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/LengthFieldBasedFrameDecoder","navigatorTitle":[{"text":"LengthFieldBasedFrameDecoder","kind":"identifier"}],"url":"\/documentation\/nioextras\/lengthfieldbasedframedecoder","kind":"symbol","role":"symbol"}}}