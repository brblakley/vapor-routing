{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/nioextras\/fixedlengthframedecoder\/decoderadded(context:)"]}],"sections":[],"metadata":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"decoderAdded"},{"kind":"text","text":"("},{"kind":"externalParam","text":"context"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC","text":"ChannelHandlerContext"},{"kind":"text","text":")"}],"externalID":"s:7NIOCore20ByteToMessageDecoderPAAE12decoderAdded7contextyAA21ChannelHandlerContextC_tF::SYNTHESIZED::s:9NIOExtras23FixedLengthFrameDecoderC","symbolKind":"method","extendedModule":"NIOCore","modules":[{"name":"NIOExtras"}],"title":"decoderAdded(context:)","role":"symbol","roleHeading":"Instance Method"},"schemaVersion":{"patch":0,"major":0,"minor":3},"kind":"symbol","hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/FixedLengthFrameDecoder","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/FixedLengthFrameDecoder\/ByteToMessageDecoder-Implementations"]]},"abstract":[{"type":"text","text":"Called when this "},{"type":"codeVoice","code":"ByteToMessageDecoder"},{"type":"text","text":" is added to the "},{"type":"codeVoice","code":"ChannelPipeline"},{"type":"text","text":"."}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/FixedLengthFrameDecoder\/decoderAdded(context:)"},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"mutating"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"decoderAdded"},{"kind":"text","text":"("},{"kind":"externalParam","text":"context"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ChannelHandlerContext","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelHandlerContext","preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC"},{"kind":"text","text":")"}],"languages":["swift"],"platforms":["Linux"]}]},{"kind":"parameters","parameters":[{"name":"context","content":[{"inlineContent":[{"text":"The ","type":"text"},{"code":"ChannelHandlerContext","type":"codeVoice"},{"text":" which this ","type":"text"},{"code":"ByteToMessageDecoder","type":"codeVoice"},{"text":" belongs to.","type":"text"}],"type":"paragraph"}]}]}],"references":{"doc://co.pointfree.VaporRouting/documentation/NIOExtras/FixedLengthFrameDecoder/decoderAdded(context:)":{"url":"\/documentation\/nioextras\/fixedlengthframedecoder\/decoderadded(context:)","type":"topic","role":"symbol","abstract":[{"type":"text","text":"Called when this "},{"type":"codeVoice","code":"ByteToMessageDecoder"},{"type":"text","text":" is added to the "},{"type":"codeVoice","code":"ChannelPipeline"},{"type":"text","text":"."}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"decoderAdded","kind":"identifier"},{"text":"(","kind":"text"},{"text":"context","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC","text":"ChannelHandlerContext","kind":"typeIdentifier"},{"text":")","kind":"text"}],"title":"decoderAdded(context:)","kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/FixedLengthFrameDecoder\/decoderAdded(context:)"},"doc://co.pointfree.VaporRouting/documentation/NIOExtras/FixedLengthFrameDecoder/ByteToMessageDecoder-Implementations":{"url":"\/documentation\/nioextras\/fixedlengthframedecoder\/bytetomessagedecoder-implementations","role":"collectionGroup","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/FixedLengthFrameDecoder\/ByteToMessageDecoder-Implementations","abstract":[],"type":"topic","title":"ByteToMessageDecoder Implementations","kind":"article"},"doc://co.pointfree.VaporRouting/documentation/NIOExtras":{"role":"collection","url":"\/documentation\/nioextras","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras","kind":"symbol","title":"NIOExtras","abstract":[]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelHandlerContext":{"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ChannelHandlerContext","kind":"identifier"}],"url":"\/documentation\/niocore\/channelhandlercontext","type":"topic","role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelHandlerContext","title":"ChannelHandlerContext","navigatorTitle":[{"text":"ChannelHandlerContext","kind":"identifier"}],"abstract":[{"text":"Every ","type":"text"},{"type":"codeVoice","code":"ChannelHandler"},{"text":" has – when added to a ","type":"text"},{"type":"codeVoice","code":"ChannelPipeline"},{"text":" – a corresponding ","type":"text"},{"type":"codeVoice","code":"ChannelHandlerContext"},{"text":" which is","type":"text"},{"text":" ","type":"text"},{"text":"the way ","type":"text"},{"type":"codeVoice","code":"ChannelHandler"},{"text":"s can interact with other ","type":"text"},{"type":"codeVoice","code":"ChannelHandler"},{"text":"s in the pipeline.","type":"text"}],"kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOExtras/FixedLengthFrameDecoder":{"kind":"symbol","role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/FixedLengthFrameDecoder","navigatorTitle":[{"text":"FixedLengthFrameDecoder","kind":"identifier"}],"url":"\/documentation\/nioextras\/fixedlengthframedecoder","title":"FixedLengthFrameDecoder","type":"topic","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"FixedLengthFrameDecoder","kind":"identifier"}],"abstract":[{"type":"text","text":"A decoder that splits the received "},{"code":"ByteBuffer","type":"codeVoice"},{"type":"text","text":" by a fixed number"},{"type":"text","text":" "},{"type":"text","text":"of bytes. For example, if you received the following four fragmented packets:"}]}}}