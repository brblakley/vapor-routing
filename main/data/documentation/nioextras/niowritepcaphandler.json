{"kind":"symbol","sections":[],"variants":[{"paths":["\/documentation\/nioextras\/niowritepcaphandler"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"roleHeading":"Class","role":"symbol","title":"NIOWritePCAPHandler","navigatorTitle":[{"text":"NIOWritePCAPHandler","kind":"identifier"}],"symbolKind":"class","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"NIOWritePCAPHandler","kind":"identifier"}],"modules":[{"name":"NIOExtras"}],"externalID":"s:9NIOExtras19NIOWritePCAPHandlerC"},"topicSections":[{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/NIOWritePCAPHandler\/SynchronizedFileSink"],"title":"Classes"},{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/NIOWritePCAPHandler\/Settings"],"title":"Structures"},{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/NIOWritePCAPHandler\/init(mode:fakeLocalAddress:fakeRemoteAddress:fileSink:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/NIOWritePCAPHandler\/init(mode:fakeLocalAddress:fakeRemoteAddress:settings:fileSink:)"],"title":"Initializers"},{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/NIOWritePCAPHandler\/pcapFileHeader"],"title":"Type Properties"},{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/NIOWritePCAPHandler\/Mode"],"title":"Enumerations"},{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/NIOWritePCAPHandler\/ChannelHandler-Implementations","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/NIOWritePCAPHandler\/ChannelInboundHandler-Implementations","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/NIOWritePCAPHandler\/ChannelOutboundHandler-Implementations","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/NIOWritePCAPHandler\/RemovableChannelHandler-Implementations","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/NIOWritePCAPHandler\/_ChannelInboundHandler-Implementations","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/NIOWritePCAPHandler\/_ChannelOutboundHandler-Implementations","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/NIOWritePCAPHandler\/_EmittingChannelHandler-Implementations"],"title":"Default Implementations","generated":true}],"abstract":[{"text":"A ","type":"text"},{"code":"ChannelHandler","type":"codeVoice"},{"text":" that can write a ","type":"text"},{"isActive":true,"type":"reference","identifier":"https:\/\/en.wikipedia.org\/wiki\/Pcap"},{"text":" containing the send\/received","type":"text"},{"text":" ","type":"text"},{"text":"data as synthesized TCP packet captures.","type":"text"}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras"]]},"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/NIOWritePCAPHandler","interfaceLanguage":"swift"},"schemaVersion":{"minor":3,"major":0,"patch":0},"relationshipsSections":[{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelHandler","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelInboundHandler","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOutboundHandler","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/RemovableChannelHandler"],"title":"Conforms To","kind":"relationships","type":"conformsTo"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"NIOWritePCAPHandler","kind":"identifier"}]}]},{"kind":"content","content":[{"text":"Overview","anchor":"overview","level":2,"type":"heading"},{"type":"paragraph","inlineContent":[{"text":"You will be able to open the ","type":"text"},{"code":".pcap","type":"codeVoice"},{"text":" file in for example ","type":"text"},{"identifier":"https:\/\/www.wireshark.org","isActive":true,"type":"reference"},{"text":" or","type":"text"},{"text":" ","type":"text"},{"identifier":"http:\/\/www.tcpdump.org","isActive":true,"type":"reference"},{"text":". Using ","type":"text"},{"code":"NIOWritePCAPHandler","type":"codeVoice"},{"text":" to write your ","type":"text"},{"code":".pcap","type":"codeVoice"},{"text":" files can be useful for","type":"text"},{"text":" ","type":"text"},{"text":"example when your real network traffic is TLS protected (so ","type":"text"},{"code":"tcpdump","type":"codeVoice"},{"text":"\/Wireshark can’t read it directly), or if you","type":"text"},{"text":" ","type":"text"},{"text":"don’t have enough privileges on the running host to dump the network traffic.","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"reference","isActive":true,"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/NIOWritePCAPHandler"},{"type":"text","text":" will also work with Unix Domain Sockets in which case it will still synthesize a TCP packet"},{"type":"text","text":" "},{"type":"text","text":"capture with local address "},{"type":"codeVoice","code":"111.111.111.111"},{"type":"text","text":" (port "},{"type":"codeVoice","code":"1111"},{"type":"text","text":") and remote address "},{"type":"codeVoice","code":"222.222.222.222"},{"type":"text","text":" (port "},{"type":"codeVoice","code":"2222"},{"type":"text","text":")."}]}]}],"references":{"doc://co.pointfree.VaporRouting/documentation/NIOExtras/NIOWritePCAPHandler/_ChannelOutboundHandler-Implementations":{"role":"collectionGroup","url":"\/documentation\/nioextras\/niowritepcaphandler\/_channeloutboundhandler-implementations","abstract":[],"type":"topic","kind":"article","title":"_ChannelOutboundHandler Implementations","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/NIOWritePCAPHandler\/_ChannelOutboundHandler-Implementations"},"doc://co.pointfree.VaporRouting/documentation/NIOExtras/NIOWritePCAPHandler/SynchronizedFileSink":{"url":"\/documentation\/nioextras\/niowritepcaphandler\/synchronizedfilesink","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"SynchronizedFileSink"}],"type":"topic","navigatorTitle":[{"kind":"identifier","text":"SynchronizedFileSink"}],"title":"NIOWritePCAPHandler.SynchronizedFileSink","kind":"symbol","role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/NIOWritePCAPHandler\/SynchronizedFileSink","abstract":[{"type":"text","text":"A synchronised file sink that uses a "},{"type":"codeVoice","code":"DispatchQueue"},{"type":"text","text":" to do all the necessary write synchronously."}]},"doc://co.pointfree.VaporRouting/documentation/NIOExtras/NIOWritePCAPHandler/ChannelHandler-Implementations":{"role":"collectionGroup","type":"topic","title":"ChannelHandler Implementations","kind":"article","url":"\/documentation\/nioextras\/niowritepcaphandler\/channelhandler-implementations","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/NIOWritePCAPHandler\/ChannelHandler-Implementations","abstract":[]},"doc://co.pointfree.VaporRouting/documentation/NIOExtras/NIOWritePCAPHandler/Mode":{"role":"symbol","title":"NIOWritePCAPHandler.Mode","navigatorTitle":[{"kind":"identifier","text":"Mode"}],"type":"topic","kind":"symbol","abstract":[],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/NIOWritePCAPHandler\/Mode","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"Mode"}],"url":"\/documentation\/nioextras\/niowritepcaphandler\/mode"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelHandler":{"title":"ChannelHandler","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ChannelHandler"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelHandler","kind":"symbol","abstract":[{"type":"text","text":"You should "},{"inlineContent":[{"text":"never","type":"text"}],"type":"emphasis"},{"type":"text","text":" implement this protocol directly. Please implement one of its sub-protocols."}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"ChannelHandler"}],"url":"\/documentation\/niocore\/channelhandler","type":"topic"},"doc://co.pointfree.VaporRouting/documentation/NIOExtras/NIOWritePCAPHandler/init(mode:fakeLocalAddress:fakeRemoteAddress:fileSink:)":{"title":"init(mode:fakeLocalAddress:fakeRemoteAddress:fileSink:)","kind":"symbol","fragments":[{"text":"convenience","kind":"keyword"},{"text":" ","kind":"text"},{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"mode","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:9NIOExtras19NIOWritePCAPHandlerC","text":"NIOWritePCAPHandler","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:9NIOExtras19NIOWritePCAPHandlerC4ModeO","text":"Mode","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"fakeLocalAddress","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7NIOCore13SocketAddressO","text":"SocketAddress","kind":"typeIdentifier"},{"text":"?, ","kind":"text"},{"text":"fakeRemoteAddress","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"SocketAddress","preciseIdentifier":"s:7NIOCore13SocketAddressO"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"fileSink"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"ByteBuffer","preciseIdentifier":"s:7NIOCore10ByteBufferV"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":")"}],"role":"symbol","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/NIOWritePCAPHandler\/init(mode:fakeLocalAddress:fakeRemoteAddress:fileSink:)","url":"\/documentation\/nioextras\/niowritepcaphandler\/init(mode:fakelocaladdress:fakeremoteaddress:filesink:)","abstract":[{"type":"text","text":"Initialize a "},{"isActive":true,"type":"reference","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/NIOWritePCAPHandler"},{"type":"text","text":" with default settings."}]},"http://www.tcpdump.org":{"type":"link","url":"http:\/\/www.tcpdump.org","titleInlineContent":[{"type":"codeVoice","code":"tcpdump"}],"title":"tcpdump","identifier":"http:\/\/www.tcpdump.org"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelOutboundHandler":{"title":"ChannelOutboundHandler","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ChannelOutboundHandler"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOutboundHandler","kind":"symbol","abstract":[{"code":"ChannelHandler","type":"codeVoice"},{"type":"text","text":" which handles outbound I\/O events or intercept an outbound I\/O operation for a "},{"code":"Channel","type":"codeVoice"},{"type":"text","text":"."}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"ChannelOutboundHandler"}],"url":"\/documentation\/niocore\/channeloutboundhandler","type":"topic"},"doc://co.pointfree.VaporRouting/documentation/NIOExtras/NIOWritePCAPHandler/pcapFileHeader":{"type":"topic","role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"pcapFileHeader"},{"kind":"text","text":": "},{"text":"ByteBuffer","preciseIdentifier":"s:7NIOCore10ByteBufferV","kind":"typeIdentifier"}],"url":"\/documentation\/nioextras\/niowritepcaphandler\/pcapfileheader","title":"pcapFileHeader","abstract":[{"type":"text","text":"Reusable header for "},{"type":"codeVoice","code":".pcap"},{"type":"text","text":" file."}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/NIOWritePCAPHandler\/pcapFileHeader"},"doc://co.pointfree.VaporRouting/documentation/NIOExtras/NIOWritePCAPHandler/_EmittingChannelHandler-Implementations":{"type":"topic","role":"collectionGroup","kind":"article","url":"\/documentation\/nioextras\/niowritepcaphandler\/_emittingchannelhandler-implementations","title":"_EmittingChannelHandler Implementations","abstract":[],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/NIOWritePCAPHandler\/_EmittingChannelHandler-Implementations"},"doc://co.pointfree.VaporRouting/documentation/NIOExtras/NIOWritePCAPHandler":{"navigatorTitle":[{"kind":"identifier","text":"NIOWritePCAPHandler"}],"title":"NIOWritePCAPHandler","role":"symbol","type":"topic","kind":"symbol","url":"\/documentation\/nioextras\/niowritepcaphandler","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"NIOWritePCAPHandler"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/NIOWritePCAPHandler","abstract":[{"type":"text","text":"A "},{"type":"codeVoice","code":"ChannelHandler"},{"text":" that can write a ","type":"text"},{"identifier":"https:\/\/en.wikipedia.org\/wiki\/Pcap","isActive":true,"type":"reference"},{"text":" containing the send\/received","type":"text"},{"text":" ","type":"text"},{"text":"data as synthesized TCP packet captures.","type":"text"}]},"https://www.wireshark.org":{"type":"link","url":"https:\/\/www.wireshark.org","titleInlineContent":[{"type":"text","text":"Wireshark"}],"title":"Wireshark","identifier":"https:\/\/www.wireshark.org"},"https://en.wikipedia.org/wiki/Pcap":{"type":"link","url":"https:\/\/en.wikipedia.org\/wiki\/Pcap","titleInlineContent":[{"type":"codeVoice","code":".pcap"},{"type":"text","text":" file"}],"title":".pcap file","identifier":"https:\/\/en.wikipedia.org\/wiki\/Pcap"},"doc://co.pointfree.VaporRouting/documentation/NIOExtras":{"role":"collection","url":"\/documentation\/nioextras","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras","kind":"symbol","title":"NIOExtras","abstract":[]},"doc://co.pointfree.VaporRouting/documentation/NIOExtras/NIOWritePCAPHandler/Settings":{"url":"\/documentation\/nioextras\/niowritepcaphandler\/settings","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/NIOWritePCAPHandler\/Settings","title":"NIOWritePCAPHandler.Settings","kind":"symbol","role":"symbol","abstract":[{"type":"text","text":"Settings for "},{"type":"reference","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/NIOWritePCAPHandler","isActive":true},{"type":"text","text":"."}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Settings"}],"navigatorTitle":[{"kind":"identifier","text":"Settings"}],"type":"topic"},"doc://co.pointfree.VaporRouting/documentation/NIOExtras/NIOWritePCAPHandler/ChannelOutboundHandler-Implementations":{"type":"topic","role":"collectionGroup","kind":"article","url":"\/documentation\/nioextras\/niowritepcaphandler\/channeloutboundhandler-implementations","title":"ChannelOutboundHandler Implementations","abstract":[],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/NIOWritePCAPHandler\/ChannelOutboundHandler-Implementations"},"doc://co.pointfree.VaporRouting/documentation/NIOExtras/NIOWritePCAPHandler/RemovableChannelHandler-Implementations":{"type":"topic","kind":"article","title":"RemovableChannelHandler Implementations","url":"\/documentation\/nioextras\/niowritepcaphandler\/removablechannelhandler-implementations","role":"collectionGroup","abstract":[],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/NIOWritePCAPHandler\/RemovableChannelHandler-Implementations"},"doc://co.pointfree.VaporRouting/documentation/NIOExtras/NIOWritePCAPHandler/init(mode:fakeLocalAddress:fakeRemoteAddress:settings:fileSink:)":{"type":"topic","role":"symbol","kind":"symbol","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"mode"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"NIOWritePCAPHandler","preciseIdentifier":"s:9NIOExtras19NIOWritePCAPHandlerC"},{"kind":"text","text":"."},{"text":"Mode","preciseIdentifier":"s:9NIOExtras19NIOWritePCAPHandlerC4ModeO","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"fakeLocalAddress","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"SocketAddress","preciseIdentifier":"s:7NIOCore13SocketAddressO","kind":"typeIdentifier"},{"text":"?, ","kind":"text"},{"text":"fakeRemoteAddress","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"SocketAddress","preciseIdentifier":"s:7NIOCore13SocketAddressO","kind":"typeIdentifier"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"settings"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:9NIOExtras19NIOWritePCAPHandlerC","text":"NIOWritePCAPHandler"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:9NIOExtras19NIOWritePCAPHandlerC8SettingsV","text":"Settings"},{"kind":"text","text":", "},{"kind":"externalParam","text":"fileSink"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore10ByteBufferV","text":"ByteBuffer"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"kind":"text","text":")"}],"url":"\/documentation\/nioextras\/niowritepcaphandler\/init(mode:fakelocaladdress:fakeremoteaddress:settings:filesink:)","title":"init(mode:fakeLocalAddress:fakeRemoteAddress:settings:fileSink:)","abstract":[{"type":"text","text":"Initialize a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/NIOWritePCAPHandler"},{"type":"text","text":"."}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/NIOWritePCAPHandler\/init(mode:fakeLocalAddress:fakeRemoteAddress:settings:fileSink:)"},"doc://co.pointfree.VaporRouting/documentation/NIOExtras/NIOWritePCAPHandler/_ChannelInboundHandler-Implementations":{"type":"topic","role":"collectionGroup","kind":"article","url":"\/documentation\/nioextras\/niowritepcaphandler\/_channelinboundhandler-implementations","title":"_ChannelInboundHandler Implementations","abstract":[],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/NIOWritePCAPHandler\/_ChannelInboundHandler-Implementations"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/RemovableChannelHandler":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/RemovableChannelHandler","title":"RemovableChannelHandler","kind":"symbol","type":"topic","url":"\/documentation\/niocore\/removablechannelhandler","role":"symbol","abstract":[{"type":"text","text":"A "},{"code":"RemovableChannelHandler","type":"codeVoice"},{"text":" is a ","type":"text"},{"code":"ChannelHandler","type":"codeVoice"},{"text":" that can be dynamically removed from a ","type":"text"},{"code":"ChannelPipeline","type":"codeVoice"},{"text":" whilst","type":"text"},{"text":" ","type":"text"},{"text":"the ","type":"text"},{"code":"Channel","type":"codeVoice"},{"text":" is operating normally.","type":"text"},{"text":" ","type":"text"},{"text":"A ","type":"text"},{"code":"RemovableChannelHandler","type":"codeVoice"},{"text":" is required to remove itself from the ","type":"text"},{"code":"ChannelPipeline","type":"codeVoice"},{"text":" (using","type":"text"},{"text":" ","type":"text"},{"code":"ChannelHandlerContext.removeHandler","type":"codeVoice"},{"text":") as soon as possible.","type":"text"}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"RemovableChannelHandler"}],"navigatorTitle":[{"kind":"identifier","text":"RemovableChannelHandler"}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelInboundHandler":{"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ChannelInboundHandler"}],"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelInboundHandler","title":"ChannelInboundHandler","url":"\/documentation\/niocore\/channelinboundhandler","role":"symbol","kind":"symbol","abstract":[{"code":"ChannelHandler","type":"codeVoice"},{"type":"text","text":" which handles inbound I\/O events for a "},{"code":"Channel","type":"codeVoice"},{"type":"text","text":"."}],"navigatorTitle":[{"kind":"identifier","text":"ChannelInboundHandler"}]},"doc://co.pointfree.VaporRouting/documentation/NIOExtras/NIOWritePCAPHandler/ChannelInboundHandler-Implementations":{"kind":"article","title":"ChannelInboundHandler Implementations","abstract":[],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/NIOWritePCAPHandler\/ChannelInboundHandler-Implementations","role":"collectionGroup","type":"topic","url":"\/documentation\/nioextras\/niowritepcaphandler\/channelinboundhandler-implementations"}}}