{"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/nioextras\/serverquiescinghelper"]}],"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/ServerQuiescingHelper","interfaceLanguage":"swift"},"relationshipsSections":[{"type":"conformsTo","kind":"relationships","title":"Conforms To","identifiers":["doc:\/\/co.pointfree.VaporRouting\/s8SendableP"]}],"schemaVersion":{"patch":0,"minor":3,"major":0},"abstract":[{"type":"text","text":"Helper that can be used to orchestrate the quiescing of a server "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":" and all the child "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":"s that are"},{"type":"text","text":" "},{"type":"text","text":"open at a given point in time."}],"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/ServerQuiescingHelper\/init(group:)"]},{"title":"Instance Methods","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/ServerQuiescingHelper\/initiateShutdown(promise:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/ServerQuiescingHelper\/makeServerChannelHandler(channel:)"]}],"kind":"symbol","metadata":{"modules":[{"name":"NIOExtras"}],"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"ServerQuiescingHelper"}],"symbolKind":"class","title":"ServerQuiescingHelper","navigatorTitle":[{"kind":"identifier","text":"ServerQuiescingHelper"}],"role":"symbol","externalID":"s:9NIOExtras21ServerQuiescingHelperC","roleHeading":"Class"},"sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["Linux"],"tokens":[{"kind":"keyword","text":"final"},{"kind":"text","text":" "},{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"ServerQuiescingHelper"}]}]},{"content":[{"level":2,"anchor":"overview","text":"Overview","type":"heading"},{"inlineContent":[{"isActive":true,"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/ServerQuiescingHelper","type":"reference"},{"text":" makes it easy to collect all child ","type":"text"},{"code":"Channel","type":"codeVoice"},{"text":"s that a given server ","type":"text"},{"code":"Channel","type":"codeVoice"},{"text":" accepts. When","type":"text"},{"text":" ","type":"text"},{"text":"the quiescing period starts (that is when ","type":"text"},{"isActive":true,"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/ServerQuiescingHelper\/initiateShutdown(promise:)","type":"reference"},{"text":" is invoked), it will perform the","type":"text"},{"text":" ","type":"text"},{"text":"following actions:","type":"text"}],"type":"paragraph"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"close the server ","type":"text"},{"code":"Channel","type":"codeVoice"},{"text":" so no further connections get accepted","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"send a "},{"type":"codeVoice","code":"ChannelShouldQuiesceEvent"},{"type":"text","text":" user event to all currently still open child "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":"s"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"after all previously open child "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":"s have closed, notify the "},{"type":"codeVoice","code":"EventLoopPromise"},{"type":"text","text":" that was passed to "},{"type":"codeVoice","code":"shutdown"},{"type":"text","text":"."}]}]}],"type":"orderedList"},{"inlineContent":[{"text":"Example use:","type":"text"}],"type":"paragraph"},{"syntax":null,"code":["let group = MultiThreadedEventLoopGroup(numThreads: [...])","let quiesce = ServerQuiescingHelper(group: group)","let serverChannel = try ServerBootstrap(group: group)","    .serverChannelInitializer { channel in","        \/\/ add the collection handler so all accepted child channels get collected","        channel.pipeline.add(handler: quiesce.makeServerChannelHandler(channel: channel))","    }","    \/\/ further bootstrap configuration","    .bind([...])","    .wait()","\/\/ [...]","let fullyShutdownPromise: EventLoopPromise<Void> = group.next().newPromise()","\/\/ initiate the shutdown","quiesce.initiateShutdown(promise: fullyShutdownPromise)","\/\/ wait for the shutdown to complete","try fullyShutdownPromise.futureResult.wait()"],"type":"codeListing"}],"kind":"content"}],"references":{"doc://co.pointfree.VaporRouting/s8SendableP":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/s8SendableP","title":"Swift.Sendable","type":"unresolvable"},"doc://co.pointfree.VaporRouting/documentation/NIOExtras/ServerQuiescingHelper/init(group:)":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/ServerQuiescingHelper\/init(group:)","title":"init(group:)","abstract":[{"type":"text","text":"Initialize with a given "},{"type":"codeVoice","code":"EventLoopGroup"},{"type":"text","text":"."}],"kind":"symbol","type":"topic","url":"\/documentation\/nioextras\/serverquiescinghelper\/init(group:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"group"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"EventLoopGroup","preciseIdentifier":"s:7NIOCore14EventLoopGroupP"},{"text":")","kind":"text"}],"role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOExtras/ServerQuiescingHelper":{"type":"topic","kind":"symbol","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"ServerQuiescingHelper"}],"navigatorTitle":[{"kind":"identifier","text":"ServerQuiescingHelper"}],"role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/ServerQuiescingHelper","url":"\/documentation\/nioextras\/serverquiescinghelper","abstract":[{"text":"Helper that can be used to orchestrate the quiescing of a server ","type":"text"},{"type":"codeVoice","code":"Channel"},{"text":" and all the child ","type":"text"},{"type":"codeVoice","code":"Channel"},{"text":"s that are","type":"text"},{"text":" ","type":"text"},{"text":"open at a given point in time.","type":"text"}],"title":"ServerQuiescingHelper"},"doc://co.pointfree.VaporRouting/documentation/NIOExtras":{"role":"collection","url":"\/documentation\/nioextras","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras","kind":"symbol","title":"NIOExtras","abstract":[]},"doc://co.pointfree.VaporRouting/documentation/NIOExtras/ServerQuiescingHelper/initiateShutdown(promise:)":{"type":"topic","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"initiateShutdown"},{"kind":"text","text":"("},{"kind":"externalParam","text":"promise"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"EventLoopPromise","preciseIdentifier":"s:7NIOCore16EventLoopPromiseV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":">?)"}],"role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/ServerQuiescingHelper\/initiateShutdown(promise:)","url":"\/documentation\/nioextras\/serverquiescinghelper\/initiateshutdown(promise:)","abstract":[{"text":"Initiate the shutdown.","type":"text"}],"title":"initiateShutdown(promise:)"},"doc://co.pointfree.VaporRouting/documentation/NIOExtras/ServerQuiescingHelper/makeServerChannelHandler(channel:)":{"type":"topic","title":"makeServerChannelHandler(channel:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/ServerQuiescingHelper\/makeServerChannelHandler(channel:)","abstract":[{"type":"text","text":"Create the "},{"code":"ChannelHandler","type":"codeVoice"},{"type":"text","text":" for the server "},{"code":"channel","type":"codeVoice"},{"type":"text","text":" to collect all accepted child "},{"code":"Channel","type":"codeVoice"},{"type":"text","text":"s."}],"role":"symbol","url":"\/documentation\/nioextras\/serverquiescinghelper\/makeserverchannelhandler(channel:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"makeServerChannelHandler","kind":"identifier"},{"text":"(","kind":"text"},{"text":"channel","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7NIOCore7ChannelP","kind":"typeIdentifier","text":"Channel"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:7NIOCore14ChannelHandlerP","kind":"typeIdentifier","text":"ChannelHandler"}],"kind":"symbol"}}}